<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/3/2016 12:00:50 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="VDESK12"
  DTS:CreatorName="GMC\augusjx"
  DTS:DTSID="{0920379D-A2CB-4C99-8805-B1CF09095DC3}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.6020.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="AS400OrderStatusToDaikin"
  DTS:PackageType="5"
  DTS:VersionBuild="41"
  DTS:VersionGUID="{70BAB321-BC4C-4326-9019-2D0AD2DAA8F2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7A803D12-05F7-4EB3-A59D-16AA05A533E9}"
      DTS:ObjectName="OrderToQuote_Email_Cc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">jessmon.augustine@goodmanmfg.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{163F4832-2511-4C23-B969-E75B675A4B53}"
      DTS:ObjectName="OrderToQuote_Email_To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">jessmon.augustine@goodmanmfg.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{19FA3BEB-9B2B-45CC-A38D-BC05DA280EDB}"
      DTS:ObjectName="ORDER_UPDATE_API">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://tstsysdcity2/api/Order/UpdateOrderStatus</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A4103F0-CB73-4506-A5B9-D5B0A95FE812}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountHeaderDeletefail">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CBFB14DC-FF33-4C6A-B062-88C31837EC19}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountReadyToUpdate">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{77708EE0-F811-44E9-8484-CA5EC945A68C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7EC3B317-D852-4C02-A4DA-99D36223A7E5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionDetailID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7F333690-C30A-4F48-948C-20D124C9CD32}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionDetailResultTypeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3805A142-488C-4F42-8121-5A7CFD45DBF4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::OrderToQuote_Email_Cc]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionEmailCC">
      <DTS:VariableValue
        DTS:DataType="8">jessmon.augustine@goodmanmfg.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB7B667C-753A-4DAA-8D01-DEF0A01CC802}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::OrderToQuote_Email_To]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionEmailTo">
      <DTS:VariableValue
        DTS:DataType="8">jessmon.augustine@goodmanmfg.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2FD16601-2D9A-425E-8D7D-DDC22E105D65}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D391FEB4-392A-42EA-9521-0EC38DC409D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionLogConnectionName">
      <DTS:VariableValue
        DTS:DataType="8">dbDaikinProjectIntegrationADO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2557D923-7B15-4CCF-BF6F-8F6EB2B1C84A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionResultMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37EEC22F-73BD-473D-A93F-7556F02C0087}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionResultTypeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C692148B-296E-4CBC-9228-1FA22F684D23}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionRowCountBusinessFailures">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B9FDC7F-2A60-4B5E-906A-FB9393CBDA5C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionRowCountSuccesses">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00E9EB5A-0AB6-4FC7-87D8-2783C63B2901}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobExecutionRowCountSystemFailures">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BD87409-0CEB-43CA-AD8B-71826DB3A14C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobLastPickupDateTime">
      <DTS:VariableValue
        DTS:DataType="7">3/30/2016 3:16:50 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C60181BC-EBCC-41A1-A0DE-8AAB22078036}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobLastPickupDateTimeString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02DB8077-81A4-45CE-A272-D9D75108BC67}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobStatusUpdateFail">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C3419DF-CACC-40DE-86F6-F591532E0F23}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxInvoiceDateVal">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8D8B830E-3659-439E-9E13-6A982E2AA0C0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxOrderDateVal">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Last Pickup Date"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{59CC953D-FC00-4D39-90E5-0EC375D8A176}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Last Pickup Date"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4f260a98862e4b23b4ea553210f4fd4b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::JobExecutionLogConnectionName,System::PackageID,$Project::DbDaikinProjectOffice_ConnectionString"
          ReadWriteVariables="User::JobLastPickupDateTime,User::JobLastPickupDateTimeString,User::MaxInvoiceDateVal,User::MaxOrderDateVal">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e11e0bb1cee44ceb838e927006a25f38")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e11e0bb1cee44ceb838e927006a25f38")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4f260a98862e4b23b4ea553210f4fd4b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{70573C60-C0FC-4E1C-A68E-B79ACDD9B611}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e11e0bb1cee44ceb838e927006a25f38</RootNamespace>
    <AssemblyName>ST_4f260a98862e4b23b4ea553210f4fd4b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.Common;
using System.Globalization;
#endregion

namespace ST_e11e0bb1cee44ceb838e927006a25f38
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region Properties

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string PackageID
        {
            get
            {
                return (string)Dts.Variables["System::PackageID"].Value;
            }
        }

        public string DbDaikinProjectOffice_ConnectionString
        {
            get
            {
                return (string)Dts.Variables["$Project::DbDaikinProjectOffice_ConnectionString"].Value;
            }
        }


        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            this.LoadLastPickupDateAndTime();
            this.LoadMaxOrderDateNumeric();
            this.LoadMaxInvoiceDateNumeric();
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        public object AcquireConnection(object txn)
        {
            return ((ConnectionManager)Dts.Connections[this.JobExecutionLogConnectionName]).AcquireConnection(txn);
        }
                      

        private void LoadLastPickupDateAndTime()
        {
            DateTime dt = DateTime.MinValue;

            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                if (con.State != ConnectionState.Open)
                {
                    con.Open();
                }

                using (IDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = @"SELECT TOP 1 LastPickupDate	FROM [Logs].[job_run] WHERE PackageID = @PackageID";

                    DbParameter parm = cmd.CreateParameter() as DbParameter;// cmd.CreateParameter();
                    parm.ParameterName = "@PackageID";
                    parm.Value = Dts.Variables["PackageID"].Value;
                    parm.Direction = ParameterDirection.Input;
                    parm.DbType = DbType.String;
                    parm.Size = 255;
                    cmd.Parameters.Add(parm);

                    try
                    {
                        dt = (DateTime)cmd.ExecuteScalar();
                    }
                    catch(Exception ex)
                    {
                        dt = DateTime.MinValue;
                    }
                }
            }

            Dts.Variables["JobLastPickupDateTime"].Value = dt;
            Dts.Variables["JobLastPickupDateTimeString"].Value = dt.ToString("yyyyMMdd");
        }

        private void LoadMaxOrderDateNumeric()
        {
            DateTime dt = DateTime.MinValue;

            using (System.Data.OleDb.OleDbConnection con = new System.Data.OleDb.OleDbConnection(this.DbDaikinProjectOffice_ConnectionString))
            {
                if (con.State != ConnectionState.Open)
                {
                    con.Open();
                }

                using (System.Data.OleDb.OleDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = @"SELECT ERPORDERDATE = ISNULL(MAX(ERPORDERDATE),0) FROM dbo.Orders (NOLOCK)";
                    try
                    {
                        dt = (DateTime)cmd.ExecuteScalar();
                    }
                    catch (Exception ex)
                    {
                        dt = DateTime.MinValue;
                    }
                }
            }
            Dts.Variables["MaxOrderDateVal"].Value = Convert.ToInt32(dt.ToString("yyyyMMdd"));
        }

        private void LoadMaxInvoiceDateNumeric()
        {
            DateTime dt = DateTime.MinValue;

            using (System.Data.OleDb.OleDbConnection con = new System.Data.OleDb.OleDbConnection(this.DbDaikinProjectOffice_ConnectionString))
            {
                if (con.State != ConnectionState.Open)
                {
                    con.Open();
                }

                using (System.Data.OleDb.OleDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = @"SELECT ERPInvoiceDate =ISNULL(MAX(ERPInvoiceDate),0) FROM Orders (NOLOCK)";
                    try
                    {
                        dt = (DateTime)cmd.ExecuteScalar();
                    }
                    catch (Exception ex)
                    {
                        dt = DateTime.MinValue;
                    }
                }
            }
            Dts.Variables["MaxInvoiceDateVal"].Value = Convert.ToInt32(dt.ToString("yyyyMMdd"));
        }


	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e11e0bb1cee44ceb838e927006a25f38</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e11e0bb1cee44ceb838e927006a25f38</msb:DisplayName>
		<msb:ProjectId>{DA6B2D8F-A12D-473A-A7E9-C45C05CAD41E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4f260a98862e4b23b4ea553210f4fd4b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Settings.get_Default():ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Sett" +
    "ings")]

namespace ST_e11e0bb1cee44ceb838e927006a25f38.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e11e0bb1cee44ceb838e927006a25f38.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e11e0bb1cee44ceb838e927006a25f38.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4f260a98862e4b23b4ea553210f4fd4b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACcJKlcAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAA3jkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA5AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
OQAAAAAAAEgAAAACAAUA6CQAAKgUAAABAAAAAAAAADAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKct8AAHBvGAAACm8ZAAAKdB4AAAEq
fgIoDQAABgIoDgAABgIoDwAABgIoFgAAChZvGgAACip2AigWAAAKbxsAAAoCKAgAAAZvHAAACgNv
HQAACiobMAMACAEAAAIAABF+HgAACgoCFCgMAAAGdCIAAAELB28fAAAKFy4GB28gAAAKB28hAAAK
DAhyQQEAcG8iAAAKCG8jAAAKdSYAAAENCXLgAQBwbyQAAAoJAigWAAAKbxcAAApy9gEAcG8YAAAK
bxkAAApvJQAACgkXbyYAAAoJHxBvJwAACgkg/wAAAG8oAAAKCG8pAAAKCW8qAAAKJghvKwAACqUh
AAABCt4JJn4eAAAKCt4A3goILAYIbywAAArc3goHLAYHbywAAArcAigWAAAKbxcAAApyCgIAcG8Y
AAAKBowhAAABby0AAAoCKBYAAApvFwAACnI2AgBwbxgAAAoSAHJuAgBwKC4AAApvLQAACioBKAAA
AACSAA6gAAksAAABAgApAIKrAAoAAAAAAgATAKS3AAoAAAAAGzADAJMAAAADAAARfh4AAAoKAigK
AAAGcy8AAAoLB28wAAAKFy4GB28xAAAKB28yAAAKDAhygAIAcG8zAAAKCG80AAAKpSEAAAEK3gkm
fh4AAAoK3gDeCggsBghvLAAACtzeCgcsBgdvLAAACtwCKBYAAApvFwAACnIXAwBwbxgAAAoSAHJu
AgBwKC4AAAooNQAACowyAAABby0AAAoqAAEoAAAAADMADkEACSwAAAECACgAJEwACgAAAAACABIA
RlgACgAAAAAbMAMAkwAAAAMAABF+HgAACgoCKAoAAAZzLwAACgsHbzAAAAoXLgYHbzEAAAoHbzIA
AAoMCHI3AwBwbzMAAAoIbzQAAAqlIQAAAQreCSZ+HgAACgreAN4KCCwGCG8sAAAK3N4KBywGB28s
AAAK3AIoFgAACm8XAAAKcswDAHBvGAAAChIAcm4CAHAoLgAACig1AAAKjDIAAAFvLQAACioAASgA
AAAAMwAOQQAJLAAAAQIAKAAkTAAKAAAAAAIAEgBGWAAKAAAAAB4CKDYAAAoqtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIAFAAAjfgAA7AUAAOwIAAAjU3Ry
aW5ncwAAAADYDgAA8AMAACNVUwDIEgAAEAAAACNHVUlEAAAA2BIAANABAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+iUzABYAAAEAAAAyAAAABQAAAAYAAAAQAAAAAgAAADYAAAACAAAADwAAAAMA
AAADAAAABgAAAAcAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEU
AQYAWQG6AAYAbwFeAQYAoAGLAQYAYwNJAwYAjgN8AwYApQN8AwYAwgN8AwYA4QN8AwYA+gN8AwYA
EwR8AwYALgR8AwYASQR8AwYAYgR8AwYAmwR7BAYAuwR7BAYAEAX9BAYALQW6AAYAMgW6AAYAVgV8
AwoAggVsBQoAmwVsBQYAsAV7BA4A0gUUAQ4A9AUUARIATQYtBhIAZQYtBgYAgQa6ABIAlwYtBhIA
swYtBgYAxQa6ABYA4wbXBhYA8QbXBhYAEAfXBhYAOQfXBhYAbQdaBxYAlQfXBhYAtgfXBhYA0QfX
BgYADAj5BwYAJAi6AAYAQQi6ABYAXQhLCBYAbQhaBxYAeghLCBYAhwhaBwYAkQi6AAYAoQi6AAAA
AAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEA
AKMAAAARAAQAEQARAH8BEwARAKwBFwARAPYBOQAGBicDVABWgC8DVwBWgDcDVwBQIAAAAACDGLwB
GwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9
AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGMsFlgACALsgAAAAAIYIGgJHAAIA3CAAAAAAhgg8AkcA
AgD9IAAAAACGCEoCRwACAB4hAAAAAIYAdQIbAAIAPiEAAAAAhgB6AksAAgBcIQAAAACBAIwCGwAD
AJgiAAAAAIEApgIbAAMAYCMAAAAAgQC+AhsAAwAoJAAAAACGGLwBGwADAAAAAQA/AwAAAQBFAzkA
vAFlAEEAvAFlAEkAvAFlAFEAvAFlAFkAvAFlAGEAvAFlAGkAvAFlAHEAvAFlAHkAvAFlAIEAvAFl
AIkAvAFqAJEAvAEbAJkAvAEbAAkAvAEbAKEARAVvAKEAXwV2ACkAvAF7ALkAvAGHAMkAvAEbABEA
vAEbANEAvAEbABkABgaaANkAVwafAOEAbgakAOkAdwaqANkAiAZqANkAowauAPkAbgazAAEBegJL
AAkBzga6ABEBAQe/ABEBCwcbABEBGwfFACEBKQdlACEBSgfLADEBeQdlADEBiwfRADEBqAfWADEB
vQfdADEByAdqACEB6gfkAFEBEgjqACEBFgiqAFkBMAgbAOkAiwfRAAkBOAjvAGkBvAFlAHEBAQe/
AHEBCwcbAGkBGwcDAYEBKQdlAIEBFgiqAIkBmQgJARkAvAEbAAgAFABbAAgAGABgACkAkwCNAC4A
GwCLAS4AIwCLAS4AYwCxAS4ACwAaAS4AEwBiAS4AMwBiAS4AKwCLAS4AOwCRAS4AQwCLAS4AWwCo
AUMAawBgAEkAkwCNAGEAmwBgAIMAqwBgAIIA9AAOAQIAAQADAAMABAAEAAAAbwEvAAAA7gE0AAAA
EgJCAAAA2AJQAAAA9gJQAAAAAANQAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAAIACAAJAAIACQAL
AAIACgANAASAAAABAAAAUBejPAAAAAAAANkEAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKAA4GAAAAAAQAAAAA
AAAAAAAAAAEA1wYAAAAAAAAAAAEAAACnCAAABQAEAAAAAAAAPE1vZHVsZT4AU1RfNGYyNjBhOTg4
NjJlNGIyM2I0ZWE1NTMyMTBmNGZkNGIuZGxsAFJlc291cmNlcwBTVF9lMTFlMGJiMWNlZTQ0Y2Vi
ODM4ZTkyNzAwNmEyNWYzOC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZTExZTBi
YjFjZWU0NGNlYjgzOGU5MjcwMDZhMjVmMzgAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0A
T2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1
bHQAZ2V0X0pvYkV4ZWN1dGlvbkxvZ0Nvbm5lY3Rpb25OYW1lAGdldF9QYWNrYWdlSUQAZ2V0X0Ri
RGFpa2luUHJvamVjdE9mZmljZV9Db25uZWN0aW9uU3RyaW5nAE1haW4AQWNxdWlyZUNvbm5lY3Rp
b24ATG9hZExhc3RQaWNrdXBEYXRlQW5kVGltZQBMb2FkTWF4T3JkZXJEYXRlTnVtZXJpYwBMb2Fk
TWF4SW52b2ljZURhdGVOdW1lcmljAEpvYkV4ZWN1dGlvbkxvZ0Nvbm5lY3Rpb25OYW1lAFBhY2th
Z2VJRABEYkRhaWtpblByb2plY3RPZmZpY2VfQ29ubmVjdGlvblN0cmluZwB2YWx1ZV9fAFN1Y2Nl
c3MARmFpbHVyZQB2YWx1ZQB0eG4AU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzRmMjYwYTk4ODYyZTRiMjNiNGVhNTUzMjEwZjRmZDRi
AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5
c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBTdHJpbmcAc2V0
X1Rhc2tSZXN1bHQAQ29ubmVjdGlvbnMAZ2V0X0Nvbm5lY3Rpb25zAENvbm5lY3Rpb25NYW5hZ2Vy
AERhdGVUaW1lAE1pblZhbHVlAFN5c3RlbS5EYXRhAElEYkNvbm5lY3Rpb24AQ29ubmVjdGlvblN0
YXRlAGdldF9TdGF0ZQBPcGVuAElEYkNvbW1hbmQAQ3JlYXRlQ29tbWFuZABzZXRfQ29tbWFuZFRl
eHQASURiRGF0YVBhcmFtZXRlcgBDcmVhdGVQYXJhbWV0ZXIAU3lzdGVtLkRhdGEuQ29tbW9uAERi
UGFyYW1ldGVyAHNldF9QYXJhbWV0ZXJOYW1lAHNldF9WYWx1ZQBQYXJhbWV0ZXJEaXJlY3Rpb24A
c2V0X0RpcmVjdGlvbgBEYlR5cGUAc2V0X0RiVHlwZQBzZXRfU2l6ZQBJRGF0YVBhcmFtZXRlckNv
bGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMAU3lzdGVtLkNvbGxlY3Rpb25zAElMaXN0AEFkZABFeGVj
dXRlU2NhbGFyAElEaXNwb3NhYmxlAERpc3Bvc2UAVG9TdHJpbmcARXhjZXB0aW9uAFN5c3RlbS5E
YXRhLk9sZURiAE9sZURiQ29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AT2xlRGJDb21tYW5kAERiQ29t
bWFuZABDb252ZXJ0AFRvSW50MzIASW50MzIAU1RfZTExZTBiYjFjZWU0NGNlYjgzOGU5MjcwMDZh
MjVmMzguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFTAFQAXwBlADEAMQBlADAA
YgBiADEAYwBlAGUANAA0AGMAZQBiADgAMwA4AGUAOQAyADcAMAAwADYAYQAyADUAZgAzADgALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEdVAHMAZQByADoAOgBKAG8A
YgBFAHgAZQBjAHUAdABpAG8AbgBMAG8AZwBDAG8AbgBuAGUAYwB0AGkAbwBuAE4AYQBtAGUAACNT
AHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBJAEQAAGEkAFAAcgBvAGoAZQBjAHQAOgA6AEQA
YgBEAGEAaQBrAGkAbgBQAHIAbwBqAGUAYwB0AE8AZgBmAGkAYwBlAF8AQwBvAG4AbgBlAGMAdABp
AG8AbgBTAHQAcgBpAG4AZwAAgJ1TAEUATABFAEMAVAAgAFQATwBQACAAMQAgAEwAYQBzAHQAUABp
AGMAawB1AHAARABhAHQAZQAJAEYAUgBPAE0AIABbAEwAbwBnAHMAXQAuAFsAagBvAGIAXwByAHUA
bgBdACAAVwBIAEUAUgBFACAAUABhAGMAawBhAGcAZQBJAEQAIAA9ACAAQABQAGEAYwBrAGEAZwBl
AEkARAAAFUAAUABhAGMAawBhAGcAZQBJAEQAABNQAGEAYwBrAGEAZwBlAEkARAAAK0oAbwBiAEwA
YQBzAHQAUABpAGMAawB1AHAARABhAHQAZQBUAGkAbQBlAAA3SgBvAGIATABhAHMAdABQAGkAYwBr
AHUAcABEAGEAdABlAFQAaQBtAGUAUwB0AHIAaQBuAGcAABF5AHkAeQB5AE0ATQBkAGQAAICVUwBF
AEwARQBDAFQAIABFAFIAUABPAFIARABFAFIARABBAFQARQAgAD0AIABJAFMATgBVAEwATAAoAE0A
QQBYACgARQBSAFAATwBSAEQARQBSAEQAQQBUAEUAKQAsADAAKQAgAEYAUgBPAE0AIABkAGIAbwAu
AE8AcgBkAGUAcgBzACAAKABOAE8ATABPAEMASwApAAAfTQBhAHgATwByAGQAZQByAEQAYQB0AGUA
VgBhAGwAAICTUwBFAEwARQBDAFQAIABFAFIAUABJAG4AdgBvAGkAYwBlAEQAYQB0AGUAIAA9AEkA
UwBOAFUATABMACgATQBBAFgAKABFAFIAUABJAG4AdgBvAGkAYwBlAEQAYQB0AGUAKQAsADAAKQAg
AEYAUgBPAE0AIABPAHIAZABlAHIAcwAgACgATgBPAEwATwBDAEsAKQAAI00AYQB4AEkAbgB2AG8A
aQBjAGUARABhAHQAZQBWAGEAbAAAQKigw/Q1uEmL+JUFCWL08QAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAyAADgQg
ARwcAygADgIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwES
FQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAQgABJ9BiABEoCBHAQGEYCF
BSAAEYCNBSAAEoCRBSAAEoCVBCABARwGIAEBEYCdBiABARGAoQUgABKApQQgAQgcBCABDg4OBwQR
gIUSgIkSgJESgJkFIAASgL0EAAEIDgsHAxGAhRKAtRKAvUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9l
MTFlMGJiMWNlZTQ0Y2ViODM4ZTkyNzAwNmEyNWYzOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBuDkAAAAAAAAAAAAA
zjkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMA5AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAozxQFwAAAQCjPFAXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUA
MQAxAGUAMABiAGIAMQBjAGUAZQA0ADQAYwBlAGIAOAAzADgAZQA5ADIANwAwADAANgBhADIANQBm
ADMAOAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkANgA4AC4A
MQA1ADUAMgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQAZgAy
ADYAMABhADkAOAA4ADYAMgBlADQAYgAyADMAYgA0AGUAYQA1ADUAMwAyADEAMABmADQAZgBkADQA
YgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADQAZgAyADYAMABhADkAOAA4ADYAMgBlADQAYgAyADMAYgA0AGUAYQA1
ADUAMwAyADEAMABmADQAZgBkADQAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBlADEAMQBlADAAYgBiADEAYwBlAGUANAA0AGMAZQBiADgAMwA4AGUAOQAy
ADcAMAAwADYAYQAyADUAZgAzADgAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA2ADgALgAxADUANQAyADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQA2ADgALgAxADUANQAyADMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA4DkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Log package end"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{6B1D5705-1625-4BD4-A093-D6C3520F3A70}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Log package end"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d35a91e3a47a4694a9696c13e906a6b5"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::JobExecutionLogConnectionName,User::JobExecutionResultTypeID"
          ReadWriteVariables="User::JobExecutionID,User::JobExecutionResultMessage">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dfcc470e847a4da983f39a340b278c03.Properties.Settings.get_Default():ST_dfcc470e847a4da983f39a340b278c03.Properties.Sett" +
    "ings")]

namespace ST_dfcc470e847a4da983f39a340b278c03.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System.Data;


#endregion

namespace ST_dfcc470e847a4da983f39a340b278c03
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region "Properties"

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public int JobExecutionResultTypeID
        {
            get
            {
                int var = (int)Dts.Variables["User::JobExecutionResultTypeID"].Value;

                if (var <= 0)
                {
                    var = 3;
                }

                return var;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultTypeID"].Value = value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        public string JobExecutionResultMessage
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionResultMessage"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultMessage"].Value = value;
            }
        }
        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            this.CheckVariables();
            this.GMJobExecutionEnd();
            this.JobExecutionID = 0;
            Dts.TaskResult = (int)ScriptResults.Success;

        }

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
            //return ((ConnectionManager)Dts.Connections[this.JobExecutionLogConnectionName]).AcquireConnection(txn);
        }

        private void GMJobExecutionEnd()
        {
            //try
            //{


            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                using (IDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = "Logs.GMJobExecutionEndSp";
                    cmd.CommandType = CommandType.StoredProcedure;

                    IDbDataParameter p = cmd.CreateParameter();
                    p.ParameterName = "@iReqID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionID;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iReqResultID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionResultTypeID;
                    cmd.Parameters.Add(p);

                    cmd.ExecuteNonQuery();
                }
            }
            //}
            //catch (System.Exception ex)
            //{
            //    string msg = ex.Message;
            //    throw;
            //}
        }

        private void CheckVariables()
        {
            if (this.JobExecutionResultTypeID == 3) // Unknown
            {
                this.JobExecutionResultTypeID = 1; // Success
                this.JobExecutionResultMessage = "Success";
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_dfcc470e847a4da983f39a340b278c03</msb:CodeName>
		<msb:DisplayName>ST_dfcc470e847a4da983f39a340b278c03</msb:DisplayName>
		<msb:ProjectId>{E42EF151-C051-40C0-84C0-B8F3E80E5EAB}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d35a91e3a47a4694a9696c13e906a6b5.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_dfcc470e847a4da983f39a340b278c03")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_dfcc470e847a4da983f39a340b278c03")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_d35a91e3a47a4694a9696c13e906a6b5.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{78F82668-82DE-4584-899F-F73650429716}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_dfcc470e847a4da983f39a340b278c03</RootNamespace><AssemblyName>ST_d35a91e3a47a4694a9696c13e906a6b5</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebuge9f60cf8-e5d9-4153-88b7-aac604bad2ec/c1185527-6f42-42f6-aefc-dcb4576c701a&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dfcc470e847a4da983f39a340b278c03.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dfcc470e847a4da983f39a340b278c03.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dfcc470e847a4da983f39a340b278c03.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_dfcc470e847a4da983f39a340b278c03.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_dfcc470e847a4da983f39a340b278c03.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_dfcc470e847a4da983f39a340b278c03.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO5H8FYAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAzjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg1AABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NQAAAAAAAEgAAAACAAUAuCMAAMARAAABAAAAAAAAAAAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqEzACACgAAAAC
AAARAigWAAAKbxcAAApyuwAAcG8YAAAKbxkAAAqlHwAAAQoGFjACGQoGKoYCKBYAAApvFwAACnK7
AABwbxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApy+QAAcG8YAAAKbxkAAAqlHwAAASqGAigW
AAAKbxcAAApy+QAAcG8YAAAKA4wfAAABbxoAAAoqggIoFgAACm8XAAAKciMBAHBvGAAACm8ZAAAK
dB4AAAEqcgIoFgAACm8XAAAKciMBAHBvGAAACgNvGgAACiqCAigSAAAGAigRAAAGAhYoDAAABgIo
FgAAChZvGwAACip2AigWAAAKbxwAAAoCKAgAAAZvHQAACgNvHgAACioAABswAgC2AAAAAwAAEQIU
KBAAAAZ0IgAAAQoGbx8AAAoLB3JjAQBwbyAAAAoHGm8hAAAKB28iAAAKDAhylQEAcG8jAAAKCB8L
byQAAAoIAigLAAAGjB8AAAFvJQAACgdvJgAACghvJwAACiYHbyIAAAoMCHKlAQBwbyMAAAoIHwtv
JAAACggCKAkAAAaMHwAAAW8lAAAKB28mAAAKCG8nAAAKJgdvKAAACibeCgcsBgdvKQAACtzeCgYs
BgZvKQAACtwqAAABHAAAAgAUAIufAAoAAAAAAgANAJ6rAAoAAAAAcgIoCQAABhkzEgIXKAoAAAYC
csEBAHAoDgAABioeAigqAAAKKgAAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAYAUAACN+AADMBQAAXAgAACNTdHJpbmdzAAAAACgOAADUAQAAI1VT
APwPAAAQAAAAI0dVSUQAAAAMEAAAtAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAA
AQAAACoAAAAFAAAABgAAABMAAAAFAAAAKgAAAAIAAAAPAAAAAwAAAAMAAAAHAAAACwAAAAEAAAAF
AAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsB
BgCsA5IDBgDXA8UDBgDuA8UDBgALBMUDBgAqBMUDBgBDBMUDBgBcBMUDBgB3BMUDBgCSBMUDBgCr
BMUDBgDkBMQEBgAEBcQEBgA1BSIFBgBSBboABgBXBboABgB7BcUDCgCnBZEFCgDABZEFBgDVBcQE
DgD3BRQBDgAZBhQBEgByBlIGEgCKBlIGBgCmBroABgCtBroAEgDMBlIGEgDoBlIGFgAGB/oGFgAU
B/oGFgA9B/oGFgBZB/oGFgB6B/oGFgCbB/oGFgCtB/oGBgDoB9UHBgACCLoAAAAAAAEAAAAAAAEA
AQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAU
ABEAfwETABEArAEXABEA9gE5AAYGcANmAFaAeANpAFaAgANpAFAgAAAAAIMYvAEbAAEAWCAAAAAA
kwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACG
GLwBGwACAKcgAAAAAJEY8AWeAAIAuyAAAAAAhggaAkcAAgDcIAAAAACGCDwCSwACABAhAAAAAIYI
WQJPAAIAMiEAAAAAhgh2AksAAwBTIQAAAACGCIkCTwADAHUhAAAAAIYInAJHAAQAliEAAAAAhgi6
AlQABACzIQAAAACGANgCGwAFANQhAAAAAIYA3QJZAAUA9CEAAAAAgQDvAhsABgDUIgAAAACBAAED
GwAGAPEiAAAAAIYYvAEbAAYAAAABAIgDAAABAIgDAAABAIgDAAABAIgDAAABAI4DOQC8AVQAQQC8
AVQASQC8AVQAUQC8AVQAWQC8AVQAYQC8AVQAaQC8AVQAcQC8AVQAeQC8AVQAgQC8AVQAiQC8AU8A
kQC8ARsAmQC8ARsACQC8ARsAoQBpBXcAoQCEBX4AKQC8AYMAuQC8AY8AyQC8ARsAEQC8ARsA0QC8
ARsAGQArBqIA2QB8BqcA4QCTBqwA6QCcBrIA6QCzBroA2QC9Bk8A2QDYBr8AAQGTBsUACQHdAlkA
EQEfB8wAGQEtB1QAGQFJB9IAGQFqB9kAMQGJB1QAMQGiB98AMQGzBroAGQHGB+YASQHuB+wAGQHy
B0sAUQEOCBsAGQC8ARsACAAUAG0ACAAYAHIAKQCTAJUALgAbAG4BLgAjAG4BLgBjAJQBLgALAP0A
LgATAEUBLgAzAEUBLgArAG4BLgA7AHQBLgBDAG4BLgBbAIsBQwBrAHIASQCTAJUAYQCbAHIAgwCr
AHIAigC2APEAAgABAAMAAwAEAAQAAABvAS8AAADuATQAAAASAkIAAAAQA14AAAAuA2IAAABHA2IA
AABWA14AAgACAAMAAQAEAAUAAgADAAUAAgAFAAcAAgAIAAkAAgAJAAsAAQAKAAsAAQAMAA0AAgAL
AA0AAgANAA8AAQAOAA8ABIAAAAEAAAAkFwddAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAA
BAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoAMwYA
AAAABAAAAAAAAAAAAAAAAQD6BgAAAAAAAAAAAQAAABYIAAAFAAQAAAAAPE1vZHVsZT4AU1RfZGZj
YzQ3MGU4NDdhNGRhOTgzZjM5YTM0MGIyNzhjMDMuZGxsAFJlc291cmNlcwBTVF9kZmNjNDcwZTg0
N2E0ZGE5ODNmMzlhMzQwYjI3OGMwMy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1Rf
ZGZjYzQ3MGU4NDdhNGRhOTgzZjM5YTM0MGIyNzhjMDMAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5S
ZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9u
AEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0
AERlZmF1bHQAZ2V0X0pvYkV4ZWN1dGlvbkxvZ0Nvbm5lY3Rpb25OYW1lAGdldF9Kb2JFeGVjdXRp
b25SZXN1bHRUeXBlSUQAc2V0X0pvYkV4ZWN1dGlvblJlc3VsdFR5cGVJRABnZXRfSm9iRXhlY3V0
aW9uSUQAc2V0X0pvYkV4ZWN1dGlvbklEAGdldF9Kb2JFeGVjdXRpb25SZXN1bHRNZXNzYWdlAHNl
dF9Kb2JFeGVjdXRpb25SZXN1bHRNZXNzYWdlAE1haW4AQWNxdWlyZUNvbm5lY3Rpb24AR01Kb2JF
eGVjdXRpb25FbmQAQ2hlY2tWYXJpYWJsZXMASm9iRXhlY3V0aW9uTG9nQ29ubmVjdGlvbk5hbWUA
Sm9iRXhlY3V0aW9uUmVzdWx0VHlwZUlEAEpvYkV4ZWN1dGlvbklEAEpvYkV4ZWN1dGlvblJlc3Vs
dE1lc3NhZ2UAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdHhuAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1Zhcmlh
YmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3RyaW5nAEludDMyAHNldF9WYWx1ZQBz
ZXRfVGFza1Jlc3VsdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFn
ZXIAU3lzdGVtLkRhdGEASURiQ29ubmVjdGlvbgBJRGJDb21tYW5kAENyZWF0ZUNvbW1hbmQAc2V0
X0NvbW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBJRGJEYXRhUGFyYW1ldGVy
AENyZWF0ZVBhcmFtZXRlcgBJRGF0YVBhcmFtZXRlcgBzZXRfUGFyYW1ldGVyTmFtZQBEYlR5cGUA
c2V0X0RiVHlwZQBJRGF0YVBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMAU3lzdGVt
LkNvbGxlY3Rpb25zAElMaXN0AEFkZABFeGVjdXRlTm9uUXVlcnkASURpc3Bvc2FibGUARGlzcG9z
ZQBTVF9kZmNjNDcwZTg0N2E0ZGE5ODNmMzlhMzQwYjI3OGMwMy5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAAAAAHFTAFQAXwBkAGYAYwBjADQANwAwAGUAOAA0ADcAYQA0AGQAYQA5ADgA
MwBmADMAOQBhADMANAAwAGIAMgA3ADgAYwAwADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAEdVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBMAG8A
ZwBDAG8AbgBuAGUAYwB0AGkAbwBuAE4AYQBtAGUAAD1VAHMAZQByADoAOgBKAG8AYgBFAHgAZQBj
AHUAdABpAG8AbgBSAGUAcwB1AGwAdABUAHkAcABlAEkARAAAKVUAcwBlAHIAOgA6AEoAbwBiAEUA
eABlAGMAdQB0AGkAbwBuAEkARAAAP1UAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBu
AFIAZQBzAHUAbAB0AE0AZQBzAHMAYQBnAGUAADFMAG8AZwBzAC4ARwBNAEoAbwBiAEUAeABlAGMA
dQB0AGkAbwBuAEUAbgBkAFMAcAAAD0AAaQBSAGUAcQBJAEQAABtAAGkAUgBlAHEAUgBlAHMAdQBs
AHQASQBEAAAPUwB1AGMAYwBlAHMAcwAAAAAAxmQIP0l3RE+tLJ5S0UTwQwAIt3pcVhk04IkIiYRd
zYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIM
AyAADgMgAAgEIAEBCAQgAQEOBCABHBwDKAAOAygACAIGCAMGERQEAAAAAAQBAAAABgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAwcB
CAQgAQEcBSAAEoCBBiABEoCFHAUgABKAjQYgAQERgJEFIAASgJUGIAEBEYCdBSAAEoChBCABCBwL
BwMSgIkSgI0SgJVHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfZGZjYzQ3MGU4NDdhNGRhOTgzZjM5YTM0
MGIyNzhjMDMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCgNQAAAAAAAAAAAAC+NQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAsDUAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAHXSQXAAABAAddJBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
ZABmAGMAYwA0ADcAMABlADgANAA3AGEANABkAGEAOQA4ADMAZgAzADkAYQAzADQAMABiADIANwA4
AGMAMAAzAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAyADQA
LgAyADMAOAAxADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZABm
AGMAYwA0ADcAMABlADgANAA3AGEANABkAGEAOQA4ADMAZgAzADkAYQAzADQAMABiADIANwA4AGMA
MAAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AZABmAGMAYwA0ADcAMABlADgANAA3AGEANABkAGEAOQA4ADMAZgAz
ADkAYQAzADQAMABiADIANwA4AGMAMAAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfAGQAZgBjAGMANAA3ADAAZQA4ADQANwBhADQAZABhADkAOAAzAGYAMwA5
AGEAMwA0ADAAYgAyADcAOABjADAAMwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA5ADIANAAuADIAMwA4ADEANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADIANAAuADIAMwA4ADEANQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Log package start"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{62466A8E-2A98-473B-937B-F61F7B5AEFDA}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Log package start"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_af43544334de457fa8a0638c3c87dd4b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::JobExecutionLogConnectionName,System::PackageName,System::StartTime,$Project::DbDaikinProjectIntegration_ConnectionString"
          ReadWriteVariables="User::JobExecutionID,User::JobExecutionResultMessage,User::JobExecutionResultTypeID">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9916a8d74f914a6a863b01cf4607964f.Properties.Settings.get_Default():ST_9916a8d74f914a6a863b01cf4607964f.Properties.Sett" +
    "ings")]

namespace ST_9916a8d74f914a6a863b01cf4607964f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces

#endregion

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Data.OleDb;
namespace ST_9916a8d74f914a6a863b01cf4607964f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region "Properties"

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string JobExecutionLogConnectionString
        {
            get
            {
                return (string)Dts.Variables["$Project::DbDaikinProjectIntegration_ConnectionString"].Value;
            }
        }

        public string PackageName
        {
            get
            {
                return (string)Dts.Variables["System::PackageName"].Value;
            }
        }

        public DateTime StartTime
        {
            get
            {
                return (DateTime)Dts.Variables["System::StartTime"].Value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            this.JobExecutionID = this.GMJobExecutionStart();
            this.PrepareVariables();
            //System.Windows.Forms.MessageBox.Show(this.JobExecutionID.ToString());
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        public object AcquireConnection(object txn)
        {
            return ((ConnectionManager)Dts.Connections[this.JobExecutionLogConnectionName]).AcquireConnection(txn);
        }      


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion



        private int GMJobExecutionStart1()
        {
            int returnValue = 0;
            using (OleDbConnection connection = new OleDbConnection(this.JobExecutionLogConnectionString))
            {
                using (OleDbCommand cmd = connection.CreateCommand())
                {
                    cmd.CommandText = "Logs.GMJobExecutionStartSp";
                    cmd.CommandType = CommandType.StoredProcedure;

                    OleDbParameter p = new OleDbParameter();
                    p.ParameterName = "@iReqName";
                    //p.DbType = DbType.String;
                    p.Value = PackageName;
                    cmd.Parameters.Add(p);

                    p = new OleDbParameter();
                    p.ParameterName = "@iReqStartDate";
                    //p.DbType = DbType.DateTime;
                    p.Value = System.DateTime.Now;
                    cmd.Parameters.Add(p);
                    if (connection.State==ConnectionState.Closed)
                    {
                        connection.Open();
                    }

                    returnValue = (int)cmd.ExecuteScalar();
                }                
            }
            return returnValue;

        }

        private int GMJobExecutionStart()
        {
            //ConnectionManager cm;
            int returnValue = 0;
            //cm = Dts.Connections[this.JobExecutionLogConnectionName];
            //cm = Dts.Connections["dbDaikinProjectIntegrationADO"];
            try
            {
                //using (IDbConnection con = (IDbConnection)cm.AcquireConnection(Dts.Transaction))
                using (IDbConnection con = (IDbConnection)AcquireConnection(null))
                {
                    using (IDbCommand cmd = con.CreateCommand())
                    {
                        cmd.CommandText = "Logs.GMJobExecutionStartSp";
                        cmd.CommandType = CommandType.StoredProcedure;

                        IDbDataParameter p = cmd.CreateParameter();
                        p.ParameterName = "@iReqName";
                        p.DbType = DbType.String;
                        p.Value = PackageName;
                        cmd.Parameters.Add(p);

                        p = cmd.CreateParameter();
                        p.ParameterName = "@iReqStartDate";
                        p.DbType = DbType.DateTime;
                        p.Value = System.DateTime.Now;
                        cmd.Parameters.Add(p);

                        returnValue = (int)cmd.ExecuteScalar();

                    }
                }
            }
            catch (System.Exception ex)
            {
                string exc = ex.Message;
                throw ex;
            }
            return returnValue;


        }
        private void PrepareVariables()
        {
            Dts.Variables["User::JobExecutionResultTypeID"].Value = 3;
            Dts.Variables["User::JobExecutionResultMessage"].Value = "Unknown";
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9916a8d74f914a6a863b01cf4607964f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9916a8d74f914a6a863b01cf4607964f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9916a8d74f914a6a863b01cf4607964f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9916a8d74f914a6a863b01cf4607964f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9916a8d74f914a6a863b01cf4607964f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_9916a8d74f914a6a863b01cf4607964f</msb:CodeName>
		<msb:DisplayName>ST_9916a8d74f914a6a863b01cf4607964f</msb:DisplayName>
		<msb:ProjectId>{07155F73-7EDC-4521-94B5-69F08502C0CF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_af43544334de457fa8a0638c3c87dd4b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9916a8d74f914a6a863b01cf4607964f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9916a8d74f914a6a863b01cf4607964f")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_af43544334de457fa8a0638c3c87dd4b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{80F1C821-6E7E-4238-8B62-600362A5F1C6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_9916a8d74f914a6a863b01cf4607964f</RootNamespace><AssemblyName>ST_af43544334de457fa8a0638c3c87dd4b</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_af43544334de457fa8a0638c3c87dd4b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD+dK1cAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAADjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMA4AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
OAAAAAAAAEgAAAACAAUAqCQAABgUAAABAAAAAAAAAPAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB8AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB8AAAEqggIoFgAACm8XAAAKcicBAHBvGAAACm8ZAAAKdB8AAAEq
ggIoFgAACm8XAAAKck8BAHBvGAAACm8ZAAAKpQcAAAEqggIoFgAACm8XAAAKcnMBAHBvGAAACm8Z
AAAKpSAAAAEqhgIoFgAACm8XAAAKcnMBAHBvGAAACgOMIAAAAW8aAAAKKn4CAigRAAAGKA0AAAYC
KBIAAAYCKBYAAAoWbxsAAAoqdgIoFgAACm8cAAAKAigIAAAGbx0AAAoDbx4AAAoqGzACALMAAAAC
AAARFgoCKAkAAAZzHwAACgsHbyAAAAoMCHKdAQBwbyEAAAoIGm8iAAAKcyMAAAoNCXLTAQBwbyQA
AAoJAigKAAAGbyUAAAoIbyYAAAoJbycAAAomcyMAAAoNCXLnAQBwbyQAAAoJKCgAAAqMBwAAAW8l
AAAKCG8mAAAKCW8nAAAKJgdvKQAACi0GB28qAAAKCG8rAAAKpSAAAAEK3goILAYIbywAAArc3goH
LAYHbywAAArcBioAARwAAAIAFQCGmwAKAAAAAAIADgCZpwAKAAAAABswAgDGAAAAAwAAERYKAhQo
DwAABnQtAAABCwdvLQAACgwIcp0BAHBvLgAACggaby8AAAoIbzAAAAoNCXLTAQBwbzEAAAoJHxBv
MgAACgkCKAoAAAZvMwAACghvNAAACglvNQAACiYIbzAAAAoNCXLnAQBwbzEAAAoJHG8yAAAKCSgo
AAAKjAcAAAFvMwAACghvNAAACglvNQAACiYIbzYAAAqlIAAAAQreCggsBghvLAAACtzeCgcsBgdv
LAAACtzeDRMEEQRvNwAACiYRBHoGKgAAASgAAAIAFgCJnwAKAAAAAAIADwCcqwAKAAAAAAAAAgC1
twANNAAAAQMwAgBAAAAAAAAAAAIoFgAACm8XAAAKcgUCAHBvGAAAChmMIAAAAW8aAAAKAigWAAAK
bxcAAApyQwIAcG8YAAAKcoMCAHBvGgAACioeAig4AAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA5AUAACN+AABQBgAAOAkAACNTdHJpbmdzAAAA
AIgPAACUAgAAI1VTABwSAAAQAAAAI0dVSUQAAAAsEgAA7AEAACNCbG9iAAAAAAAAAAIAAAFXHaIB
CQMAAAD6JTMAFgAAAQAAADQAAAAFAAAABgAAABMAAAADAAAAOAAAAAIAAAAPAAAAAwAAAAMAAAAI
AAAACgAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboA
BgBvAV4BBgCgAYsBBgBwAroABgCdA4MDBgDIA7YDBgDfA7YDBgD8A7YDBgAbBLYDBgA0BLYDBgBN
BLYDBgBoBLYDBgCDBLYDBgCcBLYDBgDVBLUEBgD1BLUEBgBKBTcFBgBnBboABgBsBboABgCQBbYD
CgC8BaYFCgDVBaYFBgDqBbUEDgAMBhQBDgAuBhQBEgCHBmcGEgCfBmcGBgC7BroABgDCBroAEgDh
BmcGEgD9BmcGFgAtBxsHFgA9BxsHFgBrB1gHFgCFBw8HFgChBxsHFgCwB1gHFgDOBxsHFgACCFgH
FgAPCA8HBgA8CLoAFgBQCA8HFgBeCA8HFgBpCA8HFgCKCA8HFgCZCA8HFgCrCA8HBgDXCMQIBgDd
CLoAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQA
CAADAQAAowAAABEABAAUABEAfwETABEArAEXABEA9gE5AAYGYQNrAFaAaQNuAFaAcQNuAFAgAAAA
AIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAA
lggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYBQaoAAIAuyAAAAAAhggaAkcAAgDcIAAAAACG
CDwCRwACAP0gAAAAAIYIYAJHAAIAHiEAAAAAhgh5AksAAgA/IQAAAACGCIcCUAACAGAhAAAAAIYI
mgJUAAIAgiEAAAAAhgCtAhsAAwCiIQAAAACGALICWQADAMAhAAAAAIEAxAJQAAQAnCIAAAAAgQDZ
AlAABACYIwAAAACBAO0CGwAEAOQjAAAAAIYYvAEbAAQAAAABAHkDAAABAHkDAAABAH8DQQC8AXwA
SQC8AXwAUQC8AXwAWQC8AXwAYQC8AXwAaQC8AXwAcQC8AXwAeQC8AXwAgQC8AXwAiQC8AXwAkQC8
AVQAmQC8ARsAoQC8ARsACQC8ARsAqQB+BYEAqQCZBYgAKQC8AY0AwQC8AZkA0QC8ARsAEQC8ARsA
2QC8ARsAGQBABqwA4QCRBrEA6QCoBrYA8QCxBrwA8QDIBsAA4QDSBlQA4QDtBsUACQGoBssAEQGy
AlkAGQG8AXwAGQFKB9IAKQF1B3wAKQGRB9gAOQG8ARsAQQG8B3wAQQHIBsAAIQHnB98ASQH2B+UA
OQD6B+4AUQEfCPMAUQEpCBsAKQEuCLwAYQFICBsAaQFKBwYBcQF1B3wAcQGRB9gAcQF6CAwBgQG8
B3wAgQGgCBIBgQHIBsAAcQHnBxkBmQH2Bx8BcQEuCLwAoQHnCEcAGQC8ARsACAAUAHIACAAYAHcA
KQCTAJ8ALgAbAKUBLgAjAKUBLgBjAMsBLgALADQBLgATAHwBLgAzAHwBLgArAKUBLgA7AKsBLgBD
AKUBLgBbAMIBQwBrAHcASQCTAJ8AYQCbAHcAgwCrAHcAlAD5ACQBAgABAAMAAwAEAAQAAABvAS8A
AADuATQAAAASAkIAAAD+Al4AAAAcA14AAAA8A14AAABIA2IAAABSA2cAAgACAAMAAgADAAUAAQAE
AAUAAgAFAAcAAgAIAAkAAgAJAAsAAgAKAA0AAgALAA8AAgAMABEAAQANABEABIAAAAEAAABRF+9d
AAAAAAAAEwUAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoASAYAAAAABAAAAAAAAAAAAAAAAQAPBwAAAAAAAAAA
AQAAAPMIAAAFAAQAAAAAPE1vZHVsZT4AU1RfYWY0MzU0NDMzNGRlNDU3ZmE4YTA2MzhjM2M4N2Rk
NGIuZGxsAFJlc291cmNlcwBTVF85OTE2YThkNzRmOTE0YTZhODYzYjAxY2Y0NjA3OTY0Zi5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfOTkxNmE4ZDc0ZjkxNGE2YTg2M2IwMWNmNDYw
Nzk2NGYAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1
cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAZ2V0X0pvYkV4ZWN1dGlvbkxv
Z0Nvbm5lY3Rpb25OYW1lAGdldF9Kb2JFeGVjdXRpb25Mb2dDb25uZWN0aW9uU3RyaW5nAGdldF9Q
YWNrYWdlTmFtZQBEYXRlVGltZQBnZXRfU3RhcnRUaW1lAGdldF9Kb2JFeGVjdXRpb25JRABzZXRf
Sm9iRXhlY3V0aW9uSUQATWFpbgBBY3F1aXJlQ29ubmVjdGlvbgBHTUpvYkV4ZWN1dGlvblN0YXJ0
MQBHTUpvYkV4ZWN1dGlvblN0YXJ0AFByZXBhcmVWYXJpYWJsZXMASm9iRXhlY3V0aW9uTG9nQ29u
bmVjdGlvbk5hbWUASm9iRXhlY3V0aW9uTG9nQ29ubmVjdGlvblN0cmluZwBQYWNrYWdlTmFtZQBT
dGFydFRpbWUASm9iRXhlY3V0aW9uSUQAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdHhu
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3Rl
bS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNz
ZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBTVF9hZjQzNTQ0MzM0ZGU0NTdmYThhMDYzOGMzYzg3ZGQ0YgBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
U2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBW
YXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3RyaW5nAEludDMyAHNldF9WYWx1ZQBzZXRfVGFz
a1Jlc3VsdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIAU3lz
dGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAT2xlRGJDb25uZWN0aW9uAE9sZURiQ29tbWFuZABD
cmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0
AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBPbGVEYlBhcmFtZXRlcgBEYlBhcmFtZXRlcgBz
ZXRfUGFyYW1ldGVyTmFtZQBPbGVEYlBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMA
QWRkAGdldF9Ob3cARGJDb25uZWN0aW9uAENvbm5lY3Rpb25TdGF0ZQBnZXRfU3RhdGUAT3BlbgBF
eGVjdXRlU2NhbGFyAElEaXNwb3NhYmxlAERpc3Bvc2UASURiQ29ubmVjdGlvbgBJRGJDb21tYW5k
AElEYkRhdGFQYXJhbWV0ZXIAQ3JlYXRlUGFyYW1ldGVyAElEYXRhUGFyYW1ldGVyAERiVHlwZQBz
ZXRfRGJUeXBlAElEYXRhUGFyYW1ldGVyQ29sbGVjdGlvbgBTeXN0ZW0uQ29sbGVjdGlvbnMASUxp
c3QARXhjZXB0aW9uAGdldF9NZXNzYWdlAFNUXzk5MTZhOGQ3NGY5MTRhNmE4NjNiMDFjZjQ2MDc5
NjRmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8AOQA5ADEANgBhADgA
ZAA3ADQAZgA5ADEANABhADYAYQA4ADYAMwBiADAAMQBjAGYANAA2ADAANwA5ADYANABmAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABHVQBzAGUAcgA6ADoASgBvAGIA
RQB4AGUAYwB1AHQAaQBvAG4ATABvAGcAQwBvAG4AbgBlAGMAdABpAG8AbgBOAGEAbQBlAABrJABQ
AHIAbwBqAGUAYwB0ADoAOgBEAGIARABhAGkAawBpAG4AUAByAG8AagBlAGMAdABJAG4AdABlAGcA
cgBhAHQAaQBvAG4AXwBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAnUwB5AHMAdABl
AG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAI1MAeQBzAHQAZQBtADoAOgBTAHQAYQByAHQA
VABpAG0AZQAAKVUAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAEkARAAANUwAbwBn
AHMALgBHAE0ASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4AUwB0AGEAcgB0AFMAcAAAE0AAaQBSAGUA
cQBOAGEAbQBlAAAdQABpAFIAZQBxAFMAdABhAHIAdABEAGEAdABlAAA9VQBzAGUAcgA6ADoASgBv
AGIARQB4AGUAYwB1AHQAaQBvAG4AUgBlAHMAdQBsAHQAVAB5AHAAZQBJAEQAAD9VAHMAZQByADoA
OgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBSAGUAcwB1AGwAdABNAGUAcwBzAGEAZwBlAAAPVQBu
AGsAbgBvAHcAbgAAAM/848ZAFi5Bjaj3VceEX4wACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkD
IAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAMgAA4EIAARHQMgAAgE
IAEBCAQgARwcAygADgQoABEdAygACAIGCAMGERQEAAAAAAQBAAAABCABAQ4GAAESVRFZBCAAEl0G
IAIBDhJdBAcBEhUFIAEBEWUIAQACAAAAAAADAAABBCAAEnEEIAASdQUgARJ5HAMgABwEIAEBHAUg
ABKAhQYgARKAiRwFIAASgJEGIAEBEYCZBSAAEoClCCABEoCdEoCdBAAAER0FIAARgK0MBwQIEoCN
EoCREoCdBSAAEoC5BSAAEoC9BiABARGAxQUgABKAyQQgAQgcDwcFCBKAtRKAuRKAvRKA0UcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNCgBACNTVF85OTE2YThkNzRmOTE0YTZhODYzYjAxY2Y0NjA3OTY0ZgAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBAADoOAAAAAAAAAAAAAD+OAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8DgAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA711RFwAAAQDvXVEXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADkA
OQAxADYAYQA4AGQANwA0AGYAOQAxADQAYQA2AGEAOAA2ADMAYgAwADEAYwBmADQANgAwADcAOQA2
ADQAZgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkANgA5AC4A
MgA0ADAANAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAZgA0
ADMANQA0ADQAMwAzADQAZABlADQANQA3AGYAYQA4AGEAMAA2ADMAOABjADMAYwA4ADcAZABkADQA
YgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGEAZgA0ADMANQA0ADQAMwAzADQAZABlADQANQA3AGYAYQA4AGEAMAA2
ADMAOABjADMAYwA4ADcAZABkADQAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA5ADkAMQA2AGEAOABkADcANABmADkAMQA0AGEANgBhADgANgAzAGIAMAAx
AGMAZgA0ADYAMAA3ADkANgA0AGYAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA2ADkALgAyADQAMAA0ADcAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQA2ADkALgAyADQAMAA0ADcAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAEDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reading Order Invoice Info from Mapics"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DDD4495F-664A-4BBE-9147-C6B6FCB15DBF}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reading Order Invoice Info from Mapics">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{62C609C1-7D68-4D96-A228-7CCC0E47DC5D}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order Invoice Info update"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail"
                  componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="API Call Fail">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::JobStatusUpdateFail</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Columns Derived"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input].Columns[E_ORDNO]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="7"
                          cachedName="E_ORDNO"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input].Columns[CHAR_POKEY]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="6"
                          cachedName="CHAR_POKEY"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPInvoice_Date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPInvoice_Date]"
                          name="ERPInvoice_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_DATE)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_DATE)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPShip_Date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPShip_Date]"
                          name="ERPShip_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_DATE)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_DATE)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APICall_Success]"
                          dataType="bool"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APICall_Success]"
                          name="APICall_Success"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_BOOL) FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_BOOL) FALSE </property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APIError_Invoice]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APIError_Invoice]"
                          name="APIError_Invoice"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,500)""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,500)""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[OrderNumber_Derived]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="20"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[OrderNumber_Derived]"
                          name="OrderNumber_Derived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,20)#{Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,20)E_ORDNO</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[POkey_Derived]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[POkey_Derived]"
                          name="POkey_Derived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,8)#{Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,8)CHAR_POKEY</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split"
                  componentClassID="{7F88F654-4E20-4D14-84F4-AF9C925D3087}"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input].Columns[APICall_Success]"
                          cachedDataType="bool"
                          cachedName="APICall_Success"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APICall_Success]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Success]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Success"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APICall_Success]} ==  TRUE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">APICall_Success ==  TRUE </property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[API Call Fail]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="API Call Fail"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Convert to Invoice Date"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        //Date Parsing
        decimal invDateDecimal;
        if (!Row.INVOICEDATE_IsNull && decimal.TryParse(Row.INVOICEDATE, out invDateDecimal) && invDateDecimal > 0)
        {
            DateTime invDate;
            if (DateTime.TryParseExact(invDateDecimal.ToString(), "yyyyMMdd", CultureInfo.CurrentCulture, DateTimeStyles.None, out invDate))
            {
                Row.ERPInvoiceDate = invDate;
            }
        }
        decimal shpDateDecimal;
        if (!Row.SHIPDATE_IsNull && decimal.TryParse(Row.SHIPDATE, out shpDateDecimal) && shpDateDecimal > 0)
        {
            DateTime shpDate;
            if (DateTime.TryParseExact(shpDateDecimal.ToString(), "yyyyMMdd", CultureInfo.CurrentCulture, DateTimeStyles.None, out shpDate))
            {
                Row.ERPShipDate = shpDate;
            }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String INVOICEDATE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool INVOICEDATE_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime ERPInvoiceDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool ERPInvoiceDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ERPShipDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool ERPShipDate_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SHIPDATE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool SHIPDATE_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Settings.get_Default():SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Sett" +
    "ings")]

namespace SC_56d5b9bcc60048a1a299c89d8d497adb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_56d5b9bcc60048a1a299c89d8d497adb.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cae62765-7c9a-47de-930a-29769144a852}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_56d5b9bcc60048a1a299c89d8d497adb</RootNamespace>
    <AssemblyName>SC_56d5b9bcc60048a1a299c89d8d497adb</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_56d5b9bcc60048a1a299c89d8d497adb" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_56d5b9bcc60048a1a299c89d8d497adb</msb:CodeName>
		<msb:DisplayName>SC_56d5b9bcc60048a1a299c89d8d497adb</msb:DisplayName>
		<msb:ProjectId>{3B39FA3F-AD36-4BD8-9F91-6DC6643A93AD}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_56d5b9bcc60048a1a299c89d8d497adb.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_56d5b9bcc60048a1a299c89d8d497adb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_56d5b9bcc60048a1a299c89d8d497adb")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_56d5b9bcc60048a1a299c89d8d497adb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_56d5b9bcc60048a1a299c89d8d497adb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_56d5b9bcc60048a1a299c89d8d497adb.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGlXBVcAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAALjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ1AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NgAAAAAAAEgAAAACAAUAgCMAAFQSAAABAAAAAAAAAMgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbxYAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwBQCPAAAAAQAAEQNvCwAABi0/A28KAAAGEgAoEwAACiwwBhZzFAAA
CigVAAAKLCISACgWAAAKchEAAHAoFwAAChYSASgYAAAKLAcDB28NAAAGA28VAAAGLT8DbxQAAAYS
AigTAAAKLDAIFnMUAAAKKBUAAAosIhICKBYAAApyEQAAcCgXAAAKFhIDKBgAAAosBwMJbxEAAAYq
HgIoAQAABioqAgMEBSgZAAAKKlICexoAAAoCexsAAAoWlG8cAAAKKiICFigdAAAKKlICexoAAAoC
exsAAAoXlG8eAAAKKjoCFwOMBwAAASgfAAAKKiICFygdAAAKKloDLAgCFyggAAAKKnIjAABwcyEA
AAp6UgJ7GgAACgJ7GwAAChiUbx4AAAoqOgIYA4wHAAABKB8AAAoqIgIYKB0AAAoqWgMsCAIYKCAA
AAoqciMAAHBzIQAACnpSAnsaAAAKAnsbAAAKGZRvHAAACioiAhkoHQAACioeAigiAAAKKh4CKCMA
AAoqOgIoJAAACgIDfQMAAAQqOgIoJAAACgIDfQQAAAQqHgIoJAAACioTMAIALQAAAAIAABF+BQAA
BC0gcsAAAHDQBwAAAigmAAAKbycAAApzKAAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoa
fgcAAAQqLnMfAAAGgAcAAAQqHgIoKwAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAHQGAAAjfgAA4AYAAFAIAAAjU3RyaW5ncwAAAAAwDwAANAEAACNV
UwBkEAAAEAAAACNHVUlEAAAAdBAAAOABAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+iUzABYA
AAEAAAAjAAAACAAAAAcAAAAgAAAAEQAAACsAAAAPAAAAAgAAAAMAAAALAAAAEAAAAAEAAAAEAAAA
AQAAAAAACgABAAAAAAAGAO4AzQAGAP4AzQAKABsBFAEOADcBIgESAHYBzQAGAIUBzQAKAAkCFAEK
AIwDewMKAL0DqAMKAJYEfAQKAMEErwQKANgErwQKAPUErwQKABQFrwQKAC0FrwQKAEYFrwQKAGEF
rwQKAHwFrwQKAJUFrwQKAM4FrgUKAO4FrgUKADAGFAEKADcGFAEGAGAGzQAKAIcGFAEKAMMGFAEK
ANMGqAMKAB4HFAEKAEsHOAcKAGgHFAEKAG0HFAEKAJEHrwQOAL0HpwcOANYHpwcKAOsHrgUAAAAA
AQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAMABQABABAASwAAAAkAAwAJAAEAEABY
AAAADQADABgAAQAQAGQAAAANAAQAGQAAABAAbgB4AA0ABQAaAAABEACnAHgAEQAHAB4ABgBYABMA
BgBkABcAAQBrA14AAQBrA14AEQCcA2gAEQDJA2wAEQANBIoAUCAAAAAAhhhPARsAAQBwIAAAAADG
AJMBHwABAJUgAAAAAMYBoAEpAAUAqCAAAAAAxgG0ASkABgCqIAAAAADGAMsBGwAHALIgAAAAAMYA
1gEbAAcAvCAAAAAAxgC0ASkABwBXIQAAAACGGE8BGwAIAF8hAAAAAIYYTwEvAAgAaiEAAAAAhgji
ATkACwB/IQAAAACGCPIBPQALAIghAAAAAIYIEgJBAAsAnSEAAAAAhgglAkYACwCsIQAAAACGCDgC
PQAMALUhAAAAAIYIUgJMAAwAzCEAAAAAhghsAkEADQDhIQAAAACGCHwCRgANAPAhAAAAAIYIjAI9
AA4A+SEAAAAAhgijAkwADgAQIgAAAACGCLoCOQAPACUiAAAAAIYIxwI9AA8ALiIAAAAAhgDbAj0A
DwA2IgAAAACGAOMCPQAPAD4iAAAAAIYYTwFiAA8ATSIAAAAAhhhPAWIAEABcIgAAAACDGE8BGwAR
AGQiAAAAAJMI2QNwABEAnSIAAAAAkwjtA3UAEQCkIgAAAACTCPkDegARAKwiAAAAAJYIHQSOABIA
vyIAAAAAhhhPARsAEgCzIgAAAACRGAYIJAESAAAAAQAxBAAAAgA5BAAAAwBDBAAABABKBAAAAQBD
BAAAAQBUBAAAAQBUBAAAAQBDBAAAAgBYBAAAAwBKBAAAAQBsBAAAAQBsBAAAAQBsBAAAAQBsBAAA
AQByBAAAAQByBAAAAQBsBFEATwGYAFkATwGYAGEATwGYAGkATwGYAHEATwGYAHkATwGYAIEATwGY
AIkATwGYAJEATwGYAJkATwGYAKEATwGdAKkATwEbAAkATwEbALEASAaiAAkATwapAMEATwEbAAkA
ywEbAAkA1gEbAMkAjwa0AMkATwGdAMkAmAa8AMkApwY5AEkAsAZ1ADkA4gbEABEATwEvABEAQwTc
ABEAWATgACkA8AbkABEA+gbpACkAAQfuABEADQf0ABEAFgedAOEATwGYABEA2wI9ABEA4wI9ABkA
TwEbAOkATwEbAPEAfwf6APEAmgcBAUEATwEHAQkBTwEUARkBTwEbACEATwEbAC4AGwCZAS4AYwC/
AS4ACwAoAS4AEwBwAS4AIwCZAS4AKwCZAS4AMwBwAS4AOwCfAS4AQwCZAS4AWwC2AWMAgwCvAOEA
UwGvAOMAKwGvACkBSwEbAUkBSwEbAdEADwEEAAEABwAJAAgACwAAAO8CUQAAAPsCVQAAAA4DWQAA
AB0DVQAAADMDWQAAAD8DVQAAAFIDUQAAAFsDVQAAAIwDgAAAAAUEhQAAACkEkwACAAoAAwACAAsA
BQACAAwABwABAA0ABwACAA4ACQABAA8ACQABABEACwACABAACwACABIADQABABMADQACABQADwAC
ABUAEQACABsAEwACABwAFQABAB0AFQACAB4AFwAEgAAAAQAAADQXxFgAAAAAAAAMBgAACwAAAAAA
AAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAACwAA
AAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAA0IAAAAAAAAADxNb2R1bGU+AFNDXzU2ZDViOWJjYzYw
MDQ4YTFhMjk5Yzg5ZDhkNDk3YWRiLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQw
QnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTZkNWI5YmNjNjAwNDhh
MWEyOTljODlkOGQ0OTdhZGIuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVu
dABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlv
bgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBnZXRfSU5WT0lDRURBVEUAZ2V0X0lOVk9JQ0VEQVRFX0lzTnVsbABEYXRlVGltZQBnZXRfRVJQ
SW52b2ljZURhdGUAc2V0X0VSUEludm9pY2VEYXRlAGdldF9FUlBJbnZvaWNlRGF0ZV9Jc051bGwA
c2V0X0VSUEludm9pY2VEYXRlX0lzTnVsbABnZXRfRVJQU2hpcERhdGUAc2V0X0VSUFNoaXBEYXRl
AGdldF9FUlBTaGlwRGF0ZV9Jc051bGwAc2V0X0VSUFNoaXBEYXRlX0lzTnVsbABnZXRfU0hJUERB
VEUAZ2V0X1NISVBEQVRFX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AElOVk9JQ0VEQVRFAElO
Vk9JQ0VEQVRFX0lzTnVsbABFUlBJbnZvaWNlRGF0ZQBFUlBJbnZvaWNlRGF0ZV9Jc051bGwARVJQ
U2hpcERhdGUARVJQU2hpcERhdGVfSXNOdWxsAFNISVBEQVRFAFNISVBEQVRFX0lzTnVsbABQYXJl
bnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFw
AFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNTZkNWI5YmNjNjAw
NDhhMWEyOTljODlkOGQ0OTdhZGIAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENv
bHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUARGVjaW1h
bABUcnlQYXJzZQBvcF9HcmVhdGVyVGhhbgBUb1N0cmluZwBnZXRfQ3VycmVudEN1bHR1cmUASUZv
cm1hdFByb3ZpZGVyAERhdGVUaW1lU3R5bGVzAFRyeVBhcnNlRXhhY3QAR2V0U3RyaW5nAElzTnVs
bABHZXREYXRlVGltZQBzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfNTZkNWI5YmNjNjAw
NDhhMWEyOTljODlkOGQ0OTdhZGIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAPSQBu
AHAAdQB0ACAAMAAAEXkAeQB5AHkATQBNAGQAZAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA1ADYAZAA1AGIAOQBiAGMAYwA2ADAAMAA0ADgAYQAxAGEA
MgA5ADkAYwA4ADkAZAA4AGQANAA5ADcAYQBkAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAAAAfHoAtS6imEahV8iOtFV9ZQAIiYRdzYCAzJEIt3pcVhk04IkDBhIU
AwYSGAMgAAEJIAQBCA4SFRIZBSABARIQCSADARIVHQgSGQMgAA4DIAACBCAAER0FIAEBER0EIAEB
AgMoAA4DKAACBCgAER0DBhIFBSABARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAAS
JQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAYgAgIOEV0FIAEdCAgEAQAAAAcAAgIOEBFlBwACAhFl
EWUMAAUCDg4SaRFtEBEdCgcEEWURHRFlER0DBhIVAwYdCAQgAQ4IBCABAggFIAERHQgFIAIBCBwG
AAESeRF9BSAAEoCBByACAQ4SgIEEBwESIQYgAQERgIkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NDXzU2ZDViOWJjYzYwMDQ4YTFhMjk5Yzg5ZDhkNDk3YWRiAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
APw1AAAAAAAAAAAAAB42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNgAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAMRYNBcAAAEAxFg0Fz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1
ADYAZAA1AGIAOQBiAGMAYwA2ADAAMAA0ADgAYQAxAGEAMgA5ADkAYwA4ADkAZAA4AGQANAA5ADcA
YQBkAGIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADQAMAAu
ADIAMgA3ADIANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA1ADYA
ZAA1AGIAOQBiAGMAYwA2ADAAMAA0ADgAYQAxAGEAMgA5ADkAYwA4ADkAZAA4AGQANAA5ADcAYQBk
AGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAEMAXwA1ADYAZAA1AGIAOQBiAGMAYwA2ADAAMAA0ADgAYQAxAGEAMgA5ADkA
YwA4ADkAZAA4AGQANAA5ADcAYQBkAGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBDAF8ANQA2AGQANQBiADkAYgBjAGMANgAwADAANAA4AGEAMQBhADIAOQA5AGMA
OAA5AGQAOABkADQAOQA3AGEAZABiAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA1ADkANAAwAC4AMgAyADcAMgA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADkANAAwAC4AMgAyADcAMgA0AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_56d5b9bcc60048a1a299c89d8d497adb</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">b72fb75ccbee7a839abac3342c16f93a</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">c9ba47f254fce2f9d35f3f4301414f14bc6691ee</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0].Columns[INVOICEDATE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="INVOICEDATE"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICEDATE]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0].Columns[ERPInvoice_Date]"
                          cachedDataType="date"
                          cachedName="ERPInvoice_Date"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPInvoice_Date]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0].Columns[ERPShip_Date]"
                          cachedDataType="date"
                          cachedName="ERPShip_Date"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPShip_Date]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0].Columns[SHIPDATE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="SHIPDATE"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[SHIPDATE]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Daikin Orders pending Invoice"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT OrderId
	, ERPPOKey
	, ERPPOKey_Derived = CAST(ERPPOKey AS NVARCHAR(8))
	, [ERPOrderNumber] 
	, OrderStatusTypeId =5 -- name='Shipped'
FROM dbo.Orders o
	INNER JOIN dbo.OrderStatusTypes ost
	 ON o.OrderStatusTypeId = ost.OrderStatusTypeId
 WHERE 1= 1
	AND NULLIF(o.ERPPOKey,0) IS NOT NULL
	AND o.[ERPStatus]='P'
	AND NULLIF(o.[ERPOrderNumber],'') IS NOT NULL
	AND NULLIF(o.[ERPInvoiceNumber],'') IS NULL
	AND ost.OrderStatusTypeId = 4</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT OrderId
	, ERPPOKey
	, ERPPOKey_Derived = CAST(ERPPOKey AS NVARCHAR(8))
	, [ERPOrderNumber] 
	, OrderStatusTypeId =5 -- name='Shipped'
FROM dbo.Orders o
	INNER JOIN dbo.OrderStatusTypes ost
	 ON o.OrderStatusTypeId = ost.OrderStatusTypeId
 WHERE 1= 1
	AND NULLIF(o.ERPPOKey,0) IS NOT NULL
	AND o.[ERPStatus]='P'
	AND NULLIF(o.[ERPOrderNumber],'') IS NOT NULL
	AND NULLIF(o.[ERPInvoiceNumber],'') IS NULL
	AND ost.OrderStatusTypeId = 4) [refTable]
where [refTable].[ERPOrderNumber] = ? and [refTable].[ERPPOKey_Derived] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="OrderId" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ERPPOKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ERPPOKey_Derived" dataType="DT_WSTR" length="8" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ERPOrderNumber" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OrderStatusTypeId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[OrderNumber_Derived]};#{Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[POkey_Derived]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input].Columns[POkey_Derived]"
                          cachedDataType="wstr"
                          cachedLength="8"
                          cachedName="POkey_Derived"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[POkey_Derived]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ERPPOKey_Derived</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input].Columns[OrderNumber_Derived]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="OrderNumber_Derived"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[OrderNumber_Derived]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ERPOrderNumber</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderId]"
                          dataType="i8"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderId]"
                          name="OrderId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OrderId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[ERPPOKey]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[ERPPOKey]"
                          name="ERPPOKey"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ERPPOKey</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]"
                          name="OrderStatusTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OrderStatusTypeId</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400"
                  componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="New Invoices in AS400"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CAST(E_POKEY AS varchar(6)) AS CHAR_POKEY, E_ORDNO,DHGGNB AS InvoiceNum, 
	CAST(DHALDT + 19000000 AS VARCHAR(10)) AS InvoiceDate,
	CAST(DHALDT + 19000000 AS VARCHAR(10)) AS ShipDate
FROM MBDHRES0  
	INNER JOIN EDI850HDR  
	 ON e_mco=dhaenb AND e_ordno=dhcvnb
 WHERE 1=1
 AND dhdccd='1'
 AND (DHALDT + 19000000)&gt;?</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"""00001"":Input",{3C3419DF-CACC-40DE-86F6-F591532E0F23};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Connections[OleDbConnection]"
                      connectionManagerID="{CC0294F2-D9AC-430F-83E9-BB5F7CD85663}:external"
                      connectionManagerRefId="Project.ConnectionManagers[iSeries]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_ORDNO]"
                          length="7"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]"
                          name="E_ORDNO"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICENUM]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[INVOICENUM]"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICENUM]"
                          name="INVOICENUM"
                          precision="6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICEDATE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[INVOICEDATE]"
                          length="10"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICEDATE]"
                          name="INVOICEDATE"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[SHIPDATE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[SHIPDATE]"
                          length="10"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[SHIPDATE]"
                          name="SHIPDATE"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[CHAR_POKEY]"
                          length="6"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]"
                          name="CHAR_POKEY"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          length="7"
                          name="E_ORDNO" />
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[INVOICENUM]"
                          dataType="numeric"
                          name="INVOICENUM"
                          precision="6" />
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[INVOICEDATE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="INVOICEDATE" />
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[SHIPDATE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="SHIPDATE" />
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].ExternalColumns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          name="CHAR_POKEY" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[CHAR_POKEY]"
                          name="CHAR_POKEY" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          length="7"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[E_ORDNO]"
                          name="E_ORDNO" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[INVOICENUM]"
                          dataType="numeric"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[INVOICENUM]"
                          name="INVOICENUM"
                          precision="6" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[INVOICEDATE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[INVOICEDATE]"
                          name="INVOICEDATE" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[SHIPDATE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[SHIPDATE]"
                          name="SHIPDATE" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success"
                  componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::JobExecutionRowCountSuccesses</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Invoice# and Invoice Date"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Orders]
  SET [ERPInvoiceNumber] = ?
	, [ERPInvoiceDate]  = ?
	, [ERPShipDate] =?
WHERE [OrderId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].Columns[INVOICENUM]"
                          cachedDataType="numeric"
                          cachedName="INVOICENUM"
                          cachedPrecision="6"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output].Columns[INVOICENUM]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].Columns[ERPInvoice_Date]"
                          cachedDataType="date"
                          cachedName="ERPInvoice_Date"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPInvoice_Date]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].Columns[ERPShip_Date]"
                          cachedDataType="date"
                          cachedName="ERPShip_Date"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[ERPShip_Date]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].Columns[OrderId]"
                          cachedDataType="i8"
                          cachedName="OrderId"
                          externalMetadataColumnId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="20"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="dbTimeStamp"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i8"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Update Order using API Call"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_48a433f37bf94e138942cdd1298e28e6.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D4890B69-C113-4BFC-9973-D88576236735}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_48a433f37bf94e138942cdd1298e28e6</RootNamespace>
    <AssemblyName>SC_48a433f37bf94e138942cdd1298e28e6</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="ServiceOutput.cs" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Runtime.Serialization.Json;
using System.Net;
using System.IO;
using System.Text;
using SC_48a433f37bf94e138942cdd1298e28e6;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool isStatusUpdated = Row.APICallSuccess;
        string errMessage = string.Empty;
        if (!Row.OrderId_IsNull && !Row.OrderStatusTypeId_IsNull)
        {
            isStatusUpdated = UpdateOrderStatus(Row.OrderId, Row.OrderStatusTypeId.ToString(), out errMessage);
        }
        Row.APICallSuccess = isStatusUpdated;
        Row.APIErrorInvoice = string.Format("API Call failed(Invoice).{0}",errMessage);


    }

    private bool UpdateOrderStatus(long pOrderNumber, string pNewOrderStatus, out string errMessage)
    {
        bool _isStatusUpdated = false;
        errMessage = string.Empty;

        string _webApiUrl = this.Variables.ORDERUPDATEAPI; // @"http://genappdev:8080/api/Order/UpdateOrderStatus
        string _jsonData = "{orderId:\"" + pOrderNumber.ToString() + "\", orderStatusTypeId: \"" + pNewOrderStatus.ToString() + "\"}";

        try
        {
            using (var client = new WebClient())
            {
                client.Headers[HttpRequestHeader.ContentType] = "application/json";
                var jsonResult = client.UploadString(_webApiUrl, "POST", _jsonData);
                DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(ServiceOutput));
                MemoryStream stream = new MemoryStream(Encoding.UTF8.GetBytes(jsonResult));
                ServiceOutput serviceoutput = (ServiceOutput)ser.ReadObject(stream);
                if (null != serviceoutput && serviceoutput.hasError == false && serviceoutput.isok == true)
                {
                    _isStatusUpdated = true;
                }
                else
                {
                    errMessage = string.Format("Failed to change Order status to {0}.", pNewOrderStatus);
                }

            }
        }
        catch (WebException webException)
        {
            errMessage = webException.Message;
        }
        catch (Exception exception)
        {
            errMessage = exception.Message;
        }

        return _isStatusUpdated;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 OrderId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool OrderId_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte OrderStatusTypeId
    {
        get
        {
            return Buffer.GetByte(BufferColumnIndexes[1]);
        }
    }
    public bool OrderStatusTypeId_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Boolean APICallSuccess
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool APICallSuccess_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String APIErrorInvoice
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool APIErrorInvoice_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48a433f37bf94e138942cdd1298e28e6.Properties.Settings.get_Default():SC_48a433f37bf94e138942cdd1298e28e6.Properties.Sett" +
    "ings")]

namespace SC_48a433f37bf94e138942cdd1298e28e6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ORDERUPDATEAPI
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ORDER_UPDATE_API"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_48a433f37bf94e138942cdd1298e28e6</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_48a433f37bf94e138942cdd1298e28e6</msb:DisplayName>
		<msb:ProjectId>{407F9FBD-5997-4681-95F3-1AA3F50CFE39}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_48a433f37bf94e138942cdd1298e28e6.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="ServiceOutput.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_48a433f37bf94e138942cdd1298e28e6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_48a433f37bf94e138942cdd1298e28e6")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48a433f37bf94e138942cdd1298e28e6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48a433f37bf94e138942cdd1298e28e6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_48a433f37bf94e138942cdd1298e28e6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_48a433f37bf94e138942cdd1298e28e6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_48a433f37bf94e138942cdd1298e28e6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ServiceOutput.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SC_48a433f37bf94e138942cdd1298e28e6
{
    public class ServiceOutput
    {

        public string id { get; set; }

        public bool hasError { get; set; }

        public bool isok { get; set; }

        public object messages { get; set; }

        public object model { get; set; }

        public object propertyReference { get; set; }

        public int status { get; set; }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_48a433f37bf94e138942cdd1298e28e6.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFTPF1cAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAA/kAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALBAAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
QAAAAAAAAEgAAAACAAUAICUAAJAbAAABAAAAAAAAAGgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CewQAAAQqIgIDfQQAAAQqHgJ7BQAABCoiAgN9BQAABCoeAnsGAAAE
KiICA30GAAAEKh4CewcAAAQqIgIDfQcAAAQqHgIoDwAACip+AigQAAAKAgJzKAAABn0IAAAEAgJz
KQAABn0JAAAEKpIEcgEAAHAabxEAAAosFQIFAgMoEgAACg4EcxkAAAZvEgAABipKKwcCA28TAAAG
A28mAAAGLfEqBioeAigUAAAKKh4CKBUAAAoqAAAAEzAEAFMAAAABAAARA28eAAAGCn4WAAAKCwNv
GwAABi0lA28dAAAGLR0CA28aAAAGA28cAAAGDBICKBcAAAoSASgXAAAGCgMGbx8AAAYDchEAAHAH
KBgAAApvIwAABioAGzAEAAEBAAACAAARFgoFfhYAAApRAnsJAAAEbyoAAAYLG40XAAABEwoRChZy
SwAAcKIRChcPASgZAAAKohEKGHJhAABwohEKGQRvGgAACqIRChpykQAAcKIRCigbAAAKDHMcAAAK
DQlvHQAACh8McpcAAHBvHgAACgkHcrkAAHAIbx8AAAoTBNACAAACKCAAAApzIQAAChMFKCIAAAoR
BG8jAAAKcyQAAAoTBhEFEQZvJQAACnQCAAACEwcRBywWEQdvAwAABi0NEQdvBQAABiwEFworDQVy
wwAAcAQoGAAAClHeCgksBglvJgAACtzeGhMIBREIbycAAApR3g0TCQURCW8nAAAKUd4ABioAAAAB
KAAAAgBbAH7ZAAoAAAAAAABVAJDlAA0oAAABAABVAJDyAA0nAAABHgIoEAAABioqAgMEBSgoAAAK
KlICeykAAAoCeyoAAAoWlG8rAAAKKiICFigsAAAKKlICeykAAAoCeyoAAAoXlG8tAAAKKiICFygs
AAAKKlICeykAAAoCeyoAAAoYlG8uAAAKKjoCGAOMKQAAASgvAAAKKiICGCgsAAAKKloDLAgCGCgw
AAAKKnIPAQBwczEAAAp6UgJ7KQAACgJ7KgAAChmUbzIAAAoqJgIZAygvAAAKKiICGSgsAAAKKloD
LAgCGSgwAAAKKnIPAQBwczEAAAp6HgIoMwAACioeAig0AAAKKjoCKA8AAAoCA30KAAAEKjoCKA8A
AAoCA30LAAAEKpYCewsAAARvNQAACnKsAQBwbzYAAAooNwAACm84AAAKdBcAAAEqHgIoDwAACioA
ABMwAgAtAAAAAwAAEX4MAAAELSByzgEAcNAIAAACKCAAAApvOgAACnM7AAAKCgaADAAABH4MAAAE
Khp+DQAABCoeAoANAAAEKhp+DgAABCouczAAAAaADgAABCoeAig9AAAKKgC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA1AkAACN+AABACgAApAwAACNTdHJp
bmdzAAAAAOQWAABAAgAAI1VTACQZAAAQAAAAI0dVSUQAAAA0GQAAXAIAACNCbG9iAAAAAAAAAAIA
AAFXFaIBCQEAAAD6JTMAFgAAAQAAADIAAAAJAAAADgAAADEAAAAbAAAAPQAAACQAAAADAAAABQAA
ABMAAAAfAAAAAQAAAAYAAAABAAAAAAAKAAEAAAAAAAYA8gDrAAoANwEWAQoARwEWAQ4AaQFUARIA
OwMWAQoASgMWAQYAqAWXBQYA2QXEBQYAwQaiBgYABgfsBgYAMQcfBwYASAcfBwYAZQcfBwYAhAcf
BwYAnQcfBwYAtgcfBwYA0QcfBwYA7AcfBwYABQgfBwYAPggeCAYAXggeCAYAfAgeCAYAlwjrAAYA
ngjrAAoAxwgWAQYA9AjrAAYACQnrAA4AIQkWCQ4AKwkWCQ4ASwkWCQYAcwnrAAYAeAnrABYA2wm5
CQYAAgr2CQYAJwodChYANAqcCQYASAodCgYAWgrrAAYAbgrrAA4AhAoWCQYAtArrAAYAxArrABoA
MwsLCxoAWgsLCwsAcwsAABoAowsLCwYA4gvPCwYA/wsfBw4AKwwVDA4ARAwVDAAAAAABAAAAAAAB
AAEAAQAQADIAQAAFAAEAAQABABAAZAAAAAkACAAQAAEAEAByAAAADAAKABQAAQAQAH0AAAANAAoA
GQABABAAigAAAAUACgAoAAEAEACWAAAABQALACkAAAAQAKAAqgAFAAwAKwAAARAA2QCqABEADgAv
AAEAMQI7AAEARQI+AAEAXwI+AAEAdQJBAAEAjwJBAAEApgJBAAEAyQJEAAYAigBXAAYAlgBbAAEA
ZQWRAAEAZQWRABEAuAWbABEA5QWfABEAKQa9AFAgAAAAAIYIgQETAAEAWCAAAAAAhgiIARcAAQBh
IAAAAACGCI8BHAACAGkgAAAAAIYInAEgAAIAciAAAAAAhgipARwAAwB6IAAAAACGCLIBIAADAIMg
AAAAAIYIuwElAAQAiyAAAAAAhgjIASkABACUIAAAAACGCNUBJQAFAJwgAAAAAIYI3wEpAAUApSAA
AAAAhgjpASUABgCtIAAAAACGCP8BKQAGALYgAAAAAIYIFQIuAAcAviAAAAAAhgggAjIABwDHIAAA
AACGGCsCNwAIAM8gAAAAAIYYKwI3AAgA7yAAAAAAxgBYA18ACAAUIQAAAADGAWUDaQAMACchAAAA
AMYBeQNpAA0AKSEAAAAAxgCQAzcADgAxIQAAAADGAJsDNwAOADwhAAAAAMYAeQNpAA4AnCEAAAAA
gQCnA28ADwDUIgAAAACGGCsCNwASANwiAAAAAIYYKwJ3ABIA5yIAAAAAhgi5A4EAFQD8IgAAAACG
CMUDHAAVAAUjAAAAAIYI2AOFABUAGiMAAAAAhgjuAxwAFQAjIwAAAACGCAsEHAAVADgjAAAAAIYI
HgQgABUARyMAAAAAhggxBBwAFgBQIwAAAACGCEsEIAAWAGcjAAAAAIYIZQQTABcAfCMAAAAAhgh5
BBcAFwCGIwAAAACGCI0EHAAYAI8jAAAAAIYIqAQgABgApiMAAAAAhgDDBBwAGQCuIwAAAACGAMsE
HAAZALYjAAAAAIYYKwKVABkAxSMAAAAAhhgrApUAGgDUIwAAAACGCHUFEwAbAPojAAAAAIMYKwI3
ABsABCQAAAAAkwj1BaMAGwA9JAAAAACTCAkGqAAbAEQkAAAAAJMIFQatABsATCQAAAAAlgg5BsEA
HABfJAAAAACGGCsCNwAcAFMkAAAAAJEYWQyhARwAAAABAE0GAAABAE0GAAABAE0GAAABAE0GAAAB
AE0GAAABAE0GAAABAE0GAAABAFMGAAACAFsGAAADAGUGAAAEAGwGAAABAGUGAAABAHYGAAABAHYG
AAABAHoGAAACAIcGAgADAJcGAAABAGUGAAACAM4GAAADAGwGAAABAE0GAAABAE0GAAABAE0GAAAB
AE0GAAABAOIGAAABAOIGAAABAE0GSQArAjcAUQArAhcAWQArAhcAYQArAhcAaQArAhcAcQArAhcA
eQArAhcAgQArAhcAiQArAhcAkQArAhcAmQArAhcAoQArAjIAqQArAjcAsQArAjcACQArAjcAEQAr
AjcAuQCvCNAAEQC2CNcAyQArAjcAEQCQAzcAEQCbAzcAuQDuCDsA0QD5CBMAuQACCd0A2QD5CBMA
CQD5CBMAuQAPCekA4QArAjcA4QA/Ce8A6QBdCfQA4QBmCfsA+QCKCQIBCQErAgoBEQELChABEQEU
ChYBGQErAhwBIQFPCiIBMQFmCjcAOQF4ChMAGQArAncAGQBlBkIBGQDOBkYBKQCRCkoBGQCaCk8B
KQChClQBKQCpCk8BGQBdCVkBGQC8CjIAUQErAhcAKQDeCl8BGQDDBBwAGQDLBBwAEQBEC2QBWQFq
C2oBEQCOC3EBYQG7C3cBeQErAjcA+QAIDH4BOQArAoQBiQErApEBIQArAjcAIABzAMsAIQBzAMsA
LgBrADwCLgAbAO0BLgAjABYCLgBjADMCLgATAKUBLgArABYCLgAzABYCLgA7AO0BLgBDABwCLgBL
ABYCQABzAMsAQQBzAMsAYABzAMsAYQBzAMsAgABzAMsAgQBzAMsAgwCbAMsAoABzAMsAoQBzAMsA
wABzAMsAwQBzAMsA4ABzAMsA4QBzAMsAAAFzAMsAAwHLAcsAIAFzAMsAQAFzAMsAYAFzAMsAgAFz
AMsAoAFzAMsAwAFzAMsAwQFzAMsAKQLjAZgBSQLjAZgB4wApAYwBAgABAAUACAAHABAACAARAAkA
EwAAAOECRwAAAOQCSwAAAO0CSwAAAPICTwAAAPsCTwAAAAEDTwAAABMDUwAAANcEiQAAAN8ESwAA
AO4EjQAAAAAFSwAAABkFSwAAACgFSwAAAD4FRwAAAE4FSwAAAIgFRwAAAKgFswAAACEGuAAAAEUG
xgACAAEAAwABAAIAAwACAAMABQABAAQABQACAAUABwABAAYABwABAAgACQACAAcACQACAAkACwAB
AAoACwACAAsADQABAAwADQACAA0ADwABAA4ADwACABoAEQACABsAEwACABwAFQACAB0AFwACAB4A
GQABAB8AGQACACAAGwABACEAGwABACMAHQACACIAHQACACQAHwABACUAHwACACoAIQACACwAIwAC
AC0AJQABAC4AJQACAC8AJwAEgAAAAQAAAEIXOloAAAAAAABAAAAABAAAAAAAAAAAAAAAAQDiAAAA
AAALAAAAAAAAAAAAAAAKAPkAAAAAAAQAAAAAAAAAAAAAAAEA6wAAAAAACwAAAAAAAAAAAAAACgAa
AwAAAAAEAAAAAAAAAAAAAAABAJwJAAAAAAsAAAAAAAAAAAAAAAoA6AoAAAAAAAAAAAEAAABgDAAA
AAAAPE1vZHVsZT4AU0NfNDhhNDMzZjM3YmY5NGUxMzg5NDJjZGQxMjk4ZTI4ZTYuZGxsAFNlcnZp
Y2VPdXRwdXQAU0NfNDhhNDMzZjM3YmY5NGUxMzg5NDJjZGQxMjk4ZTI4ZTYAVXNlckNvbXBvbmVu
dABTY3JpcHRNYWluAElucHV0MEJ1ZmZlcgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2Vz
AFNDXzQ4YTQzM2YzN2JmOTRlMTM4OTQyY2RkMTI5OGUyOGU2LlByb3BlcnRpZXMAU2V0dGluZ3MA
bXNjb3JsaWIAU3lzdGVtAE9iamVjdABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIA
U3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X2lkAHNldF9p
ZABnZXRfaGFzRXJyb3IAc2V0X2hhc0Vycm9yAGdldF9pc29rAHNldF9pc29rAGdldF9tZXNzYWdl
cwBzZXRfbWVzc2FnZXMAZ2V0X21vZGVsAHNldF9tb2RlbABnZXRfcHJvcGVydHlSZWZlcmVuY2UA
c2V0X3Byb3BlcnR5UmVmZXJlbmNlAGdldF9zdGF0dXMAc2V0X3N0YXR1cwAuY3RvcgA8aWQ+a19f
QmFja2luZ0ZpZWxkADxoYXNFcnJvcj5rX19CYWNraW5nRmllbGQAPGlzb2s+a19fQmFja2luZ0Zp
ZWxkADxtZXNzYWdlcz5rX19CYWNraW5nRmllbGQAPG1vZGVsPmtfX0JhY2tpbmdGaWVsZAA8cHJv
cGVydHlSZWZlcmVuY2U+a19fQmFja2luZ0ZpZWxkADxzdGF0dXM+a19fQmFja2luZ0ZpZWxkAGlk
AGhhc0Vycm9yAGlzb2sAbWVzc2FnZXMAbW9kZWwAcHJvcGVydHlSZWZlcmVuY2UAc3RhdHVzAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVN
YXAAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFVwZGF0ZU9yZGVyU3RhdHVzAGdldF9PcmRlcklkAGdl
dF9PcmRlcklkX0lzTnVsbABnZXRfT3JkZXJTdGF0dXNUeXBlSWQAZ2V0X09yZGVyU3RhdHVzVHlw
ZUlkX0lzTnVsbABnZXRfQVBJQ2FsbFN1Y2Nlc3MAc2V0X0FQSUNhbGxTdWNjZXNzAGdldF9BUElD
YWxsU3VjY2Vzc19Jc051bGwAc2V0X0FQSUNhbGxTdWNjZXNzX0lzTnVsbABnZXRfQVBJRXJyb3JJ
bnZvaWNlAHNldF9BUElFcnJvckludm9pY2UAZ2V0X0FQSUVycm9ySW52b2ljZV9Jc051bGwAc2V0
X0FQSUVycm9ySW52b2ljZV9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABPcmRlcklkAE9yZGVy
SWRfSXNOdWxsAE9yZGVyU3RhdHVzVHlwZUlkAE9yZGVyU3RhdHVzVHlwZUlkX0lzTnVsbABBUElD
YWxsU3VjY2VzcwBBUElDYWxsU3VjY2Vzc19Jc051bGwAQVBJRXJyb3JJbnZvaWNlAEFQSUVycm9y
SW52b2ljZV9Jc051bGwAUGFyZW50Q29tcG9uZW50AGdldF9PUkRFUlVQREFURUFQSQBPUkRFUlVQ
REFURUFQSQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfRGVmYXVsdABEZWZhdWx0AHZhbHVlAElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRN
YXAAUm93AHBPcmRlck51bWJlcgBwTmV3T3JkZXJTdGF0dXMAZXJyTWVzc2FnZQBTeXN0ZW0uUnVu
dGltZS5JbnRlcm9wU2VydmljZXMAT3V0QXR0cmlidXRlAEJ1ZmZlckNvbHVtbkluZGV4ZXMAQ29t
cG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1
dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBTdHJpbmcAU3RyaW5nQ29tcGFyaXNv
bgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBFbXB0eQBCeXRlAFRvU3RyaW5nAEZvcm1hdABJbnQ2NABDb25jYXQAU3lzdGVtLk5l
dABXZWJDbGllbnQAV2ViSGVhZGVyQ29sbGVjdGlvbgBnZXRfSGVhZGVycwBIdHRwUmVxdWVzdEhl
YWRlcgBzZXRfSXRlbQBVcGxvYWRTdHJpbmcAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNl
cmlhbGl6YXRpb24uSnNvbgBEYXRhQ29udHJhY3RKc29uU2VyaWFsaXplcgBTeXN0ZW0uVGV4dABF
bmNvZGluZwBnZXRfVVRGOABHZXRCeXRlcwBTeXN0ZW0uSU8ATWVtb3J5U3RyZWFtAFhtbE9iamVj
dFNlcmlhbGl6ZXIAU3RyZWFtAFJlYWRPYmplY3QASURpc3Bvc2FibGUARGlzcG9zZQBFeGNlcHRp
b24AZ2V0X01lc3NhZ2UAV2ViRXhjZXB0aW9uAEdldEludDY0AElzTnVsbABHZXRCeXRlAEdldEJv
b2xlYW4AQm9vbGVhbgBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0U3RyaW5n
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVz
AElEVFNWYXJpYWJsZTEwMABnZXRfSXRlbQBTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRf
RXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250
ZXh0AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ180OGE0MzNmMzdiZjk0ZTEzODk0
MmNkZDEyOThlMjhlNi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAPSQBuAHAAdQB0
ACAAMAAAOUEAUABJACAAQwBhAGwAbAAgAGYAYQBpAGwAZQBkACgASQBuAHYAbwBpAGMAZQApAC4A
ewAwAH0AABV7AG8AcgBkAGUAcgBJAGQAOgAiAAAvIgAsACAAbwByAGQAZQByAFMAdABhAHQAdQBz
AFQAeQBwAGUASQBkADoAIAAiAAAFIgB9AAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8A
bgAACVAATwBTAFQAAEtGAGEAaQBsAGUAZAAgAHQAbwAgAGMAaABhAG4AZwBlACAATwByAGQAZQBy
ACAAcwB0AGEAdAB1AHMAIAB0AG8AIAB7ADAAfQAuAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAIU8AUgBEAEUAUgBfAFUAUABEAEEAVABFAF8AQQBQAEkAAHFTAEMA
XwA0ADgAYQA0ADMAMwBmADMANwBiAGYAOQA0AGUAMQAzADgAOQA0ADIAYwBkAGQAMQAyADkAOABl
ADIAOABlADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAANY7POlx
BQ5EklBTHcgLN0cACLd6XFYZNOCJCImEXc2AgMyRAyAADgQgAQEOAyAAAgQgAQECAyAAHAQgAQEc
AyAACAQgAQEIAyAAAQIGDgIGAgIGHAIGCAMoAA4DKAACAygAHAMoAAgDBhIYAwYSHAkgBAEIDhIV
EhkFIAEBEhQHIAMCCg4QDgkgAwESFR0IEhkDIAAKAyAABQMoAAoDKAAFAwYSCQUgAQESCQMGEh0D
BhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIkBAAAEiQECAASJAQBAAAABiACAg4RYQUg
AR0ICAUAAg4OHAUHAwIOBQUAAQ4dDgQgABJ1BiACARF5DgYgAw4ODg4HAAESfRGAgQUgAQESfQUA
ABKAiQUgAR0FDgUgAQEdBQYgARwSgJUYBwsCDg4ScQ4SgIUSgI0SCBKAoRKAnR0OAwYSFQMGHQgE
IAEKCAQgAQIIBCABBQgFIAIBCBwEIAEOCAUgABKArQYgARKAsRwFAAASgLUGIAEcEoC5BSAAEoDB
ByACAQ4SgMEEBwESHQYgAQERgMkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzQ4
YTQzM2YzN2JmOTRlMTM4OTQyY2RkMTI5OGUyOGU2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA2EAAAAAAAAAAAAAA
7kAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQA6WkIXAAABADpaQhc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANAA4AGEA
NAAzADMAZgAzADcAYgBmADkANABlADEAMwA4ADkANAAyAGMAZABkADEAMgA5ADgAZQAyADgAZQA2
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA1ADQALgAyADMA
MAA5ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANAA4AGEANAAz
ADMAZgAzADcAYgBmADkANABlADEAMwA4ADkANAAyAGMAZABkADEAMgA5ADgAZQAyADgAZQA2AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ANAA4AGEANAAzADMAZgAzADcAYgBmADkANABlADEAMwA4ADkANAAyAGMAZABk
ADEAMgA5ADgAZQAyADgAZQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADQAOABhADQAMwAzAGYAMwA3AGIAZgA5ADQAZQAxADMAOAA5ADQAMgBjAGQAZAAx
ADIAOQA4AGUAMgA4AGUANgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANQA5ADUANAAuADIAMwAwADkAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADUANAAuADIAMwAwADkAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_48a433f37bf94e138942cdd1298e28e6</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$Package::ORDER_UPDATE_API</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">6ae7143eaf074881df41497dc5dc9628</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">8140cd3ad39834bdad254f9c7e08b2d112424c36</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0].Columns[OrderId]"
                          cachedDataType="i8"
                          cachedName="OrderId"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderId]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0].Columns[OrderStatusTypeId]"
                          cachedDataType="i4"
                          cachedName="OrderStatusTypeId"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0].Columns[APICall_Success]"
                          cachedDataType="bool"
                          cachedName="APICall_Success"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APICall_Success]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0].Columns[APIError_Invoice]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="APIError_Invoice"
                          lineageId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output].Columns[APIError_Invoice]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[API Call Fail]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail.Inputs[Row Count Input 1]"
                  name="API Call Fail"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[API Call Fail]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Derived Column Output]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Lookup Match Output]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Inputs[Input 0]"
                  name="Lookup Match Output"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[OLE DB Command Output]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Inputs[Input 0]"
                  name="OLE DB Command Output"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[OLE DB Source Output]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Output 0]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date.Inputs[OLE DB Command Input]"
                  name="Output 0"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date.Outputs[Output 0]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Output 01]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Inputs[Conditional Split Input]"
                  name="Output 0"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call.Outputs[Output 0]" />
                <path
                  refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Success]"
                  endId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success.Inputs[Row Count Input 1]"
                  name="Success"
                  startId="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split.Outputs[Success]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics End"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{500C4527-63AE-44D7-8383-CEC2F0D6C546}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order Invoice Update from Mapics End"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_17eaf1764f684f38aae35b68bfe43c5a"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::JobExecutionID,User::JobExecutionLogConnectionName"
              ReadWriteVariables="User::EmailMessage,User::JobExecutionDetailID,User::JobExecutionDetailResultTypeID,User::JobExecutionResultMessage,User::JobExecutionResultTypeID,User::JobExecutionRowCountBusinessFailures,User::JobExecutionRowCountSuccesses,User::JobExecutionRowCountSystemFailures,User::JobStatusUpdateFail">
              <ProjectItem
                Name="ST_17eaf1764f684f38aae35b68bfe43c5a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{9A589CC6-3134-4D8A-B9F3-41FF60A45426}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1c0e309a1d334cf0ba20ded7dda18c4e</RootNamespace><AssemblyName>ST_17eaf1764f684f38aae35b68bfe43c5a</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugaf422ec9-85cc-4f37-b508-98a51d49fd8f/4d1003bb-5bdc-4e51-854a-3eb09b6eca45&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1c0e309a1d334cf0ba20ded7dda18c4e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1c0e309a1d334cf0ba20ded7dda18c4e")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;

#endregion

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion




        #region "Properties"


        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string TaskName
        {
            get
            {
                return (string)Dts.Variables["System::TaskName"].Value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        public int JobExecutionDetailID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailID"].Value = value;
            }
        }

        public int JobExecutionRowCountSuccesses
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountSuccesses"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountSuccesses"].Value = value;
            }
        }

        public int JobExecutionRowCountBusinessFailures
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountBusinessFailures"].Value = value;
            }
        }

        public int JobExecutionRowCountSystemFailures
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountSystemFailures"].Value = value;
            }
        }

        public int JobExecutionDetailResultTypeID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailResultTypeID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = value;
            }
        }

        public string JobExecutionResultMessage
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionResultMessage"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultMessage"].Value = value;
            }
        }

        public string EmailMessage
        {
            get
            {
                return (string)Dts.Variables["User::EmailMessage"].Value;
            }
            set
            {
                Dts.Variables["User::EmailMessage"].Value = value;
            }
        }

        public int JobExecutionResultTypeID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionResultTypeID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultTypeID"].Value = value;
            }
        }

        public int JobStatusUpdateFail
        {
            get
            {
                return (int)Dts.Variables["User::JobStatusUpdateFail"].Value;
            }
            set
            {
                Dts.Variables["User::JobStatusUpdateFail"].Value = value;
            }
        }

        public bool HasErrors
        {
            get
            {
                return (JobExecutionRowCountBusinessFailures + JobExecutionRowCountSystemFailures) != 0;
            }
        }

        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            this.JobExecutionDetailResultTypeID = 1;

            if (this.HasErrors)
            {
                this.JobExecutionDetailResultTypeID = 4;
                this.JobExecutionResultTypeID = 2;
            }

            if (String.IsNullOrEmpty(this.JobExecutionResultMessage)
            || String.Compare(this.JobExecutionResultMessage, "Unknown", true) == 0)
            {
                this.JobExecutionResultMessage = String.Format(
                    "Successes: {0:N0} - Failures: {1:N0}",
                    this.JobExecutionRowCountSuccesses,
                    this.JobStatusUpdateFail);
            }

            if (this.JobExecutionRowCountBusinessFailures > 0)
            {
                this.JobExecutionResultMessage += String.Format(" - Business Failures: {0:N0}", this.JobExecutionRowCountBusinessFailures);
            }

            this.EmailMessage = getEmailMessage(this.JobExecutionRowCountSuccesses, this.JobStatusUpdateFail);
            this.GMJobExecutionDetailEnd();
            this.ClearSetupVariables();
            this.ClearFinalVariables();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private void ClearSetupVariables()
        {
            Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = 3;
            Dts.Variables["User::JobExecutionResultMessage"].Value = "Unknown";
            Dts.Variables["User::JobExecutionDetailID"].Value = -1;
        }

        private void ClearFinalVariables()
        {
            Dts.Variables["User::JobExecutionRowCountSuccesses"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value = 0;
        }

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
        }

        private void GMJobExecutionDetailEnd()
        {
            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                using (IDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = "Logs.GMJobExecutionDetailEndSp";
                    cmd.CommandType = CommandType.StoredProcedure;

                    IDbDataParameter p = cmd.CreateParameter();
                    p.ParameterName = "@iReqID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionDetailID;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iReqResultID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionDetailResultTypeID;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iReqResultMessage";
                    p.DbType = DbType.String;
                    p.Value = this.JobExecutionResultMessage;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountSuccesses";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountSuccesses;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountBusinessFailures";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountBusinessFailures;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountSystemFailures";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountSystemFailures;
                    cmd.Parameters.Add(p);

                    cmd.ExecuteNonQuery();
                }
            }
        }

        private string getEmailMessage(int success, int apifail)
        {
            System.Text.StringBuilder msg = new System.Text.StringBuilder(EmailMessage);
            msg.Append(Environment.NewLine);
            msg.Append(string.Format(@"
Status Change - [Accepted ==> Shipped]  
----------------------------------------------------------
Success                                 : {0:N0}", success));
             msg.Append(string.Format(@"
API Call failed to update               : {0:N0}", apifail));

            return msg.ToString();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1c0e309a1d334cf0ba20ded7dda18c4e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1c0e309a1d334cf0ba20ded7dda18c4e</msb:DisplayName>
		<msb:ProjectId>{D0793B9B-B397-44FC-A940-08D9772517CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_17eaf1764f684f38aae35b68bfe43c5a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Settings.get_Default():ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Sett" +
    "ings")]

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_39b863e16cb14d278cb60113efc2932e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIhTDVcAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAA3kUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJBFAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
RQAAAAAAAEgAAAACAAUAaCgAACgdAAABAAAAAAAAALAnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKct0AAHBvGAAACm8ZAAAKpR8AAAEq
hgIoFgAACm8XAAAKct0AAHBvGAAACgOMHwAAAW8aAAAKKoICKBYAAApvFwAACnIHAQBwbxgAAApv
GQAACqUfAAABKoYCKBYAAApvFwAACnIHAQBwbxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApy
PQEAcG8YAAAKbxkAAAqlHwAAASqGAigWAAAKbxcAAApyhQEAcG8YAAAKA4wfAAABbxoAAAoqggIo
FgAACm8XAAAKcs8BAHBvGAAACm8ZAAAKpR8AAAEqhgIoFgAACm8XAAAKciUCAHBvGAAACgOMHwAA
AW8aAAAKKoICKBYAAApvFwAACnJ9AgBwbxgAAApvGQAACqUfAAABKoYCKBYAAApvFwAACnLPAgBw
bxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApyIwMAcG8YAAAKbxkAAAqlHwAAASqGAigWAAAK
bxcAAApyIwMAcG8YAAAKA4wfAAABbxoAAAoqggIoFgAACm8XAAAKcm0DAHBvGAAACm8ZAAAKdB4A
AAEqcgIoFgAACm8XAAAKcm0DAHBvGAAACgNvGgAACiqCAigWAAAKbxcAAApyrQMAcG8YAAAKbxkA
AAp0HgAAASpyAigWAAAKbxcAAApyrQMAcG8YAAAKA28aAAAKKoICKBYAAApvFwAACnLTAwBwbxgA
AApvGQAACqUfAAABKoYCKBYAAApvFwAACnLTAwBwbxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcA
AApyEQQAcG8YAAAKbxkAAAqlHwAAASqGAigWAAAKbxcAAApyEQQAcG8YAAAKA4wfAAABbxoAAAoq
UgIoEAAABgIoEgAABlgW/gEW/gEqAAADMAQAyQAAAAAAAAACFygVAAAGAigeAAAGLA4CGigVAAAG
AhgoGwAABgIoFgAABigbAAAKLRMCKBYAAAZyRQQAcBcoHAAACi0mAnJVBABwAigOAAAGjB8AAAEC
KBwAAAaMHwAAASgdAAAKKBcAAAYCKBAAAAYWMSYCJSgWAAAGcp8EAHACKBAAAAaMHwAAASgeAAAK
KB8AAAooFwAABgICAigOAAAGAigcAAAGKCQAAAYoGQAABgIoIwAABgIoIAAABgIoIQAABgIoFgAA
ChZvIAAACioAAAADMAIAYAAAAAAAAAACKBYAAApvFwAACnIjAwBwbxgAAAoZjB8AAAFvGgAACgIo
FgAACm8XAAAKcm0DAHBvGAAACnJFBABwbxoAAAoCKBYAAApvFwAACnIHAQBwbxgAAAoVjB8AAAFv
GgAACioDMAIAYQAAAAAAAAACKBYAAApvFwAACnI9AQBwbxgAAAoWjB8AAAFvGgAACgIoFgAACm8X
AAAKcs8BAHBvGAAAChaMHwAAAW8aAAAKAigWAAAKbxcAAApyfQIAcG8YAAAKFowfAAABbxoAAAoq
dgIoFgAACm8hAAAKAigIAAAGbyIAAAoDbyMAAAoqABswAgCRAQAAAgAAEQIUKCIAAAZ0IgAAAQoG
byQAAAoLB3LZBABwbyUAAAoHGm8mAAAKB28nAAAKDAhyFwUAcG8oAAAKCB8LbykAAAoIAigMAAAG
jB8AAAFvKgAACgdvKwAACghvLAAACiYHbycAAAoMCHInBQBwbygAAAoIHwtvKQAACggCKBQAAAaM
HwAAAW8qAAAKB28rAAAKCG8sAAAKJgdvJwAACgwIckMFAHBvKAAACggfEG8pAAAKCAIoFgAABm8q
AAAKB28rAAAKCG8sAAAKJgdvJwAACgwIcmkFAHBvKAAACggfC28pAAAKCAIoDgAABowfAAABbyoA
AAoHbysAAAoIbywAAAomB28nAAAKDAhykQUAcG8oAAAKCB8LbykAAAoIAigQAAAGjB8AAAFvKgAA
CgdvKwAACghvLAAACiYHbycAAAoMCHLHBQBwbygAAAoIHwtvKQAACggCKBIAAAaMHwAAAW8qAAAK
B28rAAAKCG8sAAAKJgdvLQAACibeCgcsBgdvLgAACtzeCgYsBgZvLgAACtwqAAAAQTQAAAIAAAAU
AAAAZgEAAHoBAAAKAAAAAAAAAAIAAAANAAAAeQEAAIYBAAAKAAAAAAAAABMwAwBNAAAAAwAAEQIo
GAAABnMvAAAKCgYoMAAACm8xAAAKJgZy+QUAcAOMHwAAASgeAAAKbzEAAAomBnIsBwBwBIwfAAAB
KB4AAApvMQAACiYGbzIAAAoqHgIoMwAACioAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAbAcAACN+AADYBwAAvAsAACNTdHJpbmdzAAAAAJQTAACUBwAA
I1VTACgbAAAQAAAAI0dVSUQAAAA4GwAA8AEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMA
FgAAAQAAACwAAAAFAAAABgAAACUAAAAOAAAAMwAAAAIAAAAPAAAAAwAAAAMAAAAQAAAAGwAAAAEA
AAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCg
AYsBBgCCBmgGBgCtBpsGBgDEBpsGBgDhBpsGBgAAB5sGBgAZB5sGBgAyB5sGBgBNB5sGBgBoB5sG
BgCBB5sGBgC6B5oHBgDaB5oHBgAvCBwIBgBMCLoABgBRCLoABgB1CJsGCgChCIsICgC6CIsIBgDP
CJoHDgDxCBQBDgATCRQBEgBsCUwJEgCECUwJBgCgCboABgCnCboAEgDqCUwJEgAGCkwJFgAkChgK
FgAyChgKFgBbChgKFgB3ChgKFgCYChgKFgC5ChgKFgDLChgKBgAGC/MKBgAgC7oABgBACzQLBgBO
C7oAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQA
CAADAQAAowAAABEABAAmABEAfwETABEArAEXABEA9gE5AAYGNgZ0AFaAPgZ3AFaARgZ3AFAgAAAA
AIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAA
lggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY6gisAAIAuyAAAAAAhggaAkcAAgDcIAAAAACG
CDwCRwACAP0gAAAAAIYISQJLAAIAHiEAAAAAhghcAk8AAgBAIQAAAACGCG8CSwADAGEhAAAAAIYI
iAJPAAMAgyEAAAAAhgihAksABACkIQAAAACGCMMCTwAEAMYhAAAAAIYI5QJLAAUA5yEAAAAAhggO
A08ABQAJIgAAAACGCDcDSwAGACoiAAAAAIYIXgNPAAYATCIAAAAAhgiFA0sABwBtIgAAAACGCKgD
TwAHAI8iAAAAAIYIywNHAAgAsCIAAAAAhgjpA1QACADNIgAAAACGCAcERwAJAO4iAAAAAIYIGARU
AAkACyMAAAAAhggpBEsACgAsIwAAAACGCEYETwAKAE4jAAAAAIYIYwRLAAsAbyMAAAAAhgh7BE8A
CwCRIwAAAACGCJMEWQAMAKgjAAAAAIYAoQQbAAwAgCQAAAAAgQCmBBsADADsJAAAAACBALoEGwAM
AFklAAAAAIYAzgRdAAwAeCUAAAAAgQDgBBsADQBMJwAAAACBAPgEYgANAKUnAAAAAIYYvAEbAA8A
AAABAE4GAAABAE4GAAABAE4GAAABAE4GAAABAE4GAAABAE4GAAABAE4GAAABAE4GAAABAE4GAAAB
AE4GAAABAE4GAAABAFQGAAABAFgGAAACAGAGOQC8AVQAQQC8AVQASQC8AVQAUQC8AVQAWQC8AVQA
YQC8AVQAaQC8AVQAcQC8AVQAeQC8AVQAgQC8AVQAiQC8AU8AkQC8ARsAmQC8ARsACQC8ARsAoQBj
CIUAoQB+CIwAKQC8AZEAuQC8AZ0AyQC8ARsAEQC8ARsA0QC8ARsAGQAlCbAA2QB2CbUA4QCNCboA
6QCWCcAA6QCtCcQA8QC3CckA8QDFCc4A8QDNCdUA8QDNCdwA8QDUCeIA2QDbCU8A2QD2CegAAQGN
Ce4ACQHOBF0AEQE9CvUAGQFLClQAGQFnCvsAGQGICgIBMQGnClQAMQHACggBMQGtCcQAGQHkCg8B
SQEMCxUBGQEQC0sAUQEsCxsAWQG8AVQAYQFaCyYBWQFmCyoBCQBtC0cAGQC8ARsACAAUAHsACAAY
AIAAKQCTAKMALgAbAKgBLgAjAKgBLgBjAM4BLgALADcBLgATAH8BLgAzAH8BLgArAKgBLgA7AK4B
LgBDAKgBLgBbAMUBQwBrAIAASQCTAKMAYQCbAIAAgwCrAIAAmAAaATEBAgABAAMAAwAEAAQAAABv
AS8AAADuATQAAAASAkIAAAAIBWgAAAAmBWgAAAAvBWwAAAA+BWwAAABTBWwAAABxBWwAAACWBWwA
AAC5BWwAAADYBWgAAADyBWgAAAD/BWwAAAAYBmwAAAAsBnAAAgACAAMAAQAEAAUAAgADAAUAAgAF
AAcAAgAIAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAMAA8AAQANAA8AAgAOABEAAQAPABEAAQARABMA
AgAQABMAAQATABUAAgASABUAAgAUABcAAQAVABcAAQAXABkAAgAWABkAAgAYABsAAQAZABsAAgAa
AB0AAQAbAB0AAgAcAB8AAQAdAB8AAgAeACEABIAAAAEAAAA6F1RiAAAAAAAA+AcAAAQAAAAAAAAA
AAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAA
AAAAAAAAAAoALQkAAAAABAAAAAAAAAAAAAAAAQAYCgAAAAAAAAAAAQAAAHYLAAAFAAQAAAAAAAA8
TW9kdWxlPgBTVF8zOWI4NjNlMTZjYjE0ZDI3OGNiNjAxMTNlZmMyOTMyZS5kbGwAUmVzb3VyY2Vz
AFNUXzFjMGUzMDlhMWQzMzRjZjBiYTIwZGVkN2RkYTE4YzRlLlByb3BlcnRpZXMAU2V0dGluZ3MA
U2NyaXB0TWFpbgBTVF8xYzBlMzA5YTFkMzM0Y2YwYmEyMGRlZDdkZGExOGM0ZQBTY3JpcHRSZXN1
bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABnZXRfSm9iRXhlY3V0aW9uTG9nQ29ubmVjdGlvbk5hbWUA
Z2V0X1Rhc2tOYW1lAGdldF9Kb2JFeGVjdXRpb25JRABzZXRfSm9iRXhlY3V0aW9uSUQAZ2V0X0pv
YkV4ZWN1dGlvbkRldGFpbElEAHNldF9Kb2JFeGVjdXRpb25EZXRhaWxJRABnZXRfSm9iRXhlY3V0
aW9uUm93Q291bnRTdWNjZXNzZXMAc2V0X0pvYkV4ZWN1dGlvblJvd0NvdW50U3VjY2Vzc2VzAGdl
dF9Kb2JFeGVjdXRpb25Sb3dDb3VudEJ1c2luZXNzRmFpbHVyZXMAc2V0X0pvYkV4ZWN1dGlvblJv
d0NvdW50QnVzaW5lc3NGYWlsdXJlcwBnZXRfSm9iRXhlY3V0aW9uUm93Q291bnRTeXN0ZW1GYWls
dXJlcwBzZXRfSm9iRXhlY3V0aW9uUm93Q291bnRTeXN0ZW1GYWlsdXJlcwBnZXRfSm9iRXhlY3V0
aW9uRGV0YWlsUmVzdWx0VHlwZUlEAHNldF9Kb2JFeGVjdXRpb25EZXRhaWxSZXN1bHRUeXBlSUQA
Z2V0X0pvYkV4ZWN1dGlvblJlc3VsdE1lc3NhZ2UAc2V0X0pvYkV4ZWN1dGlvblJlc3VsdE1lc3Nh
Z2UAZ2V0X0VtYWlsTWVzc2FnZQBzZXRfRW1haWxNZXNzYWdlAGdldF9Kb2JFeGVjdXRpb25SZXN1
bHRUeXBlSUQAc2V0X0pvYkV4ZWN1dGlvblJlc3VsdFR5cGVJRABnZXRfSm9iU3RhdHVzVXBkYXRl
RmFpbABzZXRfSm9iU3RhdHVzVXBkYXRlRmFpbABnZXRfSGFzRXJyb3JzAE1haW4AQ2xlYXJTZXR1
cFZhcmlhYmxlcwBDbGVhckZpbmFsVmFyaWFibGVzAEFjcXVpcmVDb25uZWN0aW9uAEdNSm9iRXhl
Y3V0aW9uRGV0YWlsRW5kAGdldEVtYWlsTWVzc2FnZQBKb2JFeGVjdXRpb25Mb2dDb25uZWN0aW9u
TmFtZQBUYXNrTmFtZQBKb2JFeGVjdXRpb25JRABKb2JFeGVjdXRpb25EZXRhaWxJRABKb2JFeGVj
dXRpb25Sb3dDb3VudFN1Y2Nlc3NlcwBKb2JFeGVjdXRpb25Sb3dDb3VudEJ1c2luZXNzRmFpbHVy
ZXMASm9iRXhlY3V0aW9uUm93Q291bnRTeXN0ZW1GYWlsdXJlcwBKb2JFeGVjdXRpb25EZXRhaWxS
ZXN1bHRUeXBlSUQASm9iRXhlY3V0aW9uUmVzdWx0TWVzc2FnZQBFbWFpbE1lc3NhZ2UASm9iRXhl
Y3V0aW9uUmVzdWx0VHlwZUlEAEpvYlN0YXR1c1VwZGF0ZUZhaWwASGFzRXJyb3JzAHZhbHVlX18A
U3VjY2VzcwBGYWlsdXJlAHZhbHVlAHR4bgBzdWNjZXNzAGFwaWZhaWwAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzM5Yjg2M2UxNmNi
MTRkMjc4Y2I2MDExM2VmYzI5MzJlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2Rl
bABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVt
AGdldF9WYWx1ZQBTdHJpbmcASW50MzIAc2V0X1ZhbHVlAElzTnVsbE9yRW1wdHkAQ29tcGFyZQBG
b3JtYXQAQ29uY2F0AHNldF9UYXNrUmVzdWx0AENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBD
b25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGF0YQBJRGJDb25uZWN0aW9uAElEYkNvbW1hbmQAQ3Jl
YXRlQ29tbWFuZABzZXRfQ29tbWFuZFRleHQAQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUeXBlAElE
YkRhdGFQYXJhbWV0ZXIAQ3JlYXRlUGFyYW1ldGVyAElEYXRhUGFyYW1ldGVyAHNldF9QYXJhbWV0
ZXJOYW1lAERiVHlwZQBzZXRfRGJUeXBlAElEYXRhUGFyYW1ldGVyQ29sbGVjdGlvbgBnZXRfUGFy
YW1ldGVycwBTeXN0ZW0uQ29sbGVjdGlvbnMASUxpc3QAQWRkAEV4ZWN1dGVOb25RdWVyeQBJRGlz
cG9zYWJsZQBEaXNwb3NlAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIARW52aXJvbm1lbnQAZ2V0
X05ld0xpbmUAQXBwZW5kAFRvU3RyaW5nAFNUXzFjMGUzMDlhMWQzMzRjZjBiYTIwZGVkN2RkYTE4
YzRlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfADEAYwAwAGUAMwAw
ADkAYQAxAGQAMwAzADQAYwBmADAAYgBhADIAMABkAGUAZAA3AGQAZABhADEAOABjADQAZQAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAR1UAcwBlAHIAOgA6AEoAbwBi
AEUAeABlAGMAdQB0AGkAbwBuAEwAbwBnAEMAbwBuAG4AZQBjAHQAaQBvAG4ATgBhAG0AZQAAIVMA
eQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAClVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBj
AHUAdABpAG8AbgBJAEQAADVVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBEAGUA
dABhAGkAbABJAEQAAEdVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBSAG8AdwBD
AG8AdQBuAHQAUwB1AGMAYwBlAHMAcwBlAHMAAElVAHMAZQBzAHIAOgA6AEoAbwBiAEUAeABlAGMA
dQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABTAHUAYwBjAGUAcwBzAGUAcwAAVVUAcwBlAHIAOgA6
AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABCAHUAcwBpAG4AZQBzAHMA
RgBhAGkAbAB1AHIAZQBzAABXVQBzAGUAcwByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBS
AG8AdwBDAG8AdQBuAHQAQgB1AHMAaQBuAGUAcwBzAEYAYQBpAGwAdQByAGUAcwAAUVUAcwBlAHIA
OgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABTAHkAcwB0AGUAbQBG
AGEAaQBsAHUAcgBlAHMAAFNVAHMAZQBzAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIA
bwB3AEMAbwB1AG4AdABTAHkAcwB0AGUAbQBGAGEAaQBsAHUAcgBlAHMAAElVAHMAZQByADoAOgBK
AG8AYgBFAHgAZQBjAHUAdABpAG8AbgBEAGUAdABhAGkAbABSAGUAcwB1AGwAdABUAHkAcABlAEkA
RAAAP1UAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAZQBzAHUAbAB0AE0AZQBz
AHMAYQBnAGUAACVVAHMAZQByADoAOgBFAG0AYQBpAGwATQBlAHMAcwBhAGcAZQAAPVUAcwBlAHIA
OgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAZQBzAHUAbAB0AFQAeQBwAGUASQBEAAAzVQBz
AGUAcgA6ADoASgBvAGIAUwB0AGEAdAB1AHMAVQBwAGQAYQB0AGUARgBhAGkAbAAAD1UAbgBrAG4A
bwB3AG4AAElTAHUAYwBjAGUAcwBzAGUAcwA6ACAAewAwADoATgAwAH0AIAAtACAARgBhAGkAbAB1
AHIAZQBzADoAIAB7ADEAOgBOADAAfQABOSAALQAgAEIAdQBzAGkAbgBlAHMAcwAgAEYAYQBpAGwA
dQByAGUAcwA6ACAAewAwADoATgAwAH0AAT1MAG8AZwBzAC4ARwBNAEoAbwBiAEUAeABlAGMAdQB0
AGkAbwBuAEQAZQB0AGEAaQBsAEUAbgBkAFMAcAAAD0AAaQBSAGUAcQBJAEQAABtAAGkAUgBlAHEA
UgBlAHMAdQBsAHQASQBEAAAlQABpAFIAZQBxAFIAZQBzAHUAbAB0AE0AZQBzAHMAYQBnAGUAACdA
AGkAUgBvAHcAQwBvAHUAbgB0AFMAdQBjAGMAZQBzAHMAZQBzAAA1QABpAFIAbwB3AEMAbwB1AG4A
dABCAHUAcwBpAG4AZQBzAHMARgBhAGkAbAB1AHIAZQBzAAAxQABpAFIAbwB3AEMAbwB1AG4AdABT
AHkAcwB0AGUAbQBGAGEAaQBsAHUAcgBlAHMAAIExDQAKAFMAdABhAHQAdQBzACAAQwBoAGEAbgBn
AGUAIAAtACAAWwBBAGMAYwBlAHAAdABlAGQAIAA9AD0APgAgAFMAaABpAHAAcABlAGQAXQAgACAA
DQAKAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ADQAKAFMAdQBjAGMAZQBzAHMAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAOgAgAHsAMAA6AE4AMAB9AAFlDQAKAEEA
UABJACAAQwBhAGwAbAAgAGYAYQBpAGwAZQBkACAAdABvACAAdQBwAGQAYQB0AGUAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAOgAgAHsAMAA6AE4AMAB9AAAAABxmjz32adlPvKQ1Qb8mWZkA
CLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkD
BhIMBAAAEgwECAASDAMgAA4DIAAIBCABAQgEIAEBDgMgAAIEIAEcHAUgAg4ICAMoAA4DKAAIAygA
AgIGCAMGERQEAAAAAAQBAAAABgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAA
AwAAAQQgABJtBCAAEnEFIAESdRwDIAAcBCABARwEAAECDgYAAwgODgIGAAMODhwcBQACDg4cBQAC
Dg4OBSAAEoCBBiABEoCFHAUgABKAjQYgAQERgJEFIAASgJUGIAEBEYCdBSAAEoChBCABCBwLBwMS
gIkSgI0SgJUDAAAOBiABEoCtDgUHARKArUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8xYzBlMzA5YTFk
MzM0Y2YwYmEyMGRlZDdkZGExOGM0ZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAuEUAAAAAAAAAAAAAzkUAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBFAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAVGI6FwAAAQBUYjoXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEAYwAwAGUA
MwAwADkAYQAxAGQAMwAzADQAYwBmADAAYgBhADIAMABkAGUAZAA3AGQAZABhADEAOABjADQAZQAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkANAA2AC4AMgA1ADEA
NwAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMAOQBiADgANgAz
AGUAMQA2AGMAYgAxADQAZAAyADcAOABjAGIANgAwADEAMQAzAGUAZgBjADIAOQAzADIAZQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADMAOQBiADgANgAzAGUAMQA2AGMAYgAxADQAZAAyADcAOABjAGIANgAwADEAMQAz
AGUAZgBjADIAOQAzADIAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAxAGMAMABlADMAMAA5AGEAMQBkADMAMwA0AGMAZgAwAGIAYQAyADAAZABlAGQANwBk
AGQAYQAxADgAYwA0AGUAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADUAOQA0ADYALgAyADUAMQA3ADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADUAOQA0ADYALgAyADUAMQA3ADIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA4DUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{1DE8F2F7-E208-41C9-9E0F-1EA7CF917E9B}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order Invoice Update from Mapics Start"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0530527f408d481fa58e6368804b895e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::JobExecutionID,User::JobExecutionLogConnectionName"
              ReadWriteVariables="User::JobExecutionDetailID,User::JobExecutionDetailResultTypeID,User::JobExecutionResultMessage,User::JobExecutionResultTypeID,User::JobExecutionRowCountBusinessFailures,User::JobExecutionRowCountSuccesses,User::JobExecutionRowCountSystemFailures,User::JobStatusUpdateFail">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c4a5f8583d1b4916869f9ab557ef3ebf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c4a5f8583d1b4916869f9ab557ef3ebf")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System.Data;

#endregion

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region "Properties"

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string TaskName
        {
            get
            {
                return (string)Dts.Variables["System::TaskName"].Value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        public int JobExecutionDetailID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailID"].Value = value;
            }
        }
        #endregion


        private void ClearVariables()
        {
            Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = 3;
            Dts.Variables["User::JobExecutionResultMessage"].Value = "Unknown";
            Dts.Variables["User::JobExecutionDetailID"].Value = -1;
            Dts.Variables["User::JobExecutionRowCountSuccesses"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value = 0;
            Dts.Variables["User::JobStatusUpdateFail"].Value = 0;
        }

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
        }

        private int GMJobExecutionDetailStart()
        {
            try
            {


                using (IDbConnection con = (IDbConnection)AcquireConnection(null))
                {
                    using (IDbCommand cmd = con.CreateCommand())
                    {
                        cmd.CommandText = "Logs.GMJobExecutionDetailStartSp";
                        cmd.CommandType = CommandType.StoredProcedure;

                        IDbDataParameter p = cmd.CreateParameter();
                        p.ParameterName = "@iReqJobExecutionID";
                        p.DbType = DbType.Int32;
                        p.Value = this.JobExecutionID;
                        cmd.Parameters.Add(p);

                        p = cmd.CreateParameter();
                        p.ParameterName = "@iReqTaskName";
                        p.DbType = DbType.String;
                        p.Value = this.TaskName;
                        cmd.Parameters.Add(p);

                        return (int)cmd.ExecuteScalar();
                    }
                }
            }
            catch (System.Exception ex)
            {
                string msg = ex.Message;
                throw;
            }
        }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            this.ClearVariables();
            this.JobExecutionDetailID = this.GMJobExecutionDetailStart();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c4a5f8583d1b4916869f9ab557ef3ebf</msb:CodeName>
		<msb:DisplayName>ST_c4a5f8583d1b4916869f9ab557ef3ebf</msb:DisplayName>
		<msb:ProjectId>{BF046FA4-D4B3-4C43-A9F5-4D41B954C8CE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0530527f408d481fa58e6368804b895e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Settings.get_Default():ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Sett" +
    "ings")]

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0530527f408d481fa58e6368804b895e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{1A3CD67C-66A8-4222-9FE3-5E32A69442A1}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_c4a5f8583d1b4916869f9ab557ef3ebf</RootNamespace><AssemblyName>ST_0530527f408d481fa58e6368804b895e</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug77eea8e5-000c-4d3a-a861-9a5caa0e8bc8/f0040e31-a05f-4f31-93ae-44bdd0609d11&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e8d0b4ac4a3946a38f77d4dce3757001.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM5CDVcAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAADjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALw3AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NwAAAAAAAEgAAAACAAUAaCQAAFQTAAABAAAAAAAAALAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKct0AAHBvGAAACm8ZAAAKpR8AAAEq
hgIoFgAACm8XAAAKct0AAHBvGAAACgOMHwAAAW8aAAAKKoICKBYAAApvFwAACnIHAQBwbxgAAApv
GQAACqUfAAABKoYCKBYAAApvFwAACnIHAQBwbxgAAAoDjB8AAAFvGgAACioAAzACAOAAAAAAAAAA
AigWAAAKbxcAAApyPQEAcG8YAAAKGYwfAAABbxoAAAoCKBYAAApvFwAACnKHAQBwbxgAAApyxwEA
cG8aAAAKAigWAAAKbxcAAApyBwEAcG8YAAAKFYwfAAABbxoAAAoCKBYAAApvFwAACnLXAQBwbxgA
AAoWjB8AAAFvGgAACgIoFgAACm8XAAAKch8CAHBvGAAAChaMHwAAAW8aAAAKAigWAAAKbxcAAApy
dQIAcG8YAAAKFowfAAABbxoAAAoCKBYAAApvFwAACnLHAgBwbxgAAAoWjB8AAAFvGgAACip2AigW
AAAKbxsAAAoCKAgAAAZvHAAACgNvHQAACioAABswAgDBAAAAAgAAEQIUKA8AAAZ0IgAAAQoGbx4A
AAoLB3L7AgBwbx8AAAoHGm8gAAAKB28hAAAKDAhyPQMAcG8iAAAKCB8LbyMAAAoIAigKAAAGjB8A
AAFvJAAACgdvJQAACghvJgAACiYHbyEAAAoMCHJlAwBwbyIAAAoIHxBvIwAACggCKAkAAAZvJAAA
CgdvJQAACghvJgAACiYHbycAAAqlHwAAARME3h4HLAYHbygAAArcBiwGBm8oAAAK3A0JbykAAAom
/hoRBCoAAAABKAAAAgAUAIygAAoAAAAAAgANAJ2qAAoAAAAAAAAAALS0AAorAAABfgIoDgAABgIC
KBAAAAYoDQAABgIoFgAAChZvKgAACioeAigrAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAABQBQAAI34AALwFAABQCAAAI1N0cmluZ3MAAAAADA4AAIQD
AAAjVVMAkBEAABAAAAAjR1VJRAAAAKARAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPol
MwAWAAABAAAAKwAAAAUAAAAGAAAAEgAAAAQAAAArAAAAAgAAAA8AAAACAAAAAwAAAAcAAAAKAAAA
AQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEG
AKABiwEGAGgDTgMGAJMDgQMGAKoDgQMGAMcDgQMGAOYDgQMGAP8DgQMGABgEgQMGADMEgQMGAE4E
gQMGAGcEgQMGAKAEgAQGAMAEgAQGABUFAgUGADIFugAGADcFugAGAFsFgQMKAIcFcQUKAKAFcQUG
ALUFgAQOANcFFAEOAPkFFAESAFIGMgYSAGoGMgYGAIYGugAGAI0GugASAJ0GMgYSALkGMgYWANcG
ywYWAOUGywYWAA4HywYWACoHywYWAEsHywYWAGwHywYWAH4HywYGALkHpgcGANEHugAGAOUHugAA
AAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMB
AACjAAAAEQAEABMAEQB/ARMAEQCsARcAEQD2ATkABgYsA2EAVoA0A2QAVoA8A2QAUCAAAAAAgxi8
ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYC
PQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRjQBZ4AAgC7IAAAAACGCBoCRwACANwgAAAAAIYIPAJH
AAIA/SAAAAAAhghJAksAAgAeIQAAAACGCFwCTwACAEAhAAAAAIYIbwJLAAMAYSEAAAAAhgiIAk8A
AwCEIQAAAACBAKECGwAEAHAiAAAAAIYAsAJUAAQAkCIAAAAAgQDCAksABQCIIwAAAACGANwCGwAF
AKgjAAAAAIYYvAEbAAUAAAABAEQDAAABAEQDAAABAEQDAAABAEoDOQC8AXIAQQC8AXIASQC8AXIA
UQC8AXIAWQC8AXIAYQC8AXIAaQC8AXIAcQC8AXIAeQC8AXIAgQC8AXIAiQC8AU8AkQC8ARsAmQC8
ARsACQC8ARsAoQBJBXcAoQBkBX4AKQC8AYMAuQC8AY8AyQC8ARsAEQC8ARsA0QC8ARsAGQALBqIA
2QBcBqcA4QBzBqwA6QB8BrIA6QCTBrYA2QCpBrsAAQFzBsEACQGwAlQAEQHwBsgAGQH+BnIAGQEa
B84AGQE7B9UAMQFaB3IAMQFzB9sAMQGTBrYAGQGXB+IASQG/B+gAGQHDB7IAUQHdBxsAWQHvB0cA
2QD7B08AGQC8ARsACAAUAGgACAAYAG0AKQCTAJUALgAbAG4BLgAjAG4BLgBjAJQBLgALAP0ALgAT
AEUBLgAzAEUBLgArAG4BLgA7AHQBLgBDAG4BLgBbAIsBQwBrAG0ASQCTAJUAYQCbAG0AgwCrAG0A
igDtAAIAAQADAAMABAAEAAAAbwEvAAAA7gE0AAAAEgJCAAAA4QJZAAAA/wJZAAAACANdAAAAFwNd
AAIAAgADAAIAAwAFAAEABAAFAAIABQAHAAIACAAJAAIACQALAAEACwANAAIACgANAAIADAAPAAEA
DQAPAASAAAABAAAAOhf3WQAAAAAAAN4EAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAA
AAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKABMGAAAAAAQAAAAAAAAA
AAAAAAEAywYAAAAAAAAAAAEAAAAKCAAABQAEAAAAADxNb2R1bGU+AFNUX2U4ZDBiNGFjNGEzOTQ2
YTM4Zjc3ZDRkY2UzNzU3MDAxLmRsbABSZXNvdXJjZXMAU1RfYzRhNWY4NTgzZDFiNDkxNjg2OWY5
YWI1NTdlZjNlYmYuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2M0YTVmODU4M2Qx
YjQ5MTY4NjlmOWFiNTU3ZWYzZWJmAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVj
dABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQu
U3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0
VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5m
bwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AGdl
dF9Kb2JFeGVjdXRpb25Mb2dDb25uZWN0aW9uTmFtZQBnZXRfVGFza05hbWUAZ2V0X0pvYkV4ZWN1
dGlvbklEAHNldF9Kb2JFeGVjdXRpb25JRABnZXRfSm9iRXhlY3V0aW9uRGV0YWlsSUQAc2V0X0pv
YkV4ZWN1dGlvbkRldGFpbElEAENsZWFyVmFyaWFibGVzAEFjcXVpcmVDb25uZWN0aW9uAEdNSm9i
RXhlY3V0aW9uRGV0YWlsU3RhcnQATWFpbgBKb2JFeGVjdXRpb25Mb2dDb25uZWN0aW9uTmFtZQBU
YXNrTmFtZQBKb2JFeGVjdXRpb25JRABKb2JFeGVjdXRpb25EZXRhaWxJRAB2YWx1ZV9fAFN1Y2Nl
c3MARmFpbHVyZQB2YWx1ZQB0eG4AU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2U4ZDBiNGFjNGEzOTQ2YTM4Zjc3ZDRkY2UzNzU3MDAx
AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5
c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBTdHJpbmcASW50
MzIAc2V0X1ZhbHVlAENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFuYWdl
cgBTeXN0ZW0uRGF0YQBJRGJDb25uZWN0aW9uAElEYkNvbW1hbmQAQ3JlYXRlQ29tbWFuZABzZXRf
Q29tbWFuZFRleHQAQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUeXBlAElEYkRhdGFQYXJhbWV0ZXIA
Q3JlYXRlUGFyYW1ldGVyAElEYXRhUGFyYW1ldGVyAHNldF9QYXJhbWV0ZXJOYW1lAERiVHlwZQBz
ZXRfRGJUeXBlAElEYXRhUGFyYW1ldGVyQ29sbGVjdGlvbgBnZXRfUGFyYW1ldGVycwBTeXN0ZW0u
Q29sbGVjdGlvbnMASUxpc3QAQWRkAEV4ZWN1dGVTY2FsYXIASURpc3Bvc2FibGUARGlzcG9zZQBF
eGNlcHRpb24AZ2V0X01lc3NhZ2UAc2V0X1Rhc2tSZXN1bHQAU1RfYzRhNWY4NTgzZDFiNDkxNjg2
OWY5YWI1NTdlZjNlYmYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8A
YwA0AGEANQBmADgANQA4ADMAZAAxAGIANAA5ADEANgA4ADYAOQBmADkAYQBiADUANQA3AGUAZgAz
AGUAYgBmAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABHVQBzAGUA
cgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4ATABvAGcAQwBvAG4AbgBlAGMAdABpAG8AbgBO
AGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAKVUAcwBlAHIAOgA6AEoA
bwBiAEUAeABlAGMAdQB0AGkAbwBuAEkARAAANVUAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0
AGkAbwBuAEQAZQB0AGEAaQBsAEkARAAASVUAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkA
bwBuAEQAZQB0AGEAaQBsAFIAZQBzAHUAbAB0AFQAeQBwAGUASQBEAAA/VQBzAGUAcgA6ADoASgBv
AGIARQB4AGUAYwB1AHQAaQBvAG4AUgBlAHMAdQBsAHQATQBlAHMAcwBhAGcAZQAAD1UAbgBrAG4A
bwB3AG4AAEdVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBSAG8AdwBDAG8AdQBu
AHQAUwB1AGMAYwBlAHMAcwBlAHMAAFVVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8A
bgBSAG8AdwBDAG8AdQBuAHQAQgB1AHMAaQBuAGUAcwBzAEYAYQBpAGwAdQByAGUAcwAAUVUAcwBl
AHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABTAHkAcwB0AGUA
bQBGAGEAaQBsAHUAcgBlAHMAADNVAHMAZQByADoAOgBKAG8AYgBTAHQAYQB0AHUAcwBVAHAAZABh
AHQAZQBGAGEAaQBsAABBTABvAGcAcwAuAEcATQBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBEAGUA
dABhAGkAbABTAHQAYQByAHQAUwBwAAAnQABpAFIAZQBxAEoAbwBiAEUAeABlAGMAdQB0AGkAbwBu
AEkARAAAG0AAaQBSAGUAcQBUAGEAcwBrAE4AYQBtAGUAAAAAABDJsc8rZExMt9hn4amV9QIACLd6
XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIM
BAAAEgwECAASDAMgAA4DIAAIBCABAQgEIAEcHAMoAA4DKAAIAgYIAwYRFAQAAAAABAEAAAAEIAEB
DgYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSAB
EnUcAyAAHAQgAQEcBSAAEoCBBiABEoCFHAUgABKAjQYgAQERgJEFIAASgJUGIAEBEYCdBSAAEoCh
BCABCBwPBwUSgIkSgI0SgJUSgK0IRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2M0YTVmODU4M2QxYjQ5
MTY4NjlmOWFiNTU3ZWYzZWJmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA5DcAAAAAAAAAAAAA/jcAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAPA3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA91k6FwAAAQD3WToXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMA
NABhADUAZgA4ADUAOAAzAGQAMQBiADQAOQAxADYAOAA2ADkAZgA5AGEAYgA1ADUANwBlAGYAMwBl
AGIAZgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkANAA2AC4A
MgAzADAAMwAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUAOABk
ADAAYgA0AGEAYwA0AGEAMwA5ADQANgBhADMAOABmADcANwBkADQAZABjAGUAMwA3ADUANwAwADAA
MQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGUAOABkADAAYgA0AGEAYwA0AGEAMwA5ADQANgBhADMAOABmADcANwBk
ADQAZABjAGUAMwA3ADUANwAwADAAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBjADQAYQA1AGYAOAA1ADgAMwBkADEAYgA0ADkAMQA2ADgANgA5AGYAOQBh
AGIANQA1ADcAZQBmADMAZQBiAGYAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA0ADYALgAyADMAMAAzADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQA0ADYALgAyADMAMAAzADEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAEDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reading Order Invoice Info from Mapics.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8515C85D-51ED-405F-B37C-6479CE52B6D8}"
          DTS:From="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reading Order Invoice Info from Mapics.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F4A01C68-FF4B-4D7B-A295-DB9BD62F371C}"
          DTS:From="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics End" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3DBA7BDB-9A7A-47B6-8509-244FCAD89DCD}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reading Order#, Date &amp; Comments from Mapics">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6F3ABF5C-D636-46A2-9E5D-D6FF79D1722B}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Loading Orders in Error"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="AS400 Error Order Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CAST(E_POKEY AS varchar(6)) AS CHAR_POKEY,E_STATUS,E_ORDNO,E_UPDDT from EDI850HDR READONLY 
WHERE E_STATUS='E'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT CAST(E_POKEY AS varchar(6)) AS CHAR_POKEY,E_STATUS,E_ORDNO,E_UPDDT from EDI850HDR READONLY 
WHERE E_STATUS='E') refTable
where refTable.CHAR_POKEY = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CHAR_POKEY" dataType="DT_STR" length="6" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="E_STATUS" dataType="DT_STR" length="1" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="E_ORDNO" dataType="DT_STR" length="7" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="E_UPDDT" dataType="DT_STR" length="8" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey_Derived]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{CC0294F2-D9AC-430F-83E9-BB5F7CD85663}:external"
                      connectionManagerRefId="Project.ConnectionManagers[iSeries]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input].Columns[ERPPOKey_Derived]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="ERPPOKey_Derived"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey_Derived]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">CHAR_POKEY</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count"
                  componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Orders In Error Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::JobExecutionRowCountBusinessFailures</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders"
                  componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Pending Orders"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT OrderId
, ERPPOKey 
, ERPPOKey_Derived = CAST(ERPPOKey AS VARCHAR(8))
, OrderStatusTypeId= (SELECT TOP 1 OrderStatusTypeId
						FROM OrderStatusTypes
						 WHERE OrderStatusTypeId = 4 -- name='Accepted'
					)
FROM dbo.Orders o
INNER JOIN dbo.OrderStatusTypes ost
ON o.OrderStatusTypeId = ost.OrderStatusTypeId
WHERE 1= 1
AND NULLIF(o.ERPPOKey,0) IS NOT NULL
AND NULLIF([ERPOrderNumber],'') IS NULL
AND ERPStatus &lt;&gt; 'I'
--AND ost.Name IN('Submitted','AwaitingCSR','Accepted')
AND ost.OrderStatusTypeId IN(2,3,4)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[OrderId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[OrderId]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[OrderId]"
                          name="OrderId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[ERPPOKey]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey]"
                          name="ERPPOKey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey_Derived]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[ERPPOKey_Derived]"
                          length="8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[ERPPOKey_Derived]"
                          name="ERPPOKey_Derived"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[OrderStatusTypeId]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[OrderStatusTypeId]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[OrderStatusTypeId]"
                          name="OrderStatusTypeId"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[OrderId]"
                          dataType="i8"
                          name="OrderId" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[ERPPOKey]"
                          dataType="i4"
                          name="ERPPOKey" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[ERPPOKey_Derived]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="ERPPOKey_Derived" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].ExternalColumns[OrderStatusTypeId]"
                          dataType="ui1"
                          name="OrderStatusTypeId" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[OrderId]"
                          dataType="i8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[OrderId]"
                          name="OrderId" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ERPPOKey]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ERPPOKey]"
                          name="ERPPOKey" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ERPPOKey_Derived]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ERPPOKey_Derived]"
                          name="ERPPOKey_Derived" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[OrderStatusTypeId]"
                          dataType="ui1"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[OrderStatusTypeId]"
                          name="OrderStatusTypeId" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update ERPStatus Error"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Orders]
SET [ERPStatus] = 'E'
WHERE [OrderId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input].Columns[OrderId]"
                          cachedDataType="i8"
                          cachedName="OrderId"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output].Columns[OrderId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="i8"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[Derived Column Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[Lookup Match Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Inputs[OLE DB Command Input]"
                  name="Lookup Match Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[OLE DB Command Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count.Inputs[Row Count Input 1]"
                  name="OLE DB Command Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[OLE DB Source Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{8B8645D6-68CC-45DA-8866-AEC783655DB4}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order# Status Comments update"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss"
                  componentClassID="{7F88F654-4E20-4D14-84F4-AF9C925D3087}"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="API Call Succss"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input].Columns[APICall_Success]"
                          cachedDataType="bool"
                          cachedName="APICall_Success"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APICall_Success]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Success]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Success"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APICall_Success]} ==  TRUE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">APICall_Success ==  TRUE </property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[failed to update]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="failed to update"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column"
                  componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Inputs[Derived Column Input].Columns[CHAR_POKEY]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="6"
                          cachedName="CHAR_POKEY"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrderComment]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrderComment]"
                          name="ERPOrderComment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,4000)""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,4000)""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPPoKey_Derived]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPPoKey_Derived]"
                          name="ERPPoKey_Derived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,8)#{Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,8)CHAR_POKEY</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="20"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Number]"
                          name="ERPOrder_Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,20)""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,20)""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Date]"
                          name="ERPOrder_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_DATE)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_DATE)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APICall_Success]"
                          dataType="bool"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APICall_Success]"
                          name="APICall_Success"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_BOOL) FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_BOOL) FALSE </property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APIError_Order]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APIError_Order]"
                          name="APIError_Order"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,500)""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,500)""</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status"
                  componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Failed to update Status">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::JobStatusUpdateFail</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Load ERP Order Comments"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ISeriesConnectionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ISeries_ConnectionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.OleDb;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    OleDbConnection as400Connection;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        
        if (!Row.EORDNO_IsNull)
	    {
            Row.ERPOrderNumber = Row.EORDNO.ToString();
            Row.ERPOrderComment = GetOrderComments(Row.EORDNO);
	    }
        //Date Parsing
        decimal updDateDecimal;
        if (!Row.EUPDDT_IsNull && decimal.TryParse(Row.EUPDDT, out updDateDecimal) && updDateDecimal>0)
        {
            DateTime updDate;
            if (DateTime.TryParseExact(updDateDecimal.ToString(), "yyyyMMdd", CultureInfo.CurrentCulture, DateTimeStyles.None, out updDate))
            {
                Row.ERPOrderDate = updDate;
            }
        }
        
    }

    private string GetOrderComments(string OrderNumber)
    {
        string template = "{0}:  {1} {2}";
        System.Text.StringBuilder sb = new System.Text.StringBuilder(string.Empty);
        //System.Windows.Forms.MessageBox.Show(this.Connections.AS400Connection.ConnectionString);
        string commandText = @"SELECT 
            cx.AYAENB as CompanyNumber,
            cx.AYCVNB as OrderNumber,
            ch.AWHXCD as HeaderCode,
            ch.AWIFTX as CommentTitle,
            cd.AXHDTX as Comment
        FROM 
            MBC6REP ord
            INNER JOIN COM164P1 proj
                    ON ord.C6CVNB = proj.B_CVNB
            INNER JOIN MBAYCPP cx
                    ON ord.C6CVNB = cx.AYCVNB
            INNER JOIN MBAWREP ch
                    ON cx.AYKANB = ch.AWKANB
            INNER JOIN MBAXREP cd
                    ON ch.AWKANB = cd.AXKANB
        WHERE
            B_PRJID <> 0
			AND cx.AYCVNB='{0}'";

        using (as400Connection = new OleDbConnection(this.Variables.ISeriesConnectionString))
            {
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandType = System.Data.CommandType.Text;
                cmd.CommandText = string.Format(commandText, OrderNumber);
                cmd.Connection = as400Connection;
                if (as400Connection.State != System.Data.ConnectionState.Open)
                {
                    as400Connection.Open();
                }
                OleDbDataReader dr = cmd.ExecuteReader();

                while (dr.Read())
                {
                    if (!dr.IsDBNull(dr.GetOrdinal("HeaderCode")) && !dr.IsDBNull(dr.GetOrdinal("Comment")))
                    {
                        sb.Append(string.Format(template, dr.GetValue(dr.GetOrdinal("HeaderCode")).ToString(), dr.GetValue(dr.GetOrdinal("Comment")).ToString(),Environment.NewLine));
                    }
                }
            }

        return sb.ToString();

       
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String EORDNO
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool EORDNO_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ERPOrderComment
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool ERPOrderComment_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ERPOrderNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool ERPOrderNumber_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ERPOrderDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool ERPOrderDate_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EUPDDT
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool EUPDDT_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_baf9dc77b720459b92f17beb68b7950e.Properties.Settings.get_Default():SC_baf9dc77b720459b92f17beb68b7950e.Properties.Sett" +
    "ings")]

namespace SC_baf9dc77b720459b92f17beb68b7950e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_baf9dc77b720459b92f17beb68b7950e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_baf9dc77b720459b92f17beb68b7950e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_baf9dc77b720459b92f17beb68b7950e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_baf9dc77b720459b92f17beb68b7950e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_baf9dc77b720459b92f17beb68b7950e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_baf9dc77b720459b92f17beb68b7950e</msb:CodeName>
		<msb:DisplayName>SC_baf9dc77b720459b92f17beb68b7950e</msb:DisplayName>
		<msb:ProjectId>{88026D5A-1722-4387-AAA3-C605345CBA88}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_baf9dc77b720459b92f17beb68b7950e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_baf9dc77b720459b92f17beb68b7950e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_baf9dc77b720459b92f17beb68b7950e")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_baf9dc77b720459b92f17beb68b7950e.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CE8AAB5C-65C1-4EF2-A97E-7F372D0E4209}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_baf9dc77b720459b92f17beb68b7950e</RootNamespace>
    <AssemblyName>SC_baf9dc77b720459b92f17beb68b7950e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_baf9dc77b720459b92f17beb68b7950e.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF5yGlcAAAAAAAAAAOAAAiELAQsAACQAAAAIAAAAAAAAHkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANBBAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
QgAAAAAAAEgAAAACAAUA8CQAAOAcAAABAAAAAAAAADgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMdAAAGfQEAAAQCAnMeAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCgAABm8DAAAGKkorBwIDbwQAAAYDbxsAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABMwBQBzAAAAAQAAEQNvDAAABi0jAwNvCwAABm8TAAAKbxIAAAYDAgNv
CwAABigIAAAGbw4AAAYDbxoAAAYtPwNvGQAABhIAKBQAAAosMAYWcxUAAAooFgAACiwiEgAoFwAA
CnIRAABwKBgAAAoWEgEoGQAACiwHAwdvFgAABioAGzAGAAcBAAACAAARciMAAHAKfhoAAApzGwAA
CgtyPwAAcAwCAnsCAAAEbx8AAAZzHAAACiUTBX0DAAAEEQUTBnMdAAAKDQkXbx4AAAoJCAMoHwAA
Cm8gAAAKCQJ7AwAABG8hAAAKAnsDAAAEbyIAAAoXLgsCewMAAARvIwAACglvJAAAChMEK2wRBBEE
chQFAHBvJQAACm8mAAAKLVcRBBEEcioFAHBvJQAACm8mAAAKLUIHBhEEEQRyFAUAcG8lAAAKbycA
AApvEwAAChEEEQRyKgUAcG8lAAAKbycAAApvEwAACigoAAAKKCkAAApvKgAACiYRBG8rAAAKLYve
DBEGLAcRBm8sAAAK3AdvEwAACioAARAAAAIANADA9AAMAAAAAB4CKAEAAAYqKgIDBAUoLQAACipS
AnsuAAAKAnsvAAAKFpRvMAAACioiAhYoMQAACipSAnsuAAAKAnsvAAAKF5RvMAAACiomAhcDKDIA
AAoqIgIXKDEAAAoqWgMsCAIXKDMAAAoqcjoFAHBzNAAACnpSAnsuAAAKAnsvAAAKGJRvMAAACiom
AhgDKDIAAAoqIgIYKDEAAAoqWgMsCAIYKDMAAAoqcjoFAHBzNAAACnpSAnsuAAAKAnsvAAAKGZRv
NQAACio6AhkDjAgAAAEoMgAACioiAhkoMQAACipaAywIAhkoMwAACipyOgUAcHM0AAAKelICey4A
AAoCey8AAAoalG8wAAAKKiICGigxAAAKKh4CKDYAAAoqHgIoNwAACio6Aig4AAAKAgN9BAAABCo6
Aig4AAAKAgN9BQAABCqWAnsFAAAEbzkAAApy1wUAcG86AAAKKDsAAApvPAAACnQXAAABKh4CKDgA
AAoqAAAAEzACAC0AAAADAAARfgYAAAQtIHIJBgBw0AcAAAIoPgAACm8/AAAKc0AAAAoKBoAGAAAE
fgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKi5zJQAABoAIAAAEKh4CKEMAAAoqAAAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAKAgAACN+AACUCAAA
cAsAACNTdHJpbmdzAAAAAAQUAAB8BgAAI1VTAIAaAAAQAAAAI0dVSUQAAACQGgAAUAIAACNCbG9i
AAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAADIAAAAIAAAACAAAACYAAAAUAAAAQwAAAA8A
AAADAAAABAAAAA4AAAAVAAAAAQAAAAYAAAABAAAAAAAKAAEAAAAAAAYA7gDNAAYA/gDNAAoAGwEU
AQ4ANwEiARIAdgHNAAYAhQHNABYA6QHXAQoABgMUAQoAfgRtBAoArwSaBAoAlAV6BQoAvwWtBQoA
1gWtBQoA8wWtBQoAEgatBQoAKwatBQoARAatBQoAXwatBQoAegatBQoAkwatBQoAzAasBgoA7Aas
BgoALgcUAQoANQcUAQYAXgfNAAoAjgcUAQoAwQcUAQoA0QeaBAoAAAj0BxYADgjXARYALggbCBYA
OAjLARYAeggbCBYAhwjLARYApgjXARYAxAgbCAoA7ggUAQoAEgkUAQoASAkUARoAuQmRCRoA4AmR
CQcA+QkAABoAKQqRCQoAaApVCgoAhQoUAQoAigoUAQoArgqtBQ4A2grECg4A8wrECgoACAusBgAA
AAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQABABAAQAAAAAgAAwAFAAEAEABLAAAACQAEAAoAAQAQ
AFgAAAANAAQAHQABABAAZAAAAA0ABQAeAAAAEABuAHgADQAGACAAAAEQAKcAeAARAAgAJAAGAFgA
EwAGAGQAFwABAPkBLwABACkEbAABACkEbAARAI4EdgARALsEegARAP8EmABQIAAAAACGGE8BGwAB
AHAgAAAAAMYAkwEfAAEAlSAAAAAAxgGgASkABQCoIAAAAADGAbQBKQAGAKogAAAAAMYACQIbAAcA
siAAAAAAxgAUAhsABwC8IAAAAADGALQBKQAHADwhAAAAAIEAIAIzAAgAYCIAAAAAhhhPARsACQBo
IgAAAACGGE8BOAAJAHMiAAAAAIYIMQJCAAwAiCIAAAAAhgg8AkYADACRIgAAAACGCE4CQgAMAKYi
AAAAAIYIYgJKAAwAsCIAAAAAhgh2AkYADQC5IgAAAACGCJECTwANANAiAAAAAIYIrAJCAA4A5SIA
AAAAhgi/AkoADgDvIgAAAACGCNICRgAPAPgiAAAAAIYI7AJPAA8ADyMAAAAAhggPA1QAEAAkIwAA
AACGCCADWQAQADMjAAAAAIYIMQNGABEAPCMAAAAAhghJA08AEQBTIwAAAACGCGEDQgASAGgjAAAA
AIYIbANGABIAcSMAAAAAhgB+A0YAEgB5IwAAAACGAIYDRgASAIEjAAAAAIYYTwFwABIAkCMAAAAA
hhhPAXAAEwCfIwAAAACGCDkEQgAUAMUjAAAAAIMYTwEbABQA0CMAAAAAkwjLBH4AFAAJJAAAAACT
CN8EgwAUABAkAAAAAJMI6wSIABQAGCQAAAAAlggPBZwAFQArJAAAAACGGE8BGwAVAB8kAAAAAJEY
IwuTARUAAAABACMFAAACACsFAAADADUFAAAEADwFAAABADUFAAABAEYFAAABAEYFAAABAEoFAAAB
ADUFAAACAFYFAAADADwFAAABAGoFAAABAGoFAAABAGoFAAABAGoFAAABAGoFAAABAGoFAAABAHAF
AAABAHAFAAABAGoFWQBPAUoAYQBPAUoAaQBPAUoAcQBPAUoAeQBPAUoAgQBPAUoAiQBPAUoAkQBP
AUoAmQBPAUoAoQBPAUoAqQBPAaYAsQBPARsACQBPARsAuQBGB6sACQBNB7IAyQBPARsACQAJAhsA
CQAUAhsAGQCFB0IA0QCWB70A0QBPAaYA0QCfB8UA0QCFB0IAUQCuB4MAQQDgB80AuQDuB+EA6QBP
AUoAOQBPAUoA8QBPARsA+QBECOQAuQBUCOsA+QBbCEoA8QBrCPEACQGXCPcACQGhCBsA8QC2CP0A
IQHRCAMBIQHcCAgBIQHlCA0BKQH6CBIBuQBUCBYB6QAGCR4BIQENCUYAMQEeCRsAEQBPATgAEQA1
BTQBEQBWBTgBKQAmCTwBEQAwCQgBEQA3CUEBEQBACaYAOQFPAUoAKQBiCUcBEQB+A0YAEQCGA0YA
GQBPARsACQDKCU0BQQHwCVMBCQAUCloBSQFBCmABYQFPARsAaQGcCmcBaQG3CnABSQBPAXYBgQFP
AYMBkQFPARsAIQBPARsALgAbAAgCLgBjAC4CLgALAJcBLgATAN8BLgAjAAgCLgArAAgCLgAzAN8B
LgA7AA4CLgBDAAgCLgBbACUCYwCDALgA4wDrAbgAAQETArgAiQELAooBqQELAooB2gAkAX4BBAAB
AAYACwAHAAwACAAOAAAAkgNfAAAAmQNjAAAApwNfAAAAtwNjAAAAzgNfAAAA3QNjAAAA8wNnAAAA
AARjAAAAFARfAAAAGwRjAAAAVQRfAAAAfgSOAAAA9wSTAAAAGwWhAAIACwADAAIADAAFAAIADQAH
AAEADgAHAAIADwAJAAEAEAAJAAEAEgALAAIAEQALAAIAEwANAAEAFAANAAIAFQAPAAEAFgAPAAIA
FwARAAEAGAARAAIAGQATAAIAGgAVAAIAHwAXAAIAIQAZAAIAIgAbAAEAIwAbAAIAJAAdAASAAAAB
AAAARBc/WgAAAAAAAAoHAAALAAAAAAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAA
BAAAAAAAAAAAAAAACgAUAQAAAAALAAAAAAAAAAAAAAABAFUBAAAAAAQAAAAAAAAAAAAAAAoAywEA
AAAACwAAAAAAAAAAAAAAAQBuCQAAAAAAAAAAAQAAACoLAAAAAAAAADxNb2R1bGU+AFNDX2JhZjlk
Yzc3YjcyMDQ1OWI5MmYxN2JlYjY4Yjc5NTBlLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4A
SW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfYmFmOWRjNzdi
NzIwNDU5YjkyZjE3YmViNjhiNzk1MGUuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENv
bXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmln
dXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAU3lzdGVtLkRhdGEAU3lz
dGVtLkRhdGEuT2xlRGIAT2xlRGJDb25uZWN0aW9uAGFzNDAwQ29ubmVjdGlvbgBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAEdldE9yZGVyQ29tbWVudHMAZ2V0X0VPUkROTwBnZXRfRU9SRE5PX0lzTnVs
bABnZXRfRVJQT3JkZXJDb21tZW50AHNldF9FUlBPcmRlckNvbW1lbnQAZ2V0X0VSUE9yZGVyQ29t
bWVudF9Jc051bGwAc2V0X0VSUE9yZGVyQ29tbWVudF9Jc051bGwAZ2V0X0VSUE9yZGVyTnVtYmVy
AHNldF9FUlBPcmRlck51bWJlcgBnZXRfRVJQT3JkZXJOdW1iZXJfSXNOdWxsAHNldF9FUlBPcmRl
ck51bWJlcl9Jc051bGwARGF0ZVRpbWUAZ2V0X0VSUE9yZGVyRGF0ZQBzZXRfRVJQT3JkZXJEYXRl
AGdldF9FUlBPcmRlckRhdGVfSXNOdWxsAHNldF9FUlBPcmRlckRhdGVfSXNOdWxsAGdldF9FVVBE
RFQAZ2V0X0VVUEREVF9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABFT1JETk8ARU9SRE5PX0lz
TnVsbABFUlBPcmRlckNvbW1lbnQARVJQT3JkZXJDb21tZW50X0lzTnVsbABFUlBPcmRlck51bWJl
cgBFUlBPcmRlck51bWJlcl9Jc051bGwARVJQT3JkZXJEYXRlAEVSUE9yZGVyRGF0ZV9Jc051bGwA
RVVQRERUAEVVUEREVF9Jc051bGwAUGFyZW50Q29tcG9uZW50AGdldF9JU2VyaWVzQ29ubmVjdGlv
blN0cmluZwBJU2VyaWVzQ29ubmVjdGlvblN0cmluZwBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNl
TWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNv
dXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXRO
YW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AE9yZGVyTnVtYmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
dmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1
cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBTQ19iYWY5ZGM3N2I3MjA0NTliOTJmMTdiZWI2OGI3OTUwZQBTdHJp
bmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBUb1N0cmluZwBEZWNpbWFsAFRyeVBhcnNlAG9wX0dy
ZWF0ZXJUaGFuAGdldF9DdXJyZW50Q3VsdHVyZQBJRm9ybWF0UHJvdmlkZXIARGF0ZVRpbWVTdHls
ZXMAVHJ5UGFyc2VFeGFjdABFbXB0eQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAE9sZURiQ29t
bWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5k
VHlwZQBGb3JtYXQAc2V0X0NvbW1hbmRUZXh0AHNldF9Db25uZWN0aW9uAERiQ29ubmVjdGlvbgBD
b25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4AT2xlRGJEYXRhUmVhZGVyAEV4ZWN1dGVSZWFk
ZXIARGJEYXRhUmVhZGVyAEdldE9yZGluYWwASXNEQk51bGwAR2V0VmFsdWUARW52aXJvbm1lbnQA
Z2V0X05ld0xpbmUAQXBwZW5kAFJlYWQASURpc3Bvc2FibGUARGlzcG9zZQBHZXRTdHJpbmcASXNO
dWxsAHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBHZXREYXRlVGlt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTVmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlhYmxl
cwBJRFRTVmFyaWFibGUxMDAAZ2V0X0l0ZW0AU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFsdWVXaXRoQ29u
dGV4dABTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ19iYWY5ZGM3
N2I3MjA0NTliOTJmMTdiZWI2OGI3OTUwZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAAA9JAG4AcAB1AHQAIAAwAAAReQB5AHkAeQBNAE0AZABkAAAbewAwAH0AOgAgACAAewAxAH0A
IAB7ADIAfQAAhNNTAEUATABFAEMAVAAgAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwB4AC4A
QQBZAEEARQBOAEIAIABhAHMAIABDAG8AbQBwAGEAbgB5AE4AdQBtAGIAZQByACwACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABjAHgALgBBAFkAQwBWAE4AQgAgAGEAcwAgAE8AcgBkAGUAcgBOAHUA
bQBiAGUAcgAsAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwBoAC4AQQBXAEgAWABDAEQAIABh
AHMAIABIAGUAYQBkAGUAcgBDAG8AZABlACwACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAGgA
LgBBAFcASQBGAFQAWAAgAGEAcwAgAEMAbwBtAG0AZQBuAHQAVABpAHQAbABlACwACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABjAGQALgBBAFgASABEAFQAWAAgAGEAcwAgAEMAbwBtAG0AZQBuAHQA
CgAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATQBC
AEMANgBSAEUAUAAgAG8AcgBkAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAA
SgBPAEkATgAgAEMATwBNADEANgA0AFAAMQAgAHAAcgBvAGoACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAbwByAGQALgBDADYAQwBWAE4AQgAgAD0AIABwAHIA
bwBqAC4AQgBfAEMAVgBOAEIACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABK
AE8ASQBOACAATQBCAEEAWQBDAFAAUAAgAGMAeAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIABPAE4AIABvAHIAZAAuAEMANgBDAFYATgBCACAAPQAgAGMAeAAuAEEAWQBD
AFYATgBCAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAE0A
QgBBAFcAUgBFAFAAIABjAGgACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAATwBOACAAYwB4AC4AQQBZAEsAQQBOAEIAIAA9ACAAYwBoAC4AQQBXAEsAQQBOAEIACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAATQBCAEEAWABSAEUAUAAg
AGMAZAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABjAGgA
LgBBAFcASwBBAE4AQgAgAD0AIABjAGQALgBBAFgASwBBAE4AQgAKACAAIAAgACAAIAAgACAAIABX
AEgARQBSAEUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAF8AUABSAEoASQBEACAAPAA+ACAA
MAAKAAkACQAJAEEATgBEACAAYwB4AC4AQQBZAEMAVgBOAEIAPQAnAHsAMAB9ACcAARVIAGUAYQBk
AGUAcgBDAG8AZABlAAAPQwBvAG0AbQBlAG4AdAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AADFJAFMAZQByAGkAZQBzAF8AQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQA
cgBpAG4AZwAAcVMAQwBfAGIAYQBmADkAZABjADcANwBiADcAMgAwADQANQA5AGIAOQAyAGYAMQA3
AGIAZQBiADYAOABiADcAOQA1ADAAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAACZEiisJ64RCh4prqqtDKfMACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAAB
CSAEAQgOEhUSGQUgAQESEAMGEh0EIAEODgkgAwESFR0IEhkDIAAOAyAAAgQgAQEOBCABAQIEIAAR
IQUgAQERIQMoAA4DKAACBCgAESEDBhIFBSABARIFAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgA
EiUECAASKQMGEiAEAAASIAQIABIgBCABAQgGIAICDhFhBSABHQgIBAEAAAAHAAICDhARaQcAAgIR
aRFpDAAFAg4OEm0RcRARIQYHAhFpESECBg4GIAEBEYCBBQACDg4cBSABARIdBSAAEYCJBSAAEoCN
BCABCA4EIAECCAQgARwIAwAADgcABA4OHBwcBSABEnUODwcHDhJ1DhJ5EoCNEh0SHQMGEhUDBh0I
BCABDggFIAIBCBwFIAERIQgFIAASgKEGIAESgKUcBQAAEoCpBiABHBKArQgAARKAtRGAuQUgABKA
vQcgAgEOEoC9BAcBEiUGIAEBEYDFCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ19i
YWY5ZGM3N2I3MjA0NTliOTJmMTdiZWI2OGI3OTUwZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA+EEAAAAAAAAA
AAAADkIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
sAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAD9aRBcAAAEAP1pEFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIA
MAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBiAGEAZgA5
AGQAYwA3ADcAYgA3ADIAMAA0ADUAOQBiADkAMgBmADEANwBiAGUAYgA2ADgAYgA3ADkANQAwAGUA
AABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADUANgAuADIAMwAx
ADAAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiAGEAZgA5AGQA
YwA3ADcAYgA3ADIAMAA0ADUAOQBiADkAMgBmADEANwBiAGUAYgA2ADgAYgA3ADkANQAwAGUALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAEMAXwBiAGEAZgA5AGQAYwA3ADcAYgA3ADIAMAA0ADUAOQBiADkAMgBmADEANwBiAGUA
YgA2ADgAYgA3ADkANQAwAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBDAF8AYgBhAGYAOQBkAGMANwA3AGIANwAyADAANAA1ADkAYgA5ADIAZgAxADcAYgBlAGIA
NgA4AGIANwA5ADUAMABlAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA1ADkANQA2AC4AMgAzADEAMAAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA1ADkANQA2AC4AMgAzADEAMAAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_baf9dc77b720459b92f17beb68b7950e</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$Project::ISeries_ConnectionString</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">810d7d4e6a206cde67af80c17b7a2bf0</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">f8cf688d5d0e1693e6b490ca1f3875ecd3abaf9f</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0].Columns[E_ORDNO]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="7"
                          cachedName="E_ORDNO"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0].Columns[ERPOrderComment]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ERPOrderComment"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrderComment]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0].Columns[ERPOrder_Number]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="ERPOrder_Number"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Number]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0].Columns[ERPOrder_Date]"
                          cachedDataType="date"
                          cachedName="ERPOrder_Date"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Date]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0].Columns[E_UPDDT]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8"
                          cachedName="E_UPDDT"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_UPDDT]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400"
                  componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="New Orders in AS400"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CAST(E_POKEY AS varchar(6)) AS CHAR_POKEY,E_STATUS,E_ORDNO,E_UPDDT 
FROM EDI850HDR READONLY 
WHERE 1=1
AND E_UPDDT&gt; ?
AND E_STATUS='P' 
AND E_ORDNO&gt;''</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"""00001"":Input",{8D8B830E-3659-439E-9E13-6A982E2AA0C0};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Connections[OleDbConnection]"
                      connectionManagerID="{CC0294F2-D9AC-430F-83E9-BB5F7CD85663}:external"
                      connectionManagerRefId="Project.ConnectionManagers[iSeries]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[CHAR_POKEY]"
                          length="6"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[CHAR_POKEY]"
                          name="CHAR_POKEY"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_STATUS]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_STATUS]"
                          length="1"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_STATUS]"
                          name="E_STATUS"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_ORDNO]"
                          length="7"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_ORDNO]"
                          name="E_ORDNO"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_UPDDT]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_UPDDT]"
                          length="8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].Columns[E_UPDDT]"
                          name="E_UPDDT"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          name="CHAR_POKEY" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_STATUS]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="E_STATUS" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          length="7"
                          name="E_ORDNO" />
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output].ExternalColumns[E_UPDDT]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          name="E_UPDDT" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[CHAR_POKEY]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[CHAR_POKEY]"
                          name="CHAR_POKEY" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_STATUS]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_STATUS]"
                          name="E_STATUS" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_ORDNO]"
                          codePage="1252"
                          dataType="str"
                          length="7"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_ORDNO]"
                          name="E_ORDNO" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_UPDDT]"
                          codePage="1252"
                          dataType="str"
                          length="8"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[E_UPDDT]"
                          name="E_UPDDT" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Quote Look Up in Daikin"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT OrderId
, ERPPOKey 
, ERPPOKey_Derived = CAST(ERPPOKey AS NVARCHAR(8))
, OrderStatusTypeId= (SELECT TOP 1 OrderStatusTypeId
						FROM OrderStatusTypes
						 WHERE OrderStatusTypeId = 4 -- name='Accepted'
					)
FROM dbo.Orders o
INNER JOIN dbo.OrderStatusTypes ost
ON o.OrderStatusTypeId = ost.OrderStatusTypeId
WHERE 1= 1
AND NULLIF(o.ERPPOKey,0) IS NOT NULL
AND NULLIF([ERPOrderNumber],'') IS NULL
AND ERPStatus &lt;&gt; 'I'
--AND ost.Name IN('Submitted','AwaitingCSR','Accepted')
AND ost.OrderStatusTypeId IN(2,3,4)</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT OrderId
, ERPPOKey 
, ERPPOKey_Derived = CAST(ERPPOKey AS NVARCHAR(8))
, OrderStatusTypeId= (SELECT TOP 1 OrderStatusTypeId
						FROM OrderStatusTypes
						 WHERE OrderStatusTypeId = 4 -- name='Accepted'
					)
FROM dbo.Orders o
INNER JOIN dbo.OrderStatusTypes ost
ON o.OrderStatusTypeId = ost.OrderStatusTypeId
WHERE 1= 1
AND NULLIF(o.ERPPOKey,0) IS NOT NULL
AND NULLIF([ERPOrderNumber],'') IS NULL
AND ERPStatus &lt;&gt; 'I'
--AND ost.Name IN('Submitted','AwaitingCSR','Accepted')
AND ost.OrderStatusTypeId IN(2,3,4)) [refTable]
where [refTable].[ERPPOKey_Derived] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="OrderId" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ERPPOKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ERPPOKey_Derived" dataType="DT_WSTR" length="8" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="OrderStatusTypeId" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPPoKey_Derived]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input].Columns[ERPPoKey_Derived]"
                          cachedDataType="wstr"
                          cachedLength="8"
                          cachedName="ERPPoKey_Derived"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPPoKey_Derived]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ERPPOKey_Derived</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderId]"
                          dataType="i8"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderId]"
                          name="OrderId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OrderId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[ERPPOKey]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[ERPPOKey]"
                          name="ERPPOKey"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ERPPOKey</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]"
                          dataType="ui1"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]"
                          name="OrderStatusTypeId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">OrderStatusTypeId</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success"
                  componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::JobExecutionRowCountSuccesses</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment"
                  componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update Order# and Order Comment"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Orders]
SET [ERPOrderNumber] = ?
	, [ERPStatus] = 'P'
	, [ERPComment] = ?
	--, OrderStatusTypeId = ?
	, [ERPOrderDate] = ?
WHERE [OrderId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Connections[OleDbConnection]"
                      connectionManagerID="{D2E7CBD3-D0C7-4910-9AC6-FAC12C755754}:external"
                      connectionManagerRefId="Project.ConnectionManagers[dbDaikinProjectOffice]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].Columns[ERPOrderComment]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ERPOrderComment"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrderComment]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].Columns[ERPOrder_Number]"
                          cachedDataType="wstr"
                          cachedLength="20"
                          cachedName="ERPOrder_Number"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Number]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].Columns[OrderId]"
                          cachedDataType="i8"
                          cachedName="OrderId"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderId]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].Columns[ERPOrder_Date]"
                          cachedDataType="date"
                          cachedName="ERPOrder_Date"
                          externalMetadataColumnId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[ERPOrder_Date]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="20"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="nText"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="i8"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Update Status using API Call"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ORDERUPDATEAPI
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ORDER_UPDATE_API"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using SC_c111052fa7a9420ba5943a89228fb66b;
using System.Runtime.Serialization.Json;
using System.IO;
using System.Net;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string WebApiUrl; // @"http://genappdev:8080/api/Order/UpdateOrderStatus
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string errMessage = string.Empty;
        bool status = Row.APICallSuccess;
        WebApiUrl = this.Variables.ORDERUPDATEAPI;
        if (!Row.OrderId_IsNull && !Row.OrderStatusTypeId_IsNull)
        {
            status = UpdateOrderStatus(Row.OrderId, Row.OrderStatusTypeId.ToString(), out errMessage);
        }
        Row.APICallSuccess = status;
        Row.APIErrorOrder = string.Format("API Call fail(Order). {0}",errMessage);
    }

    private bool UpdateOrderStatus(long pOrderNumber, string pNewOrderStatus, out string errMessage)
    {
        bool _isStatusUpdated = false;
        errMessage = string.Empty;

        string _webApiUrl = WebApiUrl; // @"http://genappdev:8080/api/Order/UpdateOrderStatus
        string _jsonData = "{orderId:\"" + pOrderNumber.ToString() + "\", orderStatusTypeId: \"" + pNewOrderStatus.ToString() + "\"}";

        try
        {
            using (var client = new WebClient())
            {
                client.Headers[HttpRequestHeader.ContentType] = "application/json";
                var jsonResult = client.UploadString(_webApiUrl, "POST", _jsonData);
                DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(ServiceOutput));
                MemoryStream stream = new MemoryStream(Encoding.UTF8.GetBytes(jsonResult));
                ServiceOutput serviceoutput = (ServiceOutput)ser.ReadObject(stream);
                if (null != serviceoutput && serviceoutput.hasError == false && serviceoutput.isok == true)
                {
                    _isStatusUpdated = true;
                }
                else
                {
                    errMessage = string.Format("Failed to change Order status to {0}.", pNewOrderStatus);
                }

            }
        }
        catch (WebException webException)
        {
            errMessage = webException.Message;
        }
        catch (Exception exception)
        {
            errMessage = exception.Message;
        }

        return _isStatusUpdated;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Boolean APICallSuccess
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool APICallSuccess_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 OrderId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool OrderId_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte OrderStatusTypeId
    {
        get
        {
            return Buffer.GetByte(BufferColumnIndexes[2]);
        }
    }
    public bool OrderStatusTypeId_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String APIErrorOrder
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool APIErrorOrder_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c111052fa7a9420ba5943a89228fb66b.Properties.Settings.get_Default():SC_c111052fa7a9420ba5943a89228fb66b.Properties.Sett" +
    "ings")]

namespace SC_c111052fa7a9420ba5943a89228fb66b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c111052fa7a9420ba5943a89228fb66b.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C43D6735-831B-4771-A9C2-2B1E512F6A83}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c111052fa7a9420ba5943a89228fb66b</RootNamespace>
    <AssemblyName>SC_c111052fa7a9420ba5943a89228fb66b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="ServiceOutput.cs" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ServiceOutput.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SC_c111052fa7a9420ba5943a89228fb66b
{
    public class ServiceOutput
    {

        public string id { get; set; }

        public bool hasError { get; set; }

        public bool isok { get; set; }

        public object messages { get; set; }

        public object model { get; set; }

        public object propertyReference { get; set; }

        public int status { get; set; }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c111052fa7a9420ba5943a89228fb66b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c111052fa7a9420ba5943a89228fb66b</msb:DisplayName>
		<msb:ProjectId>{659687D0-5450-4B1D-8509-CF4558BD8302}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c111052fa7a9420ba5943a89228fb66b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="ServiceOutput.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c111052fa7a9420ba5943a89228fb66b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c111052fa7a9420ba5943a89228fb66b")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c111052fa7a9420ba5943a89228fb66b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c111052fa7a9420ba5943a89228fb66b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c111052fa7a9420ba5943a89228fb66b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c111052fa7a9420ba5943a89228fb66b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c111052fa7a9420ba5943a89228fb66b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c111052fa7a9420ba5943a89228fb66b.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACvPF1cAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAADkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALxAAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
QAAAAAAAAEgAAAACAAUAKCUAAJQbAAABAAAAAAAAAHAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CewQAAAQqIgIDfQQAAAQqHgJ7BQAABCoiAgN9BQAABCoeAnsGAAAE
KiICA30GAAAEKh4CewcAAAQqIgIDfQcAAAQqHgIoDwAACip+AigQAAAKAgJzKAAABn0IAAAEAgJz
KQAABn0JAAAEKpIEcgEAAHAabxEAAAosFQIFAgMoEgAACg4EcxkAAAZvEgAABipKKwcCA28TAAAG
A28mAAAGLfEqBioeAigUAAAKKh4CKBUAAAoqAAAAEzAEAGQAAAABAAARfhYAAAoKA28aAAAGCwIC
ewkAAARvKgAABn0KAAAEA28fAAAGLSUDbyEAAAYtHQIDbx4AAAYDbyAAAAYMEgIoFwAAChIAKBcA
AAYLAwdvGwAABgNyEQAAcAYoGAAACm8jAAAGKhswBAD8AAAAAgAAERYKBX4WAAAKUQJ7CgAABAsb
jRcAAAETChEKFnJFAABwohEKFw8BKBkAAAqiEQoYclsAAHCiEQoZBG8aAAAKohEKGnKLAABwohEK
KBsAAAoMcxwAAAoNCW8dAAAKHwxykQAAcG8eAAAKCQdyswAAcAhvHwAAChME0AIAAAIoIAAACnMh
AAAKEwUoIgAAChEEbyMAAApzJAAAChMGEQURBm8lAAAKdAIAAAITBxEHLBYRB28DAAAGLQ0RB28F
AAAGLAQXCisNBXK9AABwBCgYAAAKUd4KCSwGCW8mAAAK3N4aEwgFEQhvJwAAClHeDRMJBREJbycA
AApR3gAGKgEoAAACAFYAftQACgAAAAAAAFAAkOAADSgAAAEAAFAAkO0ADScAAAEeAigQAAAGKioC
AwQFKCgAAAoqUgJ7KQAACgJ7KgAAChaUbysAAAoqOgIWA4wpAAABKCwAAAoqIgIWKC0AAAoqWgMs
CAIWKC4AAAoqcgkBAHBzLwAACnpSAnspAAAKAnsqAAAKF5RvMAAACioiAhcoLQAACipSAnspAAAK
AnsqAAAKGJRvMQAACioiAhgoLQAACipSAnspAAAKAnsqAAAKGZRvMgAACiomAhkDKCwAAAoqIgIZ
KC0AAAoqWgMsCAIZKC4AAAoqcgkBAHBzLwAACnoeAigzAAAKKh4CKDQAAAoqOgIoDwAACgIDfQsA
AAQqOgIoDwAACgIDfQwAAAQqlgJ7DAAABG81AAAKcqYBAHBvNgAACig3AAAKbzgAAAp0FwAAASoe
AigPAAAKKgAAEzACAC0AAAADAAARfg0AAAQtIHLIAQBw0AgAAAIoIAAACm86AAAKczsAAAoKBoAN
AAAEfg0AAAQqGn4OAAAEKh4CgA4AAAQqGn4PAAAEKi5zMAAABoAPAAAEKh4CKD0AAAoqALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADcCQAAI34AAEgKAACk
DAAAI1N0cmluZ3MAAAAA7BYAADwCAAAjVVMAKBkAABAAAAAjR1VJRAAAADgZAABcAgAAI0Jsb2IA
AAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAMgAAAAkAAAAPAAAAMQAAABsAAAA9AAAAJAAA
AAMAAAAFAAAAEwAAAB8AAAABAAAABgAAAAEAAAAAAAoAAQAAAAAABgDyAOsACgA3ARYBCgBHARYB
DgBpAVQBEgA7AxYBCgBKAxYBBgCmBZUFBgDXBcIFBgC/BqAGBgAEB+oGBgAvBx0HBgBGBx0HBgBj
Bx0HBgCCBx0HBgCbBx0HBgC0Bx0HBgDPBx0HBgDqBx0HBgADCB0HBgA8CBwIBgBcCBwIBgB6CBwI
BgCVCOsABgCcCOsACgDFCBYBBgDyCOsABgAHCesADgAfCRQJDgApCRQJDgBJCRQJBgBxCesABgB2
CesAFgDZCbcJBgAACvQJBgAlChsKFgAyCpoJBgBGChsKBgBYCusABgBsCusADgCCChQJBgCaCusA
BgCxCusAGgAxCwkLGgBYCwkLCwBxCwAAGgChCwkLBgDgC80LBgD9Cx0HDgApDBMMDgBCDBMMAAAA
AAEAAAAAAAEAAQABABAAMgBAAAUAAQABAAEAEABkAAAACQAIABAAAQAQAHIAAAAMAAoAFAABABAA
fQAAAA0ACwAZAAEAEACKAAAABQALACgAAQAQAJYAAAAFAAwAKQAAABAAoACqAAUADQArAAABEADZ
AKoAEQAPAC8AAQAxAjsAAQBFAj4AAQBfAj4AAQB1AkEAAQCPAkEAAQCmAkEAAQDJAkQABgCKAFcA
BgCWAFsAAQCQAzsAAQBjBZEAAQBjBZEAEQC2BZsAEQDjBZ8AEQAnBr0AUCAAAAAAhgiBARMAAQBY
IAAAAACGCIgBFwABAGEgAAAAAIYIjwEcAAIAaSAAAAAAhgicASAAAgByIAAAAACGCKkBHAADAHog
AAAAAIYIsgEgAAMAgyAAAAAAhgi7ASUABACLIAAAAACGCMgBKQAEAJQgAAAAAIYI1QElAAUAnCAA
AAAAhgjfASkABQClIAAAAACGCOkBJQAGAK0gAAAAAIYI/wEpAAYAtiAAAAAAhggVAi4ABwC+IAAA
AACGCCACMgAHAMcgAAAAAIYYKwI3AAgAzyAAAAAAhhgrAjcACADvIAAAAADGAFgDXwAIABQhAAAA
AMYBZQNpAAwAJyEAAAAAxgF5A2kADQApIQAAAADGAJoDNwAOADEhAAAAAMYApQM3AA4APCEAAAAA
xgB5A2kADgCsIQAAAACBALEDbwAPANwiAAAAAIYYKwI3ABIA5CIAAAAAhhgrAncAEgDvIgAAAACG
CMMDHAAVAAQjAAAAAIYI1gMgABUAEyMAAAAAhgjpAxwAFgAcIwAAAACGCAMEIAAWADMjAAAAAIYI
HQSBABcASCMAAAAAhggpBBwAFwBRIwAAAACGCDwEhQAXAGYjAAAAAIYIUgQcABcAbyMAAAAAhghv
BBMAFwCEIwAAAACGCIEEFwAXAI4jAAAAAIYIkwQcABgAlyMAAAAAhgisBCAAGACuIwAAAACGAMUE
HAAZALYjAAAAAIYAzQQcABkAviMAAAAAhhgrApUAGQDNIwAAAACGGCsClQAaANwjAAAAAIYIcwUT
ABsAAiQAAAAAgxgrAjcAGwAMJAAAAACTCPMFowAbAEUkAAAAAJMIBwaoABsATCQAAAAAkwgTBq0A
GwBUJAAAAACWCDcGwQAcAGckAAAAAIYYKwI3ABwAWyQAAAAAkRhXDKEBHAAAAAEASwYAAAEASwYA
AAEASwYAAAEASwYAAAEASwYAAAEASwYAAAEASwYAAAEAUQYAAAIAWQYAAAMAYwYAAAQAagYAAAEA
YwYAAAEAdAYAAAEAdAYAAAEAeAYAAAIAhQYCAAMAlQYAAAEAYwYAAAIAzAYAAAMAagYAAAEASwYA
AAEASwYAAAEASwYAAAEASwYAAAEA4AYAAAEA4AYAAAEASwZJACsCNwBRACsCFwBZACsCFwBhACsC
FwBpACsCFwBxACsCFwB5ACsCFwCBACsCFwCJACsCFwCRACsCFwCZACsCFwChACsCMgCpACsCNwCx
ACsCNwAJACsCNwARACsCNwC5AK0I0AARALQI1wDJACsCNwARAJoDNwARAKUDNwC5AOwIOwDRAPcI
EwC5AAAJ3QDZAPcIEwAJAPcIEwC5AA0J6QDhACsCNwDhAD0J7wDpAFsJ9ADhAGQJ+wD5AIgJAgEJ
ASsCCgERAQkKEAERARIKFgEZASsCHAEhAU0KIgExAWQKNwA5AXYKEwAZACsCdwAZAGMGQgEZAMwG
RgEpAI8KSgEZAFsJTwEZAKIKSgEZAKkKMgBRASsCFwApAMsKVQEpANQKWgEpANwKXwEZAMUEHAAZ
AM0EHAARAEILZAFZAWgLagERAIwLcQFhAbkLdwF5ASsCNwD5AAYMfgE5ACsChAGJASsCkQEhACsC
NwAgAHMAywAhAHMAywAuAGsAPAIuABsA7QEuACMAFgIuAGMAMwIuABMApQEuACsAFgIuADMAFgIu
ADsA7QEuAEMAHAIuAEsAFgJAAHMAywBBAHMAywBgAHMAywBhAHMAywCAAHMAywCBAHMAywCDAJsA
ywCgAHMAywChAHMAywDAAHMAywDBAHMAywDgAHMAywDhAHMAywAAAXMAywADAcsBywAgAXMAywBA
AXMAywBgAXMAywCAAXMAywCgAXMAywDAAXMAywDhAXMAywApAuMBmAFJAuMBmAHjACkBjAECAAEA
BQAIAAcAEAAIABEACQATAAAA4QJHAAAA5AJLAAAA7QJLAAAA8gJPAAAA+wJPAAAAAQNPAAAAEwNT
AAAA2QRLAAAA6ARLAAAA/gSJAAAABgVLAAAAFQWNAAAAJwVLAAAAQAVHAAAATgVLAAAAhgVHAAAA
pgWzAAAAHwa4AAAAQwbGAAIAAQADAAEAAgADAAIAAwAFAAEABAAFAAIABQAHAAEABgAHAAIABwAJ
AAEACAAJAAIACQALAAEACgALAAIACwANAAEADAANAAIADQAPAAEADgAPAAEAGwARAAIAGgARAAIA
HAATAAEAHQATAAIAHgAVAAIAHwAXAAIAIAAZAAIAIQAbAAIAIgAdAAEAIwAdAAIAJAAfAAEAJQAf
AAIAKgAhAAIALAAjAAIALQAlAAEALgAlAAIALwAnAASAAAABAAAAQhclWgAAAAAAAEAAAAAEAAAA
AAAAAAAAAAABAOIAAAAAAAsAAAAAAAAAAAAAAAoA+QAAAAAABAAAAAAAAAAAAAAAAQDrAAAAAAAL
AAAAAAAAAAAAAAAKABoDAAAAAAQAAAAAAAAAAAAAAAEAmgkAAAAACwAAAAAAAAAAAAAACgDmCgAA
AAAAAAAAAQAAAF4MAAAAAAAAADxNb2R1bGU+AFNDX2MxMTEwNTJmYTdhOTQyMGJhNTk0M2E4OTIy
OGZiNjZiLmRsbABTZXJ2aWNlT3V0cHV0AFNDX2MxMTEwNTJmYTdhOTQyMGJhNTk0M2E4OTIyOGZi
NjZiAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBJbnB1dDBCdWZmZXIAQ29ubmVjdGlvbnMAVmFy
aWFibGVzAFJlc291cmNlcwBTQ19jMTExMDUyZmE3YTk0MjBiYTU5NDNhODkyMjhmYjY2Yi5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAG1zY29ybGliAFN5c3RlbQBPYmplY3QATWljcm9zb2Z0LlNxbFNlcnZl
ci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25l
bnQAU2NyaXB0QnVmZmVyAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAGdldF9pZABzZXRfaWQAZ2V0X2hhc0Vycm9yAHNldF9oYXNFcnJvcgBnZXRfaXNvawBzZXRf
aXNvawBnZXRfbWVzc2FnZXMAc2V0X21lc3NhZ2VzAGdldF9tb2RlbABzZXRfbW9kZWwAZ2V0X3By
b3BlcnR5UmVmZXJlbmNlAHNldF9wcm9wZXJ0eVJlZmVyZW5jZQBnZXRfc3RhdHVzAHNldF9zdGF0
dXMALmN0b3IAPGlkPmtfX0JhY2tpbmdGaWVsZAA8aGFzRXJyb3I+a19fQmFja2luZ0ZpZWxkADxp
c29rPmtfX0JhY2tpbmdGaWVsZAA8bWVzc2FnZXM+a19fQmFja2luZ0ZpZWxkADxtb2RlbD5rX19C
YWNraW5nRmllbGQAPHByb3BlcnR5UmVmZXJlbmNlPmtfX0JhY2tpbmdGaWVsZAA8c3RhdHVzPmtf
X0JhY2tpbmdGaWVsZABpZABoYXNFcnJvcgBpc29rAG1lc3NhZ2VzAG1vZGVsAHByb3BlcnR5UmVm
ZXJlbmNlAHN0YXR1cwBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1
ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0
MF9Qcm9jZXNzSW5wdXRSb3cAV2ViQXBpVXJsAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAVXBkYXRl
T3JkZXJTdGF0dXMAZ2V0X0FQSUNhbGxTdWNjZXNzAHNldF9BUElDYWxsU3VjY2VzcwBnZXRfQVBJ
Q2FsbFN1Y2Nlc3NfSXNOdWxsAHNldF9BUElDYWxsU3VjY2Vzc19Jc051bGwAZ2V0X09yZGVySWQA
Z2V0X09yZGVySWRfSXNOdWxsAGdldF9PcmRlclN0YXR1c1R5cGVJZABnZXRfT3JkZXJTdGF0dXNU
eXBlSWRfSXNOdWxsAGdldF9BUElFcnJvck9yZGVyAHNldF9BUElFcnJvck9yZGVyAGdldF9BUElF
cnJvck9yZGVyX0lzTnVsbABzZXRfQVBJRXJyb3JPcmRlcl9Jc051bGwATmV4dFJvdwBFbmRPZlJv
d3NldABBUElDYWxsU3VjY2VzcwBBUElDYWxsU3VjY2Vzc19Jc051bGwAT3JkZXJJZABPcmRlcklk
X0lzTnVsbABPcmRlclN0YXR1c1R5cGVJZABPcmRlclN0YXR1c1R5cGVJZF9Jc051bGwAQVBJRXJy
b3JPcmRlcgBBUElFcnJvck9yZGVyX0lzTnVsbABQYXJlbnRDb21wb25lbnQAZ2V0X09SREVSVVBE
QVRFQVBJAE9SREVSVVBEQVRFQVBJAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUA
QnVmZmVyAE91dHB1dE1hcABSb3cAcE9yZGVyTnVtYmVyAHBOZXdPcmRlclN0YXR1cwBlcnJNZXNz
YWdlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBPdXRBdHRyaWJ1dGUAQnVmZmVyQ29s
dW1uSW5kZXhlcwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFN0cmluZwBT
dHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEVtcHR5AEJ5dGUAVG9TdHJpbmcARm9ybWF0AEludDY0AENv
bmNhdABTeXN0ZW0uTmV0AFdlYkNsaWVudABXZWJIZWFkZXJDb2xsZWN0aW9uAGdldF9IZWFkZXJz
AEh0dHBSZXF1ZXN0SGVhZGVyAHNldF9JdGVtAFVwbG9hZFN0cmluZwBUeXBlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AU3lz
dGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAERhdGFDb250cmFjdEpzb25TZXJpYWxpemVy
AFN5c3RlbS5UZXh0AEVuY29kaW5nAGdldF9VVEY4AEdldEJ5dGVzAFN5c3RlbS5JTwBNZW1vcnlT
dHJlYW0AWG1sT2JqZWN0U2VyaWFsaXplcgBTdHJlYW0AUmVhZE9iamVjdABJRGlzcG9zYWJsZQBE
aXNwb3NlAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBXZWJFeGNlcHRpb24AR2V0Qm9vbGVhbgBCb29s
ZWFuAElzTnVsbABTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0SW50NjQAR2V0
Qnl0ZQBHZXRTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRfUmVh
ZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAGdldF9JdGVtAFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdl
dFZhbHVlV2l0aENvbnRleHQAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUALmNjdG9yAFNDX2MxMTEw
NTJmYTdhOTQyMGJhNTk0M2E4OTIyOGZiNjZiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwAAAAAAD0kAbgBwAHUAdAAgADAAADNBAFAASQAgAEMAYQBsAGwAIABmAGEAaQBsACgATwByAGQA
ZQByACkALgAgAHsAMAB9AAAVewBvAHIAZABlAHIASQBkADoAIgAALyIALAAgAG8AcgBkAGUAcgBT
AHQAYQB0AHUAcwBUAHkAcABlAEkAZAA6ACAAIgAABSIAfQAAIWEAcABwAGwAaQBjAGEAdABpAG8A
bgAvAGoAcwBvAG4AAAlQAE8AUwBUAABLRgBhAGkAbABlAGQAIAB0AG8AIABjAGgAYQBuAGcAZQAg
AE8AcgBkAGUAcgAgAHMAdABhAHQAdQBzACAAdABvACAAewAwAH0ALgAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AACFPAFIARABFAFIAXwBVAFAARABBAFQARQBfAEEA
UABJAABxUwBDAF8AYwAxADEAMQAwADUAMgBmAGEANwBhADkANAAyADAAYgBhADUAOQA0ADMAYQA4
ADkAMgAyADgAZgBiADYANgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAAPk0SZb8/7JMsEH7YaeuA0sACLd6XFYZNOCJCImEXc2AgMyRAyAADgQgAQEOAyAAAgQg
AQECAyAAHAQgAQEcAyAACAQgAQEIAyAAAQIGDgIGAgIGHAIGCAMoAA4DKAACAygAHAMoAAgDBhIY
AwYSHAkgBAEIDhIVEhkFIAEBEhQHIAMCCg4QDgkgAwESFR0IEhkDIAAKAyAABQMoAAoDKAAFAwYS
CQUgAQESCQMGEh0DBhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIkBAAAEiQECAASJAQB
AAAABiACAg4RYQUgAR0ICAUAAg4OHAUHAw4CBQUAAQ4dDgQgABJ1BiACARF5DgYgAw4ODg4HAAES
fRGAgQUgAQESfQUAABKAiQUgAR0FDgUgAQEdBQYgARwSgJUYBwsCDg4ScQ4SgIUSgI0SCBKAoRKA
nR0OAwYSFQMGHQgEIAECCAUgAgEIHAQgAQoIBCABBQgEIAEOCAUgABKArQYgARKAsRwFAAASgLUG
IAEcEoC5BSAAEoDBByACAQ4SgMEEBwESHQYgAQERgMkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NDX2MxMTEwNTJmYTdhOTQyMGJhNTk0M2E4OTIyOGZiNjZiAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
5EAAAAAAAAAAAAAA/kAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBAAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAlWkIXAAABACVaQhc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYwAxADEA
MQAwADUAMgBmAGEANwBhADkANAAyADAAYgBhADUAOQA0ADMAYQA4ADkAMgAyADgAZgBiADYANgBi
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA1ADQALgAyADMA
MAA3ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwAxADEAMQAw
ADUAMgBmAGEANwBhADkANAAyADAAYgBhADUAOQA0ADMAYQA4ADkAMgAyADgAZgBiADYANgBiAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8AYwAxADEAMQAwADUAMgBmAGEANwBhADkANAAyADAAYgBhADUAOQA0ADMAYQA4
ADkAMgAyADgAZgBiADYANgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfAGMAMQAxADEAMAA1ADIAZgBhADcAYQA5ADQAMgAwAGIAYQA1ADkANAAzAGEAOAA5
ADIAMgA4AGYAYgA2ADYAYgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANQA5ADUANAAuADIAMwAwADcANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADUANAAuADIAMwAwADcANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAQMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c111052fa7a9420ba5943a89228fb66b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$Package::ORDER_UPDATE_API</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">172180f24995aa7f818f0b55c81ac04b</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">6460f016b18e51b8e35123c71d59597f2fbf32c3</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0].Columns[APICall_Success]"
                          cachedDataType="bool"
                          cachedName="APICall_Success"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APICall_Success]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0].Columns[OrderId]"
                          cachedDataType="i8"
                          cachedName="OrderId"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderId]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0].Columns[OrderStatusTypeId]"
                          cachedDataType="ui1"
                          cachedName="OrderStatusTypeId"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output].Columns[OrderStatusTypeId]" />
                        <inputColumn
                          refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0].Columns[APIError_Order]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="APIError_Order"
                          lineageId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output].Columns[APIError_Order]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Derived Column Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[failed to update]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status.Inputs[Row Count Input 1]"
                  name="failed to update"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[failed to update]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Lookup Match Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Inputs[Input 0]"
                  name="Lookup Match Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[OLE DB Command Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Inputs[Input 0]"
                  name="OLE DB Command Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[OLE DB Source Output]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Output 0]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment.Inputs[OLE DB Command Input]"
                  name="Output 0"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments.Outputs[Output 0]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Output 01]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Inputs[Conditional Split Input]"
                  name="Output 0"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call.Outputs[Output 0]" />
                <path
                  refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Success]"
                  endId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success.Inputs[Row Count Input 1]"
                  name="Success"
                  startId="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss.Outputs[Success]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments  Update from Mapics End"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{353DC871-9601-415D-8CF9-F911DEE9CB7A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order#, Date &amp; Comments  Update from Mapics End"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_78773139ce23419590f59baf0e341407"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::JobExecutionID,User::JobExecutionLogConnectionName"
              ReadWriteVariables="User::EmailMessage,User::JobExecutionDetailID,User::JobExecutionDetailResultTypeID,User::JobExecutionResultMessage,User::JobExecutionResultTypeID,User::JobExecutionRowCountBusinessFailures,User::JobExecutionRowCountSuccesses,User::JobExecutionRowCountSystemFailures,User::JobStatusUpdateFail">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1c0e309a1d334cf0ba20ded7dda18c4e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1c0e309a1d334cf0ba20ded7dda18c4e")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;

#endregion

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion




        #region "Properties"


        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string TaskName
        {
            get
            {
                return (string)Dts.Variables["System::TaskName"].Value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        public int JobExecutionDetailID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailID"].Value = value;
            }
        }

        public int JobExecutionRowCountSuccesses
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountSuccesses"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountSuccesses"].Value = value;
            }
        }

        public int JobExecutionRowCountBusinessFailures
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountBusinessFailures"].Value = value;
            }
        }

        public int JobExecutionRowCountSystemFailures
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value;
            }
            set
            {
                Dts.Variables["Usesr::JobExecutionRowCountSystemFailures"].Value = value;
            }
        }

        public int JobExecutionDetailResultTypeID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailResultTypeID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = value;
            }
        }

        public string JobExecutionResultMessage
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionResultMessage"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultMessage"].Value = value;
            }
        }

        public int JobExecutionResultTypeID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionResultTypeID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionResultTypeID"].Value = value;
            }
        }

        public int JobStatusUpdateFail
        {
            get
            {
                return (int)Dts.Variables["User::JobStatusUpdateFail"].Value;
            }
            set
            {
                Dts.Variables["User::JobStatusUpdateFail"].Value = value;
            }
        }

        public string EmailMessage
        {
            get
            {
                return (string)Dts.Variables["User::EmailMessage"].Value;
            }
            set
            {
                Dts.Variables["User::EmailMessage"].Value = value;
            }
        }

        public bool HasErrors
        {
            get
            {
                return (JobExecutionRowCountBusinessFailures + JobExecutionRowCountSystemFailures) != 0;
            }
        }

        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            this.JobExecutionDetailResultTypeID = 1;

            if (this.HasErrors)
            {
                this.JobExecutionDetailResultTypeID = 4;
                this.JobExecutionResultTypeID = 2;
            }

            if (String.IsNullOrEmpty(this.JobExecutionResultMessage)
            || String.Compare(this.JobExecutionResultMessage, "Unknown", true) == 0)
            {
                this.JobExecutionResultMessage = String.Format(
                    "Successes: {0:N0} - Failures: {1:N0}",
                    this.JobExecutionRowCountSuccesses,
                    this.JobExecutionRowCountSystemFailures);
            }

            if (this.JobExecutionRowCountBusinessFailures > 0)
            {
                this.JobExecutionResultMessage += String.Format(" - Business Failures(Error Status): {0:N0}", this.JobExecutionRowCountBusinessFailures);
            }

            EmailMessage = getEmailMessage(this.JobExecutionRowCountSuccesses, this.JobStatusUpdateFail, this.JobExecutionRowCountBusinessFailures);


            this.GMJobExecutionDetailEnd();
            this.ClearSetupVariables();
            this.ClearFinalVariables();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private void ClearSetupVariables()
        {
            Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = 3;
            Dts.Variables["User::JobExecutionResultMessage"].Value = "Unknown";
            Dts.Variables["User::JobExecutionDetailID"].Value = -1;
        }

        private void ClearFinalVariables()
        {
            Dts.Variables["User::JobExecutionRowCountSuccesses"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value = 0;
            Dts.Variables["User::JobStatusUpdateFail"].Value = 0;
        }

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
        }

        private void GMJobExecutionDetailEnd()
        {
            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                using (IDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = "Logs.GMJobExecutionDetailEndSp";
                    cmd.CommandType = CommandType.StoredProcedure;

                    IDbDataParameter p = cmd.CreateParameter();
                    p.ParameterName = "@iReqID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionDetailID;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iReqResultID";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionDetailResultTypeID;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iReqResultMessage";
                    p.DbType = DbType.String;
                    p.Value = this.JobExecutionResultMessage;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountSuccesses";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountSuccesses;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountBusinessFailures";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountBusinessFailures;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@iRowCountSystemFailures";
                    p.DbType = DbType.Int32;
                    p.Value = this.JobExecutionRowCountSystemFailures;
                    cmd.Parameters.Add(p);

                    cmd.ExecuteNonQuery();
                }
            }
        }

        private string getEmailMessage(int success, int apifail, int ordersInError)
        {
            System.Text.StringBuilder msg = new System.Text.StringBuilder(EmailMessage);
            msg.Append(Environment.NewLine);
            msg.Append(string.Format(@"
Status Change - [AwaitingCSR ==> Accepted]  
----------------------------------------------------------
Success                                 : {0:N0}", success));           

                msg.Append(string.Format(@"
API Call failed to update               : {0:N0}", apifail));

                if (ordersInError>0)
                {
                    msg.Append(string.Format(@"
Orders in Error Status                  : {0:N0}", ordersInError));
                }

            return msg.ToString();
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1c0e309a1d334cf0ba20ded7dda18c4e</msb:CodeName>
		<msb:DisplayName>ST_1c0e309a1d334cf0ba20ded7dda18c4e</msb:DisplayName>
		<msb:ProjectId>{D0793B9B-B397-44FC-A940-08D9772517CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_78773139ce23419590f59baf0e341407.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Settings.get_Default():ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Sett" +
    "ings")]

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_78773139ce23419590f59baf0e341407.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{9A589CC6-3134-4D8A-B9F3-41FF60A45426}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1c0e309a1d334cf0ba20ded7dda18c4e</RootNamespace><AssemblyName>ST_78773139ce23419590f59baf0e341407</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugaf422ec9-85cc-4f37-b508-98a51d49fd8f/4d1003bb-5bdc-4e51-854a-3eb09b6eca45&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1c0e309a1d334cf0ba20ded7dda18c4e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f8eda9b31b8348a1882ab84abc99f662.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAE8AGVcAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAAvkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhGAABTAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
RgAAAAAAAEgAAAACAAUAqCgAAMAdAAABAAAAAAAAAPAnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKct0AAHBvGAAACm8ZAAAKpR8AAAEq
hgIoFgAACm8XAAAKct0AAHBvGAAACgOMHwAAAW8aAAAKKoICKBYAAApvFwAACnIHAQBwbxgAAApv
GQAACqUfAAABKoYCKBYAAApvFwAACnIHAQBwbxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApy
PQEAcG8YAAAKbxkAAAqlHwAAASqGAigWAAAKbxcAAApyhQEAcG8YAAAKA4wfAAABbxoAAAoqggIo
FgAACm8XAAAKcs8BAHBvGAAACm8ZAAAKpR8AAAEqhgIoFgAACm8XAAAKciUCAHBvGAAACgOMHwAA
AW8aAAAKKoICKBYAAApvFwAACnJ9AgBwbxgAAApvGQAACqUfAAABKoYCKBYAAApvFwAACnLPAgBw
bxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApyIwMAcG8YAAAKbxkAAAqlHwAAASqGAigWAAAK
bxcAAApyIwMAcG8YAAAKA4wfAAABbxoAAAoqggIoFgAACm8XAAAKcm0DAHBvGAAACm8ZAAAKdB4A
AAEqcgIoFgAACm8XAAAKcm0DAHBvGAAACgNvGgAACiqCAigWAAAKbxcAAApyrQMAcG8YAAAKbxkA
AAqlHwAAASqGAigWAAAKbxcAAApyrQMAcG8YAAAKA4wfAAABbxoAAAoqggIoFgAACm8XAAAKcusD
AHBvGAAACm8ZAAAKpR8AAAEqhgIoFgAACm8XAAAKcusDAHBvGAAACgOMHwAAAW8aAAAKKoICKBYA
AApvFwAACnIfBABwbxgAAApvGQAACnQeAAABKnICKBYAAApvFwAACnIfBABwbxgAAAoDbxoAAAoq
UgIoEAAABgIoEgAABlgW/gEW/gEqAAADMAUAzwAAAAAAAAACFygVAAAGAigeAAAGLA4CGigVAAAG
AhgoGQAABgIoFgAABigbAAAKLRMCKBYAAAZyRQQAcBcoHAAACi0mAnJVBABwAigOAAAGjB8AAAEC
KBIAAAaMHwAAASgdAAAKKBcAAAYCKBAAAAYWMSYCJSgWAAAGcp8EAHACKBAAAAaMHwAAASgeAAAK
KB8AAAooFwAABgICAigOAAAGAigaAAAGAigQAAAGKCQAAAYoHQAABgIoIwAABgIoIAAABgIoIQAA
BgIoFgAAChZvIAAACioAAzACAGAAAAAAAAAAAigWAAAKbxcAAApyIwMAcG8YAAAKGYwfAAABbxoA
AAoCKBYAAApvFwAACnJtAwBwbxgAAApyRQQAcG8aAAAKAigWAAAKbxcAAApyBwEAcG8YAAAKFYwf
AAABbxoAAAoqAzACAIEAAAAAAAAAAigWAAAKbxcAAApyPQEAcG8YAAAKFowfAAABbxoAAAoCKBYA
AApvFwAACnLPAQBwbxgAAAoWjB8AAAFvGgAACgIoFgAACm8XAAAKcn0CAHBvGAAAChaMHwAAAW8a
AAAKAigWAAAKbxcAAApy6wMAcG8YAAAKFowfAAABbxoAAAoqdgIoFgAACm8hAAAKAigIAAAGbyIA
AAoDbyMAAAoqABswAgCRAQAAAgAAEQIUKCIAAAZ0IgAAAQoGbyQAAAoLB3L1BABwbyUAAAoHGm8m
AAAKB28nAAAKDAhyMwUAcG8oAAAKCB8LbykAAAoIAigMAAAGjB8AAAFvKgAACgdvKwAACghvLAAA
CiYHbycAAAoMCHJDBQBwbygAAAoIHwtvKQAACggCKBQAAAaMHwAAAW8qAAAKB28rAAAKCG8sAAAK
JgdvJwAACgwIcl8FAHBvKAAACggfEG8pAAAKCAIoFgAABm8qAAAKB28rAAAKCG8sAAAKJgdvJwAA
CgwIcoUFAHBvKAAACggfC28pAAAKCAIoDgAABowfAAABbyoAAAoHbysAAAoIbywAAAomB28nAAAK
DAhyrQUAcG8oAAAKCB8LbykAAAoIAigQAAAGjB8AAAFvKgAACgdvKwAACghvLAAACiYHbycAAAoM
CHLjBQBwbygAAAoIHwtvKQAACggCKBIAAAaMHwAAAW8qAAAKB28rAAAKCG8sAAAKJgdvLQAACibe
CgcsBgdvLgAACtzeCgYsBgZvLgAACtwqAAAAQTQAAAIAAAAUAAAAZgEAAHoBAAAKAAAAAAAAAAIA
AAANAAAAeQEAAIYBAAAKAAAAAAAAABMwAwBoAAAAAwAAEQIoHAAABnMvAAAKCgYoMAAACm8xAAAK
JgZyFQYAcAOMHwAAASgeAAAKbzEAAAomBnJQBwBwBIwfAAABKB4AAApvMQAACiYFFjEXBnK2BwBw
BYwfAAABKB4AAApvMQAACiYGbzIAAAoqHgIoMwAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHAHAAAjfgAA3AcAAMgLAAAjU3RyaW5ncwAAAACk
EwAAHAgAACNVUwDAGwAAEAAAACNHVUlEAAAA0BsAAPABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkD
AAAA+iUzABYAAAEAAAAsAAAABQAAAAYAAAAlAAAADwAAADMAAAACAAAADwAAAAMAAAADAAAAEAAA
ABsAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYA
bwFeAQYAoAGLAQYAkAZ2BgYAuwapBgYA0gapBgYA7wapBgYADgepBgYAJwepBgYAQAepBgYAWwep
BgYAdgepBgYAjwepBgYAyAeoBwYA6AeoBwYAPQgqCAYAWgi6AAYAXwi6AAYAgwipBgoArwiZCAoA
yAiZCAYA3QioBw4A/wgUAQ4AIQkUARIAeglaCRIAkglaCQYArgm6AAYAtQm6ABIA+AlaCRIAFApa
CRYAMgomChYAQAomChYAaQomChYAhQomChYApgomChYAxwomChYA2QomCgYAFAsBCwYALgu6AAYA
TgtCCwYAXAu6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0
AH8ADQAEAAgAAwEAAKMAAAARAAQAJgARAH8BEwARAKwBFwARAPYBOQAGBjYGdQBWgD4GeABWgEYG
eABQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQAB
AKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGPgIrQACALsgAAAAAIYIGgJHAAIA
3CAAAAAAhgg8AkcAAgD9IAAAAACGCEkCSwACAB4hAAAAAIYIXAJPAAIAQCEAAAAAhghvAksAAwBh
IQAAAACGCIgCTwADAIMhAAAAAIYIoQJLAAQApCEAAAAAhgjDAk8ABADGIQAAAACGCOUCSwAFAOch
AAAAAIYIDgNPAAUACSIAAAAAhgg3A0sABgAqIgAAAACGCF4DTwAGAEwiAAAAAIYIhQNLAAcAbSIA
AAAAhgioA08ABwCPIgAAAACGCMsDRwAIALAiAAAAAIYI6QNUAAgAzSIAAAAAhggHBEsACQDuIgAA
AACGCCQETwAJABAjAAAAAIYIQQRLAAoAMSMAAAAAhghZBE8ACgBTIwAAAACGCHEERwALAHQjAAAA
AIYIggRUAAsAkSMAAAAAhgiTBFkADACoIwAAAACGAKEEGwAMAIQkAAAAAIEApgQbAAwA8CQAAAAA
gQC6BBsADAB9JQAAAACGAM4EXQAMAJwlAAAAAIEA4AQbAA0AcCcAAAAAgQD4BGIADQDkJwAAAACG
GLwBGwAQAAAAAQBOBgAAAQBOBgAAAQBOBgAAAQBOBgAAAQBOBgAAAQBOBgAAAQBOBgAAAQBOBgAA
AQBOBgAAAQBOBgAAAQBOBgAAAQBUBgAAAQBYBgAAAgBgBgAAAwBoBjkAvAFUAEEAvAFUAEkAvAFU
AFEAvAFUAFkAvAFUAGEAvAFUAGkAvAFUAHEAvAFUAHkAvAFUAIEAvAFUAIkAvAFPAJEAvAEbAJkA
vAEbAAkAvAEbAKEAcQiGAKEAjAiNACkAvAGSALkAvAGeAMkAvAEbABEAvAEbANEAvAEbABkAMwmx
ANkAhAm2AOEAmwm7AOkApAnBAOkAuwnFAPEAxQnKAPEA0wnPAPEA2wnWAPEA2wndAPEA4gnjANkA
6QlPANkABArpAAEBmwnvAAkBzgRdABEBSwr2ABkBWQpUABkBdQr8ABkBlgoDATEBtQpUADEBzgoJ
ATEBuwnFABkB8goQAUkBGgsWARkBHgtLAFEBOgsbAFkBvAFUAGEBaAsnAVkBdAsrAQkAewtHABkA
vAEbAAgAFAB8AAgAGACBACkAkwCkAC4AGwCpAS4AIwCpAS4AYwDPAS4ACwA4AS4AEwCAAS4AMwCA
AS4AKwCpAS4AOwCvAS4AQwCpAS4AWwDGAUMAawCBAEkAkwCkAGEAmwCBAIMAqwCBAJkAGwEyAQIA
AQADAAMABAAEAAAAbwEvAAAA7gE0AAAAEgJCAAAACAVpAAAAJgVpAAAALwVtAAAAPgVtAAAAUwVt
AAAAcQVtAAAAlgVtAAAAuQVtAAAA2AVpAAAA8gVtAAAACwZtAAAAHwZpAAAALAZxAAIAAgADAAEA
BAAFAAIAAwAFAAIABQAHAAIACAAJAAIACQALAAIACgANAAEACwANAAIADAAPAAEADQAPAAIADgAR
AAEADwARAAEAEQATAAIAEAATAAEAEwAVAAIAEgAVAAIAFAAXAAEAFQAXAAEAFwAZAAIAFgAZAAIA
GAAbAAEAGQAbAAIAGgAdAAEAGwAdAAIAHAAfAAEAHQAfAAIAHgAhAASAAAABAAAAQxf3SQAAAAAA
AAYIAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAA
CgD1AAAAAAALAAAAAAAAAAAAAAAKADsJAAAAAAQAAAAAAAAAAAAAAAEAJgoAAAAAAAAAAAEAAACE
CwAABQAEAAAAADxNb2R1bGU+AFNUX2Y4ZWRhOWIzMWI4MzQ4YTE4ODJhYjg0YWJjOTlmNjYyLmRs
bABSZXNvdXJjZXMAU1RfMWMwZTMwOWExZDMzNGNmMGJhMjBkZWQ3ZGRhMThjNGUuUHJvcGVydGll
cwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzFjMGUzMDlhMWQzMzRjZjBiYTIwZGVkN2RkYTE4YzRl
AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlv
bgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJj
ZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0
b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRl
ZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AGdldF9Kb2JFeGVjdXRpb25Mb2dDb25u
ZWN0aW9uTmFtZQBnZXRfVGFza05hbWUAZ2V0X0pvYkV4ZWN1dGlvbklEAHNldF9Kb2JFeGVjdXRp
b25JRABnZXRfSm9iRXhlY3V0aW9uRGV0YWlsSUQAc2V0X0pvYkV4ZWN1dGlvbkRldGFpbElEAGdl
dF9Kb2JFeGVjdXRpb25Sb3dDb3VudFN1Y2Nlc3NlcwBzZXRfSm9iRXhlY3V0aW9uUm93Q291bnRT
dWNjZXNzZXMAZ2V0X0pvYkV4ZWN1dGlvblJvd0NvdW50QnVzaW5lc3NGYWlsdXJlcwBzZXRfSm9i
RXhlY3V0aW9uUm93Q291bnRCdXNpbmVzc0ZhaWx1cmVzAGdldF9Kb2JFeGVjdXRpb25Sb3dDb3Vu
dFN5c3RlbUZhaWx1cmVzAHNldF9Kb2JFeGVjdXRpb25Sb3dDb3VudFN5c3RlbUZhaWx1cmVzAGdl
dF9Kb2JFeGVjdXRpb25EZXRhaWxSZXN1bHRUeXBlSUQAc2V0X0pvYkV4ZWN1dGlvbkRldGFpbFJl
c3VsdFR5cGVJRABnZXRfSm9iRXhlY3V0aW9uUmVzdWx0TWVzc2FnZQBzZXRfSm9iRXhlY3V0aW9u
UmVzdWx0TWVzc2FnZQBnZXRfSm9iRXhlY3V0aW9uUmVzdWx0VHlwZUlEAHNldF9Kb2JFeGVjdXRp
b25SZXN1bHRUeXBlSUQAZ2V0X0pvYlN0YXR1c1VwZGF0ZUZhaWwAc2V0X0pvYlN0YXR1c1VwZGF0
ZUZhaWwAZ2V0X0VtYWlsTWVzc2FnZQBzZXRfRW1haWxNZXNzYWdlAGdldF9IYXNFcnJvcnMATWFp
bgBDbGVhclNldHVwVmFyaWFibGVzAENsZWFyRmluYWxWYXJpYWJsZXMAQWNxdWlyZUNvbm5lY3Rp
b24AR01Kb2JFeGVjdXRpb25EZXRhaWxFbmQAZ2V0RW1haWxNZXNzYWdlAEpvYkV4ZWN1dGlvbkxv
Z0Nvbm5lY3Rpb25OYW1lAFRhc2tOYW1lAEpvYkV4ZWN1dGlvbklEAEpvYkV4ZWN1dGlvbkRldGFp
bElEAEpvYkV4ZWN1dGlvblJvd0NvdW50U3VjY2Vzc2VzAEpvYkV4ZWN1dGlvblJvd0NvdW50QnVz
aW5lc3NGYWlsdXJlcwBKb2JFeGVjdXRpb25Sb3dDb3VudFN5c3RlbUZhaWx1cmVzAEpvYkV4ZWN1
dGlvbkRldGFpbFJlc3VsdFR5cGVJRABKb2JFeGVjdXRpb25SZXN1bHRNZXNzYWdlAEpvYkV4ZWN1
dGlvblJlc3VsdFR5cGVJRABKb2JTdGF0dXNVcGRhdGVGYWlsAEVtYWlsTWVzc2FnZQBIYXNFcnJv
cnMAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdHhuAHN1Y2Nlc3MAYXBpZmFpbABvcmRl
cnNJbkVycm9yAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTVF9mOGVkYTliMzFiODM0OGExODgyYWI4NGFiYzk5ZjY2MgBTeXN0ZW0uRGlh
Z25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1Zh
cmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3RyaW5nAEludDMyAHNldF9WYWx1
ZQBJc051bGxPckVtcHR5AENvbXBhcmUARm9ybWF0AENvbmNhdABzZXRfVGFza1Jlc3VsdABDb25u
ZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIAU3lzdGVtLkRhdGEASURi
Q29ubmVjdGlvbgBJRGJDb21tYW5kAENyZWF0ZUNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0AENvbW1h
bmRUeXBlAHNldF9Db21tYW5kVHlwZQBJRGJEYXRhUGFyYW1ldGVyAENyZWF0ZVBhcmFtZXRlcgBJ
RGF0YVBhcmFtZXRlcgBzZXRfUGFyYW1ldGVyTmFtZQBEYlR5cGUAc2V0X0RiVHlwZQBJRGF0YVBh
cmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMAU3lzdGVtLkNvbGxlY3Rpb25zAElMaXN0
AEFkZABFeGVjdXRlTm9uUXVlcnkASURpc3Bvc2FibGUARGlzcG9zZQBTeXN0ZW0uVGV4dABTdHJp
bmdCdWlsZGVyAEVudmlyb25tZW50AGdldF9OZXdMaW5lAEFwcGVuZABUb1N0cmluZwBTVF8xYzBl
MzA5YTFkMzM0Y2YwYmEyMGRlZDdkZGExOGM0ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMAAABxUwBUAF8AMQBjADAAZQAzADAAOQBhADEAZAAzADMANABjAGYAMABiAGEAMgAwAGQAZQBk
ADcAZABkAGEAMQA4AGMANABlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAABHVQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4ATABvAGcAQwBvAG4AbgBl
AGMAdABpAG8AbgBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAKVUA
cwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAEkARAAANVUAcwBlAHIAOgA6AEoAbwBi
AEUAeABlAGMAdQB0AGkAbwBuAEQAZQB0AGEAaQBsAEkARAAAR1UAcwBlAHIAOgA6AEoAbwBiAEUA
eABlAGMAdQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABTAHUAYwBjAGUAcwBzAGUAcwAASVUAcwBl
AHMAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4AUgBvAHcAQwBvAHUAbgB0AFMAdQBjAGMA
ZQBzAHMAZQBzAABVVQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4AUgBvAHcAQwBv
AHUAbgB0AEIAdQBzAGkAbgBlAHMAcwBGAGEAaQBsAHUAcgBlAHMAAFdVAHMAZQBzAHIAOgA6AEoA
bwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAbwB3AEMAbwB1AG4AdABCAHUAcwBpAG4AZQBzAHMARgBh
AGkAbAB1AHIAZQBzAABRVQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4AUgBvAHcA
QwBvAHUAbgB0AFMAeQBzAHQAZQBtAEYAYQBpAGwAdQByAGUAcwAAU1UAcwBlAHMAcgA6ADoASgBv
AGIARQB4AGUAYwB1AHQAaQBvAG4AUgBvAHcAQwBvAHUAbgB0AFMAeQBzAHQAZQBtAEYAYQBpAGwA
dQByAGUAcwAASVUAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAEQAZQB0AGEAaQBs
AFIAZQBzAHUAbAB0AFQAeQBwAGUASQBEAAA/VQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQA
aQBvAG4AUgBlAHMAdQBsAHQATQBlAHMAcwBhAGcAZQAAPVUAcwBlAHIAOgA6AEoAbwBiAEUAeABl
AGMAdQB0AGkAbwBuAFIAZQBzAHUAbAB0AFQAeQBwAGUASQBEAAAzVQBzAGUAcgA6ADoASgBvAGIA
UwB0AGEAdAB1AHMAVQBwAGQAYQB0AGUARgBhAGkAbAAAJVUAcwBlAHIAOgA6AEUAbQBhAGkAbABN
AGUAcwBzAGEAZwBlAAAPVQBuAGsAbgBvAHcAbgAASVMAdQBjAGMAZQBzAHMAZQBzADoAIAB7ADAA
OgBOADAAfQAgAC0AIABGAGEAaQBsAHUAcgBlAHMAOgAgAHsAMQA6AE4AMAB9AAFVIAAtACAAQgB1
AHMAaQBuAGUAcwBzACAARgBhAGkAbAB1AHIAZQBzACgARQByAHIAbwByACAAUwB0AGEAdAB1AHMA
KQA6ACAAewAwADoATgAwAH0AAT1MAG8AZwBzAC4ARwBNAEoAbwBiAEUAeABlAGMAdQB0AGkAbwBu
AEQAZQB0AGEAaQBsAEUAbgBkAFMAcAAAD0AAaQBSAGUAcQBJAEQAABtAAGkAUgBlAHEAUgBlAHMA
dQBsAHQASQBEAAAlQABpAFIAZQBxAFIAZQBzAHUAbAB0AE0AZQBzAHMAYQBnAGUAACdAAGkAUgBv
AHcAQwBvAHUAbgB0AFMAdQBjAGMAZQBzAHMAZQBzAAA1QABpAFIAbwB3AEMAbwB1AG4AdABCAHUA
cwBpAG4AZQBzAHMARgBhAGkAbAB1AHIAZQBzAAAxQABpAFIAbwB3AEMAbwB1AG4AdABTAHkAcwB0
AGUAbQBGAGEAaQBsAHUAcgBlAHMAAIE5DQAKAFMAdABhAHQAdQBzACAAQwBoAGEAbgBnAGUAIAAt
ACAAWwBBAHcAYQBpAHQAaQBuAGcAQwBTAFIAIAA9AD0APgAgAEEAYwBjAGUAcAB0AGUAZABdACAA
IAANAAoALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQANAAoAUwB1AGMAYwBlAHMAcwAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAA6ACAAewAwADoATgAwAH0AAWUNAAoA
QQBQAEkAIABDAGEAbABsACAAZgBhAGkAbABlAGQAIAB0AG8AIAB1AHAAZABhAHQAZQAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAA6ACAAewAwADoATgAwAH0AAGUNAAoATwByAGQAZQByAHMA
IABpAG4AIABFAHIAcgBvAHIAIABTAHQAYQB0AHUAcwAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAA6ACAAewAwADoATgAwAH0AAHt317jF5ClJjfIdWFansOoACLd6XFYZNOCJCImE
Xc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAAS
DAMgAA4DIAAIBCABAQgEIAEBDgMgAAIEIAEcHAYgAw4ICAgDKAAOAygACAMoAAICBggDBhEUBAAA
AAAEAQAAAAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQg
ABJxBSABEnUcAyAAHAQgAQEcBAABAg4GAAMIDg4CBgADDg4cHAUAAg4OHAUAAg4ODgUgABKAgQYg
ARKAhRwFIAASgI0GIAEBEYCRBSAAEoCVBiABARGAnQUgABKAoQQgAQgcCwcDEoCJEoCNEoCVAwAA
DgYgARKArQ4FBwESgK1HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfMWMwZTMwOWExZDMzNGNmMGJhMjBk
ZWQ3ZGRhMThjNGUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAkEYAAAAAAAAAAAAArkYAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAKBGAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAALAD
AAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQD3SUMXAAABAPdJQxc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQ
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQBjADAAZQAz
ADAAOQBhADEAZAAzADMANABjAGYAMABiAGEAMgAwAGQAZQBkADcAZABkAGEAMQA4AGMANABlAAAA
QAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA1ADUALgAxADgAOQAz
ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZgA4AGUAZABhADkA
YgAzADEAYgA4ADMANAA4AGEAMQA4ADgAMgBhAGIAOAA0AGEAYgBjADkAOQBmADYANgAyAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AZgA4AGUAZABhADkAYgAzADEAYgA4ADMANAA4AGEAMQA4ADgAMgBhAGIAOAA0AGEA
YgBjADkAOQBmADYANgAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADEAYwAwAGUAMwAwADkAYQAxAGQAMwAzADQAYwBmADAAYgBhADIAMABkAGUAZAA3AGQA
ZABhADEAOABjADQAZQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANQA5ADUANQAuADEAOAA5ADMANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA5ADUANQAuADEAOAA5ADMANQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments Update from Mapics"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{15A207E2-DD3D-4482-8227-D8C70AF2304E}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Order#, Date &amp; Comments Update from Mapics"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_657fcf86d16d44ef8736087bcee5ecc4"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::JobExecutionID,User::JobExecutionLogConnectionName"
              ReadWriteVariables="User::EmailMessage,User::JobExecutionDetailID,User::JobExecutionDetailResultTypeID,User::JobExecutionResultMessage,User::JobExecutionResultTypeID,User::JobExecutionRowCountBusinessFailures,User::JobExecutionRowCountSuccesses,User::JobExecutionRowCountSystemFailures,User::JobStatusUpdateFail">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c4a5f8583d1b4916869f9ab557ef3ebf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c4a5f8583d1b4916869f9ab557ef3ebf")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System.Data;

#endregion

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region "Properties"

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        public string TaskName
        {
            get
            {
                return (string)Dts.Variables["System::TaskName"].Value;
            }
        }

        public int JobExecutionID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionID"].Value = value;
            }
        }

        public int JobExecutionDetailID
        {
            get
            {
                return (int)Dts.Variables["User::JobExecutionDetailID"].Value;
            }
            set
            {
                Dts.Variables["User::JobExecutionDetailID"].Value = value;
            }
        }

        public string EmailMessage
        {
            get
            {
                return (string)Dts.Variables["User::EmailMessage"].Value;
            }
            set
            {
                Dts.Variables["User::EmailMessage"].Value = value;
            }
        }

        #endregion


        private void ClearVariables()
        {
            Dts.Variables["User::JobExecutionDetailResultTypeID"].Value = 3;
            Dts.Variables["User::JobExecutionResultMessage"].Value = "Unknown";
            Dts.Variables["User::JobExecutionDetailID"].Value = -1;
            Dts.Variables["User::JobExecutionRowCountSuccesses"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountBusinessFailures"].Value = 0;
            Dts.Variables["User::JobExecutionRowCountSystemFailures"].Value = 0;
            Dts.Variables["User::JobStatusUpdateFail"].Value = 0;
        }

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
        }

        private int GMJobExecutionDetailStart()
        {
            try
            {


                using (IDbConnection con = (IDbConnection)AcquireConnection(null))
                {
                    using (IDbCommand cmd = con.CreateCommand())
                    {
                        cmd.CommandText = "Logs.GMJobExecutionDetailStartSp";
                        cmd.CommandType = CommandType.StoredProcedure;

                        IDbDataParameter p = cmd.CreateParameter();
                        p.ParameterName = "@iReqJobExecutionID";
                        p.DbType = DbType.Int32;
                        p.Value = this.JobExecutionID;
                        cmd.Parameters.Add(p);

                        p = cmd.CreateParameter();
                        p.ParameterName = "@iReqTaskName";
                        p.DbType = DbType.String;
                        p.Value = this.TaskName;
                        cmd.Parameters.Add(p);

                        return (int)cmd.ExecuteScalar();
                    }
                }
            }
            catch (System.Exception ex)
            {
                string msg = ex.Message;
                throw;
            }
        }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            this.ClearVariables();
            this.JobExecutionDetailID = this.GMJobExecutionDetailStart();
            EmailMessage = EmailMessage + @"
==================================================================================
  Reading Order info from Mapics 
==================================================================================
";
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c4a5f8583d1b4916869f9ab557ef3ebf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_c4a5f8583d1b4916869f9ab557ef3ebf</msb:DisplayName>
		<msb:ProjectId>{BF046FA4-D4B3-4C43-A9F5-4D41B954C8CE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_657fcf86d16d44ef8736087bcee5ecc4.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Settings.get_Default():ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties.Sett" +
    "ings")]

namespace ST_c4a5f8583d1b4916869f9ab557ef3ebf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_657fcf86d16d44ef8736087bcee5ecc4.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{1A3CD67C-66A8-4222-9FE3-5E32A69442A1}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_c4a5f8583d1b4916869f9ab557ef3ebf</RootNamespace><AssemblyName>ST_657fcf86d16d44ef8736087bcee5ecc4</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug77eea8e5-000c-4d3a-a861-9a5caa0e8bc8/f0040e31-a05f-4f31-93ae-44bdd0609d11&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_657fcf86d16d44ef8736087bcee5ecc4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEi8KlcAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAnjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEw6AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
OgAAAAAAAEgAAAACAAUAwCQAAIwVAAABAAAAAAAAAAgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKct0AAHBvGAAACm8ZAAAKpR8AAAEq
hgIoFgAACm8XAAAKct0AAHBvGAAACgOMHwAAAW8aAAAKKoICKBYAAApvFwAACnIHAQBwbxgAAApv
GQAACqUfAAABKoYCKBYAAApvFwAACnIHAQBwbxgAAAoDjB8AAAFvGgAACiqCAigWAAAKbxcAAApy
PQEAcG8YAAAKbxkAAAp0HgAAASpyAigWAAAKbxcAAApyPQEAcG8YAAAKA28aAAAKKgAAAAMwAgDg
AAAAAAAAAAIoFgAACm8XAAAKcmMBAHBvGAAAChmMHwAAAW8aAAAKAigWAAAKbxcAAApyrQEAcG8Y
AAAKcu0BAHBvGgAACgIoFgAACm8XAAAKcgcBAHBvGAAAChWMHwAAAW8aAAAKAigWAAAKbxcAAApy
/QEAcG8YAAAKFowfAAABbxoAAAoCKBYAAApvFwAACnJFAgBwbxgAAAoWjB8AAAFvGgAACgIoFgAA
Cm8XAAAKcpsCAHBvGAAAChaMHwAAAW8aAAAKAigWAAAKbxcAAApy7QIAcG8YAAAKFowfAAABbxoA
AAoqdgIoFgAACm8bAAAKAigIAAAGbxwAAAoDbx0AAAoqAAAbMAIAwQAAAAIAABECFCgRAAAGdCIA
AAEKBm8eAAAKCwdyIQMAcG8fAAAKBxpvIAAACgdvIQAACgwIcmMDAHBvIgAACggfC28jAAAKCAIo
CgAABowfAAABbyQAAAoHbyUAAAoIbyYAAAomB28hAAAKDAhyiwMAcG8iAAAKCB8QbyMAAAoIAigJ
AAAGbyQAAAoHbyUAAAoIbyYAAAomB28nAAAKpR8AAAETBN4eBywGB28oAAAK3AYsBgZvKAAACtwN
CW8pAAAKJv4aEQQqAAAAASgAAAIAFACMoAAKAAAAAAIADQCdqgAKAAAAAAAAAAC0tAAKKwAAAdYC
KBAAAAYCAigSAAAGKA0AAAYCAigOAAAGcqcDAHAoKgAACigPAAAGAigWAAAKFm8rAAAKKh4CKCwA
AAoqAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAjAUA
ACN+AAD4BQAAhAgAACNTdHJpbmdzAAAAAHwOAABEBQAAI1VTAMATAAAQAAAAI0dVSUQAAADQEwAA
vAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACsAAAAFAAAABgAAABQAAAAF
AAAALAAAAAIAAAAPAAAAAgAAAAMAAAAIAAAADAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAA
BgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCXA30DBgDCA7ADBgDZA7ADBgD2
A7ADBgAVBLADBgAuBLADBgBHBLADBgBiBLADBgB9BLADBgCWBLADBgDPBK8EBgDvBK8EBgBEBTEF
BgBhBboABgBmBboABgCKBbADCgC2BaAFCgDPBaAFBgDkBa8EDgAGBhQBDgAoBhQBEgCBBmEGEgCZ
BmEGBgC1BroABgC8BroAEgDMBmEGEgDoBmEGFgAGB/oGFgAUB/oGFgA9B/oGFgBZB/oGFgB6B/oG
FgCbB/oGFgCtB/oGBgDoB9UHBgAACLoABgAUCLoAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQAB
AAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAVABEAfwETABEArAEXABEA
9gE5AAYGWwNmAFaAYwNpAFaAawNpAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACT
CNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY
/wWeAAIAuyAAAAAAhggaAkcAAgDcIAAAAACGCDwCRwACAP0gAAAAAIYISQJLAAIAHiEAAAAAhghc
Ak8AAgBAIQAAAACGCG8CSwADAGEhAAAAAIYIiAJPAAMAgyEAAAAAhgihAkcABACkIQAAAACGCLIC
VAAEAMQhAAAAAIEAwwIbAAUAsCIAAAAAhgDSAlkABQDQIgAAAACBAOQCSwAGAMgjAAAAAIYA/gIb
AAYA/iMAAAAAhhi8ARsABgAAAAEAcwMAAAEAcwMAAAEAcwMAAAEAcwMAAAEAeQM5ALwBVABBALwB
VABJALwBVABRALwBVABZALwBVABhALwBVABpALwBVABxALwBVAB5ALwBVACBALwBVACJALwBTwCR
ALwBGwCZALwBGwAJALwBGwChAHgFdwChAJMFfgApALwBgwC5ALwBjwDJALwBGwARALwBGwDRALwB
GwAZADoGogDZAIsGpwDhAKIGrADpAKsGsgDpAMIGtgDZANgGuwABAaIGwQAJAdICWQARAR8HyAAZ
AS0HVAAZAUkHzgAZAWoH1QAxAYkHVAAxAaIH2wAxAcIGtgAZAcYH4gBJAe4H6AAZAfIHsgBRAQwI
GwBZAR4IRwDxACoI/QDZADEITwAZALwBGwAIABQAbQAIABgAcgApAJMAlQAuABsAdAEuACMAdAEu
AGMAmgEuAAsAAwEuABMASwEuADMASwEuACsAdAEuADsAegEuAEMAdAEuAFsAkQFDAGsAcgBJAJMA
lQBhAJsAcgCDAKsAcgCKAO0AAgABAAMAAwAEAAQAAABvAS8AAADuATQAAAASAkIAAAADA14AAAAh
A14AAAAqA2IAAAA5A2IAAABOA14AAgACAAMAAQAEAAUAAgADAAUAAgAFAAcAAgAIAAkAAgAJAAsA
AgAKAA0AAQALAA0AAgAMAA8AAQANAA8AAgAOABEAAQAPABEABIAAAAEAAABQFzSWAAAAAAAADQUA
AAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUA
AAAAAAsAAAAAAAAAAAAAAAoAQgYAAAAABAAAAAAAAAAAAAAAAQD6BgAAAAAAAAAAAQAAAEAIAAAF
AAQAAAAAAAA8TW9kdWxlPgBTVF82NTdmY2Y4NmQxNmQ0NGVmODczNjA4N2JjZWU1ZWNjNC5kbGwA
UmVzb3VyY2VzAFNUX2M0YTVmODU4M2QxYjQ5MTY4NjlmOWFiNTU3ZWYzZWJmLlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9jNGE1Zjg1ODNkMWI0OTE2ODY5ZjlhYjU1N2VmM2ViZgBT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABnZXRfSm9iRXhlY3V0aW9uTG9nQ29ubmVj
dGlvbk5hbWUAZ2V0X1Rhc2tOYW1lAGdldF9Kb2JFeGVjdXRpb25JRABzZXRfSm9iRXhlY3V0aW9u
SUQAZ2V0X0pvYkV4ZWN1dGlvbkRldGFpbElEAHNldF9Kb2JFeGVjdXRpb25EZXRhaWxJRABnZXRf
RW1haWxNZXNzYWdlAHNldF9FbWFpbE1lc3NhZ2UAQ2xlYXJWYXJpYWJsZXMAQWNxdWlyZUNvbm5l
Y3Rpb24AR01Kb2JFeGVjdXRpb25EZXRhaWxTdGFydABNYWluAEpvYkV4ZWN1dGlvbkxvZ0Nvbm5l
Y3Rpb25OYW1lAFRhc2tOYW1lAEpvYkV4ZWN1dGlvbklEAEpvYkV4ZWN1dGlvbkRldGFpbElEAEVt
YWlsTWVzc2FnZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQB0eG4AU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzY1N2ZjZjg2
ZDE2ZDQ0ZWY4NzM2MDg3YmNlZTVlY2M0AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9J
dGVtAGdldF9WYWx1ZQBTdHJpbmcASW50MzIAc2V0X1ZhbHVlAENvbm5lY3Rpb25zAGdldF9Db25u
ZWN0aW9ucwBDb25uZWN0aW9uTWFuYWdlcgBTeXN0ZW0uRGF0YQBJRGJDb25uZWN0aW9uAElEYkNv
bW1hbmQAQ3JlYXRlQ29tbWFuZABzZXRfQ29tbWFuZFRleHQAQ29tbWFuZFR5cGUAc2V0X0NvbW1h
bmRUeXBlAElEYkRhdGFQYXJhbWV0ZXIAQ3JlYXRlUGFyYW1ldGVyAElEYXRhUGFyYW1ldGVyAHNl
dF9QYXJhbWV0ZXJOYW1lAERiVHlwZQBzZXRfRGJUeXBlAElEYXRhUGFyYW1ldGVyQ29sbGVjdGlv
bgBnZXRfUGFyYW1ldGVycwBTeXN0ZW0uQ29sbGVjdGlvbnMASUxpc3QAQWRkAEV4ZWN1dGVTY2Fs
YXIASURpc3Bvc2FibGUARGlzcG9zZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQ29uY2F0AHNldF9U
YXNrUmVzdWx0AFNUX2M0YTVmODU4M2QxYjQ5MTY4NjlmOWFiNTU3ZWYzZWJmLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwBjADQAYQA1AGYAOAA1ADgAMwBkADEAYgA0ADkA
MQA2ADgANgA5AGYAOQBhAGIANQA1ADcAZQBmADMAZQBiAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAEdVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8A
bgBMAG8AZwBDAG8AbgBuAGUAYwB0AGkAbwBuAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABh
AHMAawBOAGEAbQBlAAApVQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4ASQBEAAA1
VQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4ARABlAHQAYQBpAGwASQBEAAAlVQBz
AGUAcgA6ADoARQBtAGEAaQBsAE0AZQBzAHMAYQBnAGUAAElVAHMAZQByADoAOgBKAG8AYgBFAHgA
ZQBjAHUAdABpAG8AbgBEAGUAdABhAGkAbABSAGUAcwB1AGwAdABUAHkAcABlAEkARAAAP1UAcwBl
AHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBuAFIAZQBzAHUAbAB0AE0AZQBzAHMAYQBnAGUA
AA9VAG4AawBuAG8AdwBuAABHVQBzAGUAcgA6ADoASgBvAGIARQB4AGUAYwB1AHQAaQBvAG4AUgBv
AHcAQwBvAHUAbgB0AFMAdQBjAGMAZQBzAHMAZQBzAABVVQBzAGUAcgA6ADoASgBvAGIARQB4AGUA
YwB1AHQAaQBvAG4AUgBvAHcAQwBvAHUAbgB0AEIAdQBzAGkAbgBlAHMAcwBGAGEAaQBsAHUAcgBl
AHMAAFFVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBSAG8AdwBDAG8AdQBuAHQA
UwB5AHMAdABlAG0ARgBhAGkAbAB1AHIAZQBzAAAzVQBzAGUAcgA6ADoASgBvAGIAUwB0AGEAdAB1
AHMAVQBwAGQAYQB0AGUARgBhAGkAbAAAQUwAbwBnAHMALgBHAE0ASgBvAGIARQB4AGUAYwB1AHQA
aQBvAG4ARABlAHQAYQBpAGwAUwB0AGEAcgB0AFMAcAAAJ0AAaQBSAGUAcQBKAG8AYgBFAHgAZQBj
AHUAdABpAG8AbgBJAEQAABtAAGkAUgBlAHEAVABhAHMAawBOAGEAbQBlAACBmw0ACgA9AD0APQA9
AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9
AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AA0ACgAgACAAUgBlAGEA
ZABpAG4AZwAgAE8AcgBkAGUAcgAgAGkAbgBmAG8AIABmAHIAbwBtACAATQBhAHAAaQBjAHMAIAAN
AAoAPQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9
AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQANAAoA
AL8VZTzR655KmzYRkPrSNasACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAAS
GQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAMgAA4DIAAIBCABAQgEIAEBDgQgARwcAygA
DgMoAAgCBggDBhEUBAAAAAAEAQAAAAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAQgAQEcBSAAEoCBBiABEoCFHAUgABKAjQYgAQER
gJEFIAASgJUGIAEBEYCdBSAAEoChBCABCBwPBwUSgIkSgI0SgJUSgK0IBQACDg4ORwEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1l
d29yayA0KAEAI1NUX2M0YTVmODU4M2QxYjQ5MTY4NjlmOWFiNTU3ZWYzZWJmAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEAAAB0OgAAAAAAAAAAAACOOgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDoAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQA0llAXAAABADSWUBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAA
NABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYwA0
AGEANQBmADgANQA4ADMAZAAxAGIANAA5ADEANgA4ADYAOQBmADkAYQBiADUANQA3AGUAZgAzAGUA
YgBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA2ADgALgAz
ADgANAA1ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgA1ADcA
ZgBjAGYAOAA2AGQAMQA2AGQANAA0AGUAZgA4ADcAMwA2ADAAOAA3AGIAYwBlAGUANQBlAGMAYwA0
AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANgA1ADcAZgBjAGYAOAA2AGQAMQA2AGQANAA0AGUAZgA4ADcAMwA2ADAA
OAA3AGIAYwBlAGUANQBlAGMAYwA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGMANABhADUAZgA4ADUAOAAzAGQAMQBiADQAOQAxADYAOAA2ADkAZgA5AGEA
YgA1ADUANwBlAGYAMwBlAGIAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQA5ADYAOAAuADMAOAA0ADUAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADYAOAAuADMAOAA0ADUAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACgOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1708CDA5-2C11-46DE-A949-38307DD51277}"
          DTS:From="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments Update from Mapics"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{8BEB11E1-45E8-4138-90C5-9C8CD23335DC}"
          DTS:From="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E26190DA-02B7-4EC2-8E06-0727AC1EB9EA}"
          DTS:From="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments  Update from Mapics End" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Save Email Messge"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{2957258a-8b37-4c89-8039-94181a0aeabb}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Save Email Messge"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_459090dbec27492cb3f42ce83cf4a8d2"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::EmailMessage,User::JobExecutionEmailCC,User::JobExecutionEmailTo,User::JobExecutionLogConnectionName,System::MachineName,System::PackageName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_326a051c26b14316a1196873b00bda90.Properties.Settings.get_Default():ST_326a051c26b14316a1196873b00bda90.Properties.Sett" +
    "ings")]

namespace ST_326a051c26b14316a1196873b00bda90.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_459090dbec27492cb3f42ce83cf4a8d2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{49178982-a214-4a10-bb78-62054ab1f2b2}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_326a051c26b14316a1196873b00bda90</RootNamespace><AssemblyName>ST_459090dbec27492cb3f42ce83cf4a8d2</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_326a051c26b14316a1196873b00bda90
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region Properties

        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }
        public string JobExecutionEmailTo
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionEmailTo"].Value;
            }
        }
        public string JobExecutionEmailCC
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionEmailCC"].Value;
            }
        }
        public string MachineName
        {
            get
            {
                return (string)Dts.Variables["System::MachineName"].Value;
            }
        }
        public string PackageName
        {
            get
            {
                return (string)Dts.Variables["System::PackageName"].Value;
            }
        }
        public string EmailMessage
        {
            get
            {
                return (string)Dts.Variables["User::EmailMessage"].Value;
            }
        }

        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            SaveEmailMessage();
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        public object AcquireConnection(object txn)
        {
            return Dts.Connections[this.JobExecutionLogConnectionName].AcquireConnection(txn);
            //return ((ConnectionManager)Dts.Connections[this.JobExecutionLogConnectionName]).AcquireConnection(txn);
        }

        private void SaveEmailMessage()
        {
 
            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                using (IDbCommand cmd = con.CreateCommand())
                {
                    cmd.CommandText = "INSERT INTO Logs.job_execution_emails(packagename, emailto, emailcc, servername, emailmessage)VALUES (@packagename,@emailto,@emailcc,@servername,@emailmessage)";
                    cmd.CommandType = CommandType.Text;
                    //@packagename,@emailto,@emailcc,@servername,@emailmessage
                    IDbDataParameter p = cmd.CreateParameter();
                    p.ParameterName = "@packagename";
                    p.DbType = DbType.String;
                    p.Value = this.PackageName;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@emailto";
                    p.DbType = DbType.String;
                    p.Value = this.JobExecutionEmailTo;
                    cmd.Parameters.Add(p);
                   
                    p = cmd.CreateParameter();
                    p.ParameterName = "@emailcc";
                    p.DbType = DbType.String;
                    p.Value = this.JobExecutionEmailCC;
                    cmd.Parameters.Add(p);

                    p = cmd.CreateParameter();
                    p.ParameterName = "@servername";
                    p.DbType = DbType.String;
                    p.Value = this.MachineName;
                    cmd.Parameters.Add(p);


                    p = cmd.CreateParameter();
                    p.ParameterName = "@emailmessage";
                    p.DbType = DbType.String;
                    p.Value = this.EmailMessage ;
                    cmd.Parameters.Add(p);
                    cmd.ExecuteNonQuery();
                }
            }
           
        }
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_326a051c26b14316a1196873b00bda90</msb:CodeName>
		<msb:DisplayName>ST_326a051c26b14316a1196873b00bda90</msb:DisplayName>
		<msb:ProjectId>{D7E72FA7-E161-4819-885F-D4768844345A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_459090dbec27492cb3f42ce83cf4a8d2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_326a051c26b14316a1196873b00bda90")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_326a051c26b14316a1196873b00bda90")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_326a051c26b14316a1196873b00bda90.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_326a051c26b14316a1196873b00bda90.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_326a051c26b14316a1196873b00bda90.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_326a051c26b14316a1196873b00bda90.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_326a051c26b14316a1196873b00bda90.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_326a051c26b14316a1196873b00bda90.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO65KlcAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAADjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ2AABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NgAAAAAAAEgAAAACAAUAACQAALQSAAABAAAAAAAAAEgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8X
AAAKcrsAAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKcu8AAHBvGAAACm8ZAAAKdB4AAAEq
ggIoFgAACm8XAAAKciMBAHBvGAAACm8ZAAAKdB4AAAEqggIoFgAACm8XAAAKcksBAHBvGAAACm8Z
AAAKdB4AAAEqggIoFgAACm8XAAAKcnMBAHBvGAAACm8ZAAAKdB4AAAEqTgIoEAAABgIoFgAAChZv
GgAACip2AigWAAAKbxsAAAoCKAgAAAZvHAAACgNvHQAACioAGzACAEUBAAACAAARAhQoDwAABnQh
AAABCgZvHgAACgsHcpkBAHBvHwAACgcXbyAAAAoHbyEAAAoMCHLaAgBwbyIAAAoIHxBvIwAACggC
KAwAAAZvJAAACgdvJQAACghvJgAACiYHbyEAAAoMCHL0AgBwbyIAAAoIHxBvIwAACggCKAkAAAZv
JAAACgdvJQAACghvJgAACiYHbyEAAAoMCHIGAwBwbyIAAAoIHxBvIwAACggCKAoAAAZvJAAACgdv
JQAACghvJgAACiYHbyEAAAoMCHIYAwBwbyIAAAoIHxBvIwAACggCKAsAAAZvJAAACgdvJQAACghv
JgAACiYHbyEAAAoMCHIwAwBwbyIAAAoIHxBvIwAACggCKA0AAAZvJAAACgdvJQAACghvJgAACiYH
bycAAAom3goHLAYHbygAAArc3goGLAYGbygAAArcKgAAAEE0AAACAAAAFAAAABoBAAAuAQAACgAA
AAAAAAACAAAADQAAAC0BAAA6AQAACgAAAAAAAAAeAigpAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAALAUAACN+AACYBQAAFAgAACNTdHJpbmdz
AAAAAKwNAABMAwAAI1VTAPgQAAAQAAAAI0dVSUQAAAAIEQAArAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6JTMAFgAAAQAAACkAAAAFAAAABgAAABEAAAACAAAAKQAAAAIAAAAPAAAAAgAAAAMA
AAAJAAAACgAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZ
AboABgBvAV4BBgCgAYsBBgBsA1IDBgCXA4UDBgCuA4UDBgDLA4UDBgDqA4UDBgADBIUDBgAcBIUD
BgA3BIUDBgBSBIUDBgBrBIUDBgCkBIQEBgDEBIQEBgD1BOIEBgASBboABgAXBboABgA7BYUDCgBn
BVEFCgCABVEFBgCVBYQEDgC3BRQBDgDZBRQBEgAyBhIGEgBKBhIGBgBmBroAEgB8BhIGEgCYBhIG
FgC2BqoGFgDEBqoGFgDtBqoGFgAJB6oGFgAqB6oGFgBLB6oGFgBnB6oGBgCiB48HBgC8B7oAAAAA
AAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAA
owAAABEABAASABEAfwETABEArAEXABEA9gE5AAYGMANUAFaAOANXAFaAQANXAFAgAAAAAIMYvAEb
AAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0A
AgCzIAAAAACGGLwBGwACAKcgAAAAAJEYsAWWAAIAuyAAAAAAhggaAkcAAgDcIAAAAACGCDwCRwAC
AP0gAAAAAIYIVAJHAAIAHiEAAAAAhghsAkcAAgA/IQAAAACGCHwCRwACAGAhAAAAAIYIjAJHAAIA
gSEAAAAAhgCdAhsAAgCVIQAAAACGAKICSwACALQhAAAAAIEAtAIbAAMAPCMAAAAAhhi8ARsAAwAA
AAEASAMAAAEATgM5ALwBZQBBALwBZQBJALwBZQBRALwBZQBZALwBZQBhALwBZQBpALwBZQBxALwB
ZQB5ALwBZQCBALwBZQCJALwBagCRALwBGwCZALwBGwAJALwBGwChACkFbwChAEQFdgApALwBewC5
ALwBhwDJALwBGwARALwBGwDRALwBGwAZAOsFmgDZADwGnwDhAFMGpADpAFwGqgDZAG0GagDZAIgG
rgD5AFMGswABAaICSwAJAc8GugARAd0GZQARAfkGwAARARoHxwApATkHZQApAVIHzQApAV0H1AAR
AYAH2QBBAagH3wARAawH5ABJAcgHGwAZALwBGwAIABQAWwAIABgAYAApAJMAjQAuABsAZQEuACMA
ZQEuAGMAiwEuAAsA9AAuABMAPAEuADMAPAEuACsAZQEuADsAawEuAEMAZQEuAFsAggFDAGsAYABJ
AJMAjQBhAJsAYACDAKsAYACCAOgAAgABAAMAAwAEAAQAAABvAS8AAADuATQAAAASAkIAAADFAlAA
AADjAlAAAAD3AlAAAAALA1AAAAAXA1AAAAAjA1AAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcAAgAI
AAkAAgAJAAsAAgAKAA0AAgALAA8AAgAMABEAAgANABMABIAAAAEAAABQFweVAAAAAAAAfwAAAAQA
AAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAA
AAsAAAAAAAAAAAAAAAoA8wUAAAAABAAAAAAAAAAAAAAAAQCqBgAAAAAAAAAAAQAAANAHAAAFAAQA
AAAAAAA8TW9kdWxlPgBTVF8zMjZhMDUxYzI2YjE0MzE2YTExOTY4NzNiMDBiZGE5MC5kbGwAUmVz
b3VyY2VzAFNUXzMyNmEwNTFjMjZiMTQzMTZhMTE5Njg3M2IwMGJkYTkwLlByb3BlcnRpZXMAU2V0
dGluZ3MAU2NyaXB0TWFpbgBTVF8zMjZhMDUxYzI2YjE0MzE2YTExOTY4NzNiMDBiZGE5MABTY3Jp
cHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABnZXRfSm9iRXhlY3V0aW9uTG9nQ29ubmVjdGlv
bk5hbWUAZ2V0X0pvYkV4ZWN1dGlvbkVtYWlsVG8AZ2V0X0pvYkV4ZWN1dGlvbkVtYWlsQ0MAZ2V0
X01hY2hpbmVOYW1lAGdldF9QYWNrYWdlTmFtZQBnZXRfRW1haWxNZXNzYWdlAE1haW4AQWNxdWly
ZUNvbm5lY3Rpb24AU2F2ZUVtYWlsTWVzc2FnZQBKb2JFeGVjdXRpb25Mb2dDb25uZWN0aW9uTmFt
ZQBKb2JFeGVjdXRpb25FbWFpbFRvAEpvYkV4ZWN1dGlvbkVtYWlsQ0MATWFjaGluZU5hbWUAUGFj
a2FnZU5hbWUARW1haWxNZXNzYWdlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAHR4bgBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0u
UmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2Vt
Ymx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
U3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFi
bGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFN0cmluZwBzZXRf
VGFza1Jlc3VsdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIA
U3lzdGVtLkRhdGEASURiQ29ubmVjdGlvbgBJRGJDb21tYW5kAENyZWF0ZUNvbW1hbmQAc2V0X0Nv
bW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBJRGJEYXRhUGFyYW1ldGVyAENy
ZWF0ZVBhcmFtZXRlcgBJRGF0YVBhcmFtZXRlcgBzZXRfUGFyYW1ldGVyTmFtZQBEYlR5cGUAc2V0
X0RiVHlwZQBzZXRfVmFsdWUASURhdGFQYXJhbWV0ZXJDb2xsZWN0aW9uAGdldF9QYXJhbWV0ZXJz
AFN5c3RlbS5Db2xsZWN0aW9ucwBJTGlzdABBZGQARXhlY3V0ZU5vblF1ZXJ5AElEaXNwb3NhYmxl
AERpc3Bvc2UAU1RfMzI2YTA1MWMyNmIxNDMxNmExMTk2ODczYjAwYmRhOTAuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADMAMgA2AGEAMAA1ADEAYwAyADYAYgAxADQAMwAx
ADYAYQAxADEAOQA2ADgANwAzAGIAMAAwAGIAZABhADkAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAR1UAcwBlAHIAOgA6AEoAbwBiAEUAeABlAGMAdQB0AGkAbwBu
AEwAbwBnAEMAbwBuAG4AZQBjAHQAaQBvAG4ATgBhAG0AZQAAM1UAcwBlAHIAOgA6AEoAbwBiAEUA
eABlAGMAdQB0AGkAbwBuAEUAbQBhAGkAbABUAG8AADNVAHMAZQByADoAOgBKAG8AYgBFAHgAZQBj
AHUAdABpAG8AbgBFAG0AYQBpAGwAQwBDAAAnUwB5AHMAdABlAG0AOgA6AE0AYQBjAGgAaQBuAGUA
TgBhAG0AZQAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACVVAHMAZQBy
ADoAOgBFAG0AYQBpAGwATQBlAHMAcwBhAGcAZQAAgT9JAE4AUwBFAFIAVAAgAEkATgBUAE8AIABM
AG8AZwBzAC4AagBvAGIAXwBlAHgAZQBjAHUAdABpAG8AbgBfAGUAbQBhAGkAbABzACgAcABhAGMA
awBhAGcAZQBuAGEAbQBlACwAIABlAG0AYQBpAGwAdABvACwAIABlAG0AYQBpAGwAYwBjACwAIABz
AGUAcgB2AGUAcgBuAGEAbQBlACwAIABlAG0AYQBpAGwAbQBlAHMAcwBhAGcAZQApAFYAQQBMAFUA
RQBTACAAKABAAHAAYQBjAGsAYQBnAGUAbgBhAG0AZQAsAEAAZQBtAGEAaQBsAHQAbwAsAEAAZQBt
AGEAaQBsAGMAYwAsAEAAcwBlAHIAdgBlAHIAbgBhAG0AZQAsAEAAZQBtAGEAaQBsAG0AZQBzAHMA
YQBnAGUAKQAAGUAAcABhAGMAawBhAGcAZQBuAGEAbQBlAAARQABlAG0AYQBpAGwAdABvAAARQABl
AG0AYQBpAGwAYwBjAAAXQABzAGUAcgB2AGUAcgBuAGEAbQBlAAAbQABlAG0AYQBpAGwAbQBlAHMA
cwBhAGcAZQAA30/Fc8Ghgk2A2akdeLRylgAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEE
AAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAyAADgQgARwcAygADgIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAQgABJ9BiABEoCBHAUgABKAiQYgAQERgI0FIAAS
gJEGIAEBEYCZBCABARwFIAASgJ0EIAEIHAMgAAgLBwMSgIUSgIkSgJFHAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQo
AQAjU1RfMzI2YTA1MWMyNmIxNDMxNmExMTk2ODczYjAwYmRhOTAAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAA3DYA
AAAAAAAAAAAA/jYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA2AAAAAAAAAAAAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAeVUBcAAAEAB5VQFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAz
ADIANgBhADAANQAxAGMAMgA2AGIAMQA0ADMAMQA2AGEAMQAxADkANgA4ADcAMwBiADAAMABiAGQA
YQA5ADAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADYAOAAu
ADMAOAAxADUAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAzADIA
NgBhADAANQAxAGMAMgA2AGIAMQA0ADMAMQA2AGEAMQAxADkANgA4ADcAMwBiADAAMABiAGQAYQA5
ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwAzADIANgBhADAANQAxAGMAMgA2AGIAMQA0ADMAMQA2AGEAMQAxADkA
NgA4ADcAMwBiADAAMABiAGQAYQA5ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AMwAyADYAYQAwADUAMQBjADIANgBiADEANAAzADEANgBhADEAMQA5ADYA
OAA3ADMAYgAwADAAYgBkAGEAOQAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA1ADkANgA4AC4AMwA4ADEANQAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADkANgA4AC4AMwA4ADEANQAxAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Mail Task"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{2825AD34-8D5D-407C-9713-96C855FA9EF6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Mail Task"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="CCLine">@[User::JobExecutionEmailCC]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[System::MachineName] + "@DaikinComfort.com"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Subject">@[System::MachineName] + ": " +  @[System::PackageName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::JobExecutionEmailTo]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{92C249E8-53CC-4CBE-93F7-ECB9B82A35F7}"
          SendMailTask:From="VDESK12@DaikinComfort.com"
          SendMailTask:To="jessmon.augustine@goodmanmfg.com"
          SendMailTask:CC="jessmon.augustine@goodmanmfg.com"
          SendMailTask:Subject="VDESK12: AS400OrderStatusToDaikin"
          SendMailTask:MessageSourceType="Variable"
          SendMailTask:MessageSource="User::EmailMessage" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Last Run date"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{D0225635-0D66-4341-8765-8C3886029A26}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Last Run date"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_579cea9ec2f5482880687c24c8bc5986"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::JobExecutionLogConnectionName,System::PackageID,System::PackageName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4170ee8bb6fd46038755db37da970c84.Properties.Settings.get_Default():ST_4170ee8bb6fd46038755db37da970c84.Properties.Sett" +
    "ings")]

namespace ST_4170ee8bb6fd46038755db37da970c84.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.Common;
#endregion

namespace ST_4170ee8bb6fd46038755db37da970c84
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region Properties
        
        public string JobExecutionLogConnectionName
        {
            get
            {
                return (string)Dts.Variables["User::JobExecutionLogConnectionName"].Value;
            }
        }

        #endregion
        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            this.UpdateRunDate();

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

 

        public object AcquireConnection(object txn)
        {
            return ((ConnectionManager)Dts.Connections[this.JobExecutionLogConnectionName]).AcquireConnection(txn);
        }

        private void UpdateRunDate()
        {
            using (IDbConnection con = (IDbConnection)AcquireConnection(null))
            {
                if (con.State != ConnectionState.Open)
                {
                    con.Open();
                }

                using (DbCommand cmd = con.CreateCommand() as DbCommand)
                {
    //@iReqPackageName			NVARCHAR(255),
    //@iReqPackageID				UNIQUEIDENTIFIER,
    //@iReqLastRunDate			DATETIME,
    //@iReqLastPickupDate			DATETIME
                    cmd.CommandText = "[Logs].[GMUpsertJobRunSp]";
                    cmd.CommandType = CommandType.StoredProcedure;

                    DbParameter parm = cmd.CreateParameter();
                    parm.ParameterName = "@iReqPackageName";
                    parm.Value = Dts.Variables["PackageName"].Value;
                    parm.Direction = ParameterDirection.Input;
                    parm.DbType = DbType.String;
                    parm.Size = 255;
                    cmd.Parameters.Add(parm);

                    parm = cmd.CreateParameter();
                    parm.ParameterName = "@iReqPackageID";
                    parm.Value = new Guid(Dts.Variables["PackageID"].Value.ToString());
                    parm.Direction = ParameterDirection.Input;
                    parm.DbType = DbType.Guid;
                    cmd.Parameters.Add(parm);

                    parm = cmd.CreateParameter();
                    parm.ParameterName = "@iReqLastRunDate";
                    parm.Value = DateTime.Now;
                    parm.Direction = ParameterDirection.Input;
                    parm.DbType = DbType.DateTime;
                    cmd.Parameters.Add(parm);

                    parm = cmd.CreateParameter();
                    parm.ParameterName = "@iReqLastPickupDate";
                    parm.Value = DateTime.Now;
                    parm.Direction = ParameterDirection.Input;
                    parm.DbType = DbType.DateTime;
                    cmd.Parameters.Add(parm);                   
                    cmd.ExecuteNonQuery();                   
                    
                }
            }
        }
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4170ee8bb6fd46038755db37da970c84.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4170ee8bb6fd46038755db37da970c84.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4170ee8bb6fd46038755db37da970c84.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4170ee8bb6fd46038755db37da970c84.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4170ee8bb6fd46038755db37da970c84.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4170ee8bb6fd46038755db37da970c84</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4170ee8bb6fd46038755db37da970c84</msb:DisplayName>
		<msb:ProjectId>{867590E8-6DF8-4D5D-AACC-93A484730629}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_579cea9ec2f5482880687c24c8bc5986.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4170ee8bb6fd46038755db37da970c84")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4170ee8bb6fd46038755db37da970c84")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_579cea9ec2f5482880687c24c8bc5986.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{e06cb983-58a3-4202-b74d-d339d56f9dee}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4170ee8bb6fd46038755db37da970c84</RootNamespace><AssemblyName>ST_579cea9ec2f5482880687c24c8bc5986</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_4170ee8bb6fd46038755db37da970c84.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAExG/FYAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAbjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACA0AABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
NAAAAAAAAEgAAAACAAUAoCMAAIAQAAABAAAAAAAAAOgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqggIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4AAAEqTgIoCwAABgIo
FgAAChZvGgAACip2AigWAAAKbxsAAAoCKAgAAAZvHAAACgNvHQAACioAABswAwCKAQAAAgAAEQIU
KAoAAAZ0IQAAAQoGbx4AAAoXLgYGbx8AAAoGbyAAAAp1JAAAAQsHcrsAAHBvIQAACgcabyIAAAoH
byMAAAoMCHLvAABwbyQAAAoIAigWAAAKbxcAAApyEQEAcG8YAAAKbxkAAApvJQAACggXbyYAAAoI
HxBvJwAACggg/wAAAG8oAAAKB28pAAAKCG8qAAAKJgdvIwAACgwIcikBAHBvJAAACggCKBYAAApv
FwAACnJHAQBwbxgAAApvGQAACm8rAAAKcywAAAqMKgAAAW8lAAAKCBdvJgAACggfCW8nAAAKB28p
AAAKCG8qAAAKJgdvIwAACgwIclsBAHBvJAAACggoLQAACowrAAABbyUAAAoIF28mAAAKCBxvJwAA
CgdvKQAACghvKgAACiYHbyMAAAoMCHJ9AQBwbyQAAAoIKC0AAAqMKwAAAW8lAAAKCBdvJgAACggc
bycAAAoHbykAAAoIbyoAAAomB28uAAAKJt4KBywGB28vAAAK3N4KBiwGBm8vAAAK3CoAAEE0AAAC
AAAAKAAAAEsBAABzAQAACgAAAAAAAAACAAAADQAAAHIBAAB/AQAACgAAAAAAAAAeAigwAAAKKgAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA5AQAACN+
AABQBQAAuAcAACNTdHJpbmdzAAAAAAgNAACoAQAAI1VTALAOAAAQAAAAI0dVSUQAAADADgAAwAEA
ACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACwAAAAFAAAABgAAAAwAAAACAAAA
MAAAAAIAAAAPAAAAAgAAAAMAAAAEAAAABQAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDB
ALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgC7AqECBgDmAtQCBgD9AtQCBgAaA9QC
BgA5A9QCBgBSA9QCBgBrA9QCBgCGA9QCBgChA9QCBgC6A9QCBgDzA9MDBgATBNMDBgBEBDEEBgBh
BLoABgBmBLoABgCKBNQCCgC2BKAECgDPBKAEBgDkBNMDDgAGBRQBDgAoBRQBEgCBBWEFEgCZBWEF
BgC1BboAEgDLBWEFEgDnBWEFFgAFBvkFFgATBvkFFgAyBvkFFgBeBksGFgB4BvkFFgCUBksGFgDM
BvkFFgDtBvkFFgAIB0sGBgA6B7oABgA/B7oABgBgB7oAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUA
AQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAANABEAfwETABEArAEX
ABEA9gE5AAYGfwJUAFaAhwJXAFaAjwJXAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAA
AACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAA
AJEY/wSWAAIAuyAAAAAAhggaAkcAAgDcIAAAAACGADwCGwACAPAgAAAAAIYAQQJLAAIAECEAAAAA
gQBTAhsAAwDcIgAAAACGGLwBGwADAAAAAQCXAgAAAQCdAjkAvAFlAEEAvAFlAEkAvAFlAFEAvAFl
AFkAvAFlAGEAvAFlAGkAvAFlAHEAvAFlAHkAvAFlAIEAvAFlAIkAvAFqAJEAvAEbAJkAvAEbAAkA
vAEbAKEAeARvAKEAkwR2ACkAvAF7ALkAvAGHAMkAvAEbABEAvAEbANEAvAEbABkAOgWaANkAiwWf
AOEAogWkAOkAqwWqANkAvAVqANkA1wWuAPkAogWzAAEBQQJLAAkBIwa6AAkBLQYbAAkBPQbAACEB
aAZlACEBhAbGACEBoAbNADEBsAZlADEBwgbTADEB3wbYADEB9AbfADEB/wZqACEBHgfmAEkBLQfs
AAkAMQdHAFEBvAFlAFkBSAfxACEBUAf3AGEBbAcbABkAvAEbAAgAFABbAAgAGABgACkAkwCNAC4A
GwB4AS4AIwB4AS4AYwCeAS4ACwAHAS4AEwBPAS4AMwBPAS4AKwB4AS4AOwB+AS4AQwB4AS4AWwCV
AUMAawBgAEkAkwCNAGEAmwBgAIMAqwBgAIIA+wACAAEAAwADAAQABAAAAG8BLwAAAO4BNAAAABIC
QgAAAGECUAACAAIAAwABAAQABQACAAMABQACAAUABwACAAgACQAEgAAAAQAAAC0Xdm0AAAAAAAB/
AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA
9QAAAAAACwAAAAAAAAAAAAAACgBCBQAAAAAEAAAAAAAAAAAAAAABAPkFAAAAAAAAAAABAAAAdAcA
AAUABAAAAAA8TW9kdWxlPgBTVF80MTcwZWU4YmI2ZmQ0NjAzODc1NWRiMzdkYTk3MGM4NC5kbGwA
UmVzb3VyY2VzAFNUXzQxNzBlZThiYjZmZDQ2MDM4NzU1ZGIzN2RhOTcwYzg0LlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF80MTcwZWU4YmI2ZmQ0NjAzODc1NWRiMzdkYTk3MGM4NABT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABnZXRfSm9iRXhlY3V0aW9uTG9nQ29ubmVj
dGlvbk5hbWUATWFpbgBBY3F1aXJlQ29ubmVjdGlvbgBVcGRhdGVSdW5EYXRlAEpvYkV4ZWN1dGlv
bkxvZ0Nvbm5lY3Rpb25OYW1lAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAHR4bgBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVm
bGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5
VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lz
dGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVz
AGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFN0cmluZwBzZXRfVGFz
a1Jlc3VsdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIAU3lz
dGVtLkRhdGEASURiQ29ubmVjdGlvbgBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9wZW4ASURi
Q29tbWFuZABDcmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbW1hbmQAc2V0X0Nv
bW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBEYlBhcmFtZXRlcgBDcmVhdGVQ
YXJhbWV0ZXIAc2V0X1BhcmFtZXRlck5hbWUAc2V0X1ZhbHVlAFBhcmFtZXRlckRpcmVjdGlvbgBz
ZXRfRGlyZWN0aW9uAERiVHlwZQBzZXRfRGJUeXBlAHNldF9TaXplAERiUGFyYW1ldGVyQ29sbGVj
dGlvbgBnZXRfUGFyYW1ldGVycwBBZGQAVG9TdHJpbmcAR3VpZABEYXRlVGltZQBnZXRfTm93AEV4
ZWN1dGVOb25RdWVyeQBJRGlzcG9zYWJsZQBEaXNwb3NlAFNUXzQxNzBlZThiYjZmZDQ2MDM4NzU1
ZGIzN2RhOTcwYzg0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA0ADEA
NwAwAGUAZQA4AGIAYgA2AGYAZAA0ADYAMAAzADgANwA1ADUAZABiADMANwBkAGEAOQA3ADAAYwA4
ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEdVAHMAZQByADoA
OgBKAG8AYgBFAHgAZQBjAHUAdABpAG8AbgBMAG8AZwBDAG8AbgBuAGUAYwB0AGkAbwBuAE4AYQBt
AGUAADNbAEwAbwBnAHMAXQAuAFsARwBNAFUAcABzAGUAcgB0AEoAbwBiAFIAdQBuAFMAcABdAAAh
QABpAFIAZQBxAFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAF1AAYQBjAGsAYQBnAGUATgBhAG0AZQAA
HUAAaQBSAGUAcQBQAGEAYwBrAGEAZwBlAEkARAAAE1AAYQBjAGsAYQBnAGUASQBEAAAhQABpAFIA
ZQBxAEwAYQBzAHQAUgB1AG4ARABhAHQAZQAAJ0AAaQBSAGUAcQBMAGEAcwB0AFAAaQBjAGsAdQBw
AEQAYQB0AGUAAAAAABfuI/MxqrtDtB9ESSvmBLMACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkD
IAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAMgAA4EIAEcHAMoAA4C
BggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEI
AQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwEIAASfQYgARKAgRwFIAARgIkFIAASgI0G
IAEBEYCVBSAAEoCZBCABARwGIAEBEYCdBiABARGAoQUgABKApQQgAQgcBQAAEYCtAyAACAsHAxKA
hRKAkRKAmUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF80MTcwZWU4YmI2ZmQ0NjAzODc1NWRiMzdkYTk3
MGM4NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBAAAASDQAAAAAAAAAAAAAXjQAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAFA0AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQB2bS0XAAABAHZtLRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
NAAxADcAMABlAGUAOABiAGIANgBmAGQANAA2ADAAMwA4ADcANQA1AGQAYgAzADcAZABhADkANwAw
AGMAOAA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAzADMA
LgAyADgAMAAyADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANAAx
ADcAMABlAGUAOABiAGIANgBmAGQANAA2ADAAMwA4ADcANQA1AGQAYgAzADcAZABhADkANwAwAGMA
OAA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8ANAAxADcAMABlAGUAOABiAGIANgBmAGQANAA2ADAAMwA4ADcANQA1
AGQAYgAzADcAZABhADkANwAwAGMAOAA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADQAMQA3ADAAZQBlADgAYgBiADYAZgBkADQANgAwADMAOAA3ADUANQBk
AGIAMwA3AGQAYQA5ADcAMABjADgANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA5ADMAMwAuADIAOAAwADIAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADMAMwAuADIAOAAwADIAMgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{44419BC5-72D5-48ED-99A8-88CAD103098B}"
      DTS:From="Package\Log package start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Last Pickup Date" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A7C5CABE-832B-4B06-BCAA-E69E05CD10E3}"
      DTS:From="Package\Load Last Pickup Date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Reading Order#, Date &amp; Comments from Mapics" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{8E167EC6-77C1-411B-8B9F-6C062E3EF4AB}"
      DTS:From="Package\Reading Order#, Date &amp; Comments from Mapics"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Reading Order Invoice Info from Mapics" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{3D3A56CE-925D-4347-855B-C0D8A6EE6BEE}"
      DTS:From="Package\Update Last Run date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Log package end" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{777C413B-CC8E-4896-ADB5-1A47D899CD32}"
      DTS:From="Package\Log package end"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Send Mail Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{E76A532C-6AEF-4CAD-A2A9-8E3DCD94B311}"
      DTS:From="Package\Send Mail Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Save Email Messge" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{7D052FF7-2F78-458F-83A3-81E7C7C31757}"
      DTS:From="Package\Reading Order Invoice Info from Mapics"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Update Last Run date" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="185,42"
          Id="Package\Load Last Pickup Date"
          TopLeft="419,171.452380952381" />
        <NodeLayout
          Size="160,42"
          Id="Package\Log package end"
          TopLeft="454.345238095238,1125.77380952381" />
        <NodeLayout
          Size="165,42"
          Id="Package\Log package start"
          TopLeft="434.619047619047,56.6666666666667" />
        <NodeLayout
          Size="203,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update"
          TopLeft="75,100" />
        <NodeLayout
          Size="264,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics End"
          TopLeft="28.6666666666667,198.222222222222" />
        <NodeLayout
          Size="268,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Update from Mapics Start"
          TopLeft="30.6666666666665,22" />
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics.PrecedenceConstraints[Constraint]"
          TopLeft="164.666666666667,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.8333333333335,36"
              Start="0,0"
              End="11.8333333333335,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="4,18" />
                  <mssgle:LineSegment
                    End="7.83333333333348,18" />
                  <mssgle:CubicBezierSegment
                    Point1="7.83333333333348,18"
                    Point2="11.8333333333335,18"
                    Point3="11.8333333333335,22" />
                  <mssgle:LineSegment
                    End="11.8333333333335,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics.PrecedenceConstraints[Constraint 1]"
          TopLeft="176.5,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15.8333333333333,56.222222222222"
              Start="0,0"
              End="-15.8333333333333,48.722222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.111111111111"
                    Point2="0,28.111111111111"
                    Point3="-4,28.111111111111" />
                  <mssgle:LineSegment
                    End="-11.8333333333333,28.111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="-11.8333333333333,28.111111111111"
                    Point2="-15.8333333333333,28.111111111111"
                    Point3="-15.8333333333333,32.111111111111" />
                  <mssgle:LineSegment
                    End="-15.8333333333333,48.722222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="391,298"
          Size="391,341"
          Id="Package\Reading Order Invoice Info from Mapics"
          TopLeft="613.666666666667,379.333333333334" />
        <NodeLayout
          Size="191,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error"
          TopLeft="122.857142857143,190.571428571429" />
        <NodeLayout
          Size="237,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update"
          TopLeft="75,100" />
        <NodeLayout
          Size="330,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments  Update from Mapics End"
          TopLeft="33.5238095238096,266.79365079365" />
        <NodeLayout
          Size="305,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order#, Date &amp; Comments Update from Mapics"
          TopLeft="30.6666666666665,22" />
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint]"
          TopLeft="183.166666666667,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.3333333333335,36"
              Start="0,0"
              End="10.3333333333335,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="4,18" />
                  <mssgle:LineSegment
                    End="6.33333333333348,18" />
                  <mssgle:CubicBezierSegment
                    Point1="6.33333333333348,18"
                    Point2="10.3333333333335,18"
                    Point3="10.3333333333335,22" />
                  <mssgle:LineSegment
                    End="10.3333333333335,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint 1]"
          TopLeft="193.5,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.8571428571429,48.5714285714286"
              Start="0,0"
              End="24.8571428571429,41.0714285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2857142857143"
                    Point2="0,24.2857142857143"
                    Point3="4,24.2857142857143" />
                  <mssgle:LineSegment
                    End="20.8571428571429,24.2857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8571428571429,24.2857142857143"
                    Point2="24.8571428571429,24.2857142857143"
                    Point3="24.8571428571429,28.2857142857143" />
                  <mssgle:LineSegment
                    End="24.8571428571429,41.0714285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics.PrecedenceConstraints[Constraint 2]"
          TopLeft="218.357142857143,232.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19.8333333333333,34.2222222222218"
              Start="0,0"
              End="-19.8333333333333,26.7222222222218">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1111111111109" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1111111111109"
                    Point2="0,17.1111111111109"
                    Point3="-4,17.1111111111109" />
                  <mssgle:LineSegment
                    End="-15.8333333333333,17.1111111111109" />
                  <mssgle:CubicBezierSegment
                    Point1="-15.8333333333333,17.1111111111109"
                    Point2="-19.8333333333333,17.1111111111109"
                    Point3="-19.8333333333333,21.1111111111109" />
                  <mssgle:LineSegment
                    End="-19.8333333333333,26.7222222222218" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="391,386"
          Size="391,429"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics"
          TopLeft="51.0952380952381,337.190476190477" />
        <NodeLayout
          Size="170,42"
          Id="Package\Save Email Messge"
          TopLeft="332.095238095238,1321.80952380952" />
        <NodeLayout
          Size="152,42"
          Id="Package\Send Mail Task"
          TopLeft="461.809523809524,1227.80952380952" />
        <NodeLayout
          Size="183,42"
          Id="Package\Update Last Run date"
          TopLeft="433.809523809524,1039.80952380952" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="514.309523809524,98.6666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.785714285714"
              Start="0,0"
              End="0,65.285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="511.5,213.452380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-264.904761904762,123.738095238096"
              Start="0,0"
              End="-264.904761904762,116.238095238096">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.8690476190482" />
                  <mssgle:CubicBezierSegment
                    Point1="0,57.8690476190482"
                    Point2="0,61.8690476190482"
                    Point3="-4,61.8690476190482" />
                  <mssgle:LineSegment
                    End="-260.904761904762,61.8690476190482" />
                  <mssgle:CubicBezierSegment
                    Point1="-260.904761904762,61.8690476190482"
                    Point2="-264.904761904762,61.8690476190482"
                    Point3="-264.904761904762,65.8690476190482" />
                  <mssgle:LineSegment
                    End="-264.904761904762,116.238095238096" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="442.095238095238,550.761904761906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="171.571428571429,0"
              Start="0,0"
              End="164.071428571429,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="164.071428571429,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="525.309523809524,1081.80952380952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.03571428571399,43.9642857142899"
              Start="0,0"
              End="9.03571428571399,36.4642857142899">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.9821428571449" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.9821428571449"
                    Point2="0,21.9821428571449"
                    Point3="4,21.9821428571449" />
                  <mssgle:LineSegment
                    End="5.03571428571399,21.9821428571449" />
                  <mssgle:CubicBezierSegment
                    Point1="5.03571428571399,21.9821428571449"
                    Point2="9.03571428571399,21.9821428571449"
                    Point3="9.03571428571399,25.9821428571449" />
                  <mssgle:LineSegment
                    End="9.03571428571399,36.4642857142899" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="536.077380952381,1167.77380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0357142857101"
              Start="0,0"
              End="0,52.5357142857101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5357142857101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="537.809523809524,1269.80952380952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-120.714285714286,52"
              Start="0,0"
              End="-120.714285714286,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="-4,26" />
                  <mssgle:LineSegment
                    End="-116.714285714286,26" />
                  <mssgle:CubicBezierSegment
                    Point1="-116.714285714286,26"
                    Point2="-120.714285714286,26"
                    Point3="-120.714285714286,30" />
                  <mssgle:LineSegment
                    End="-120.714285714286,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="809.166666666667,720.333333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-283.857142857143,319.476190476186"
              Start="0,0"
              End="-283.857142857143,311.976190476186">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,155.738095238093" />
                  <mssgle:CubicBezierSegment
                    Point1="0,155.738095238093"
                    Point2="0,159.738095238093"
                    Point3="-4,159.738095238093" />
                  <mssgle:LineSegment
                    End="-279.857142857143,159.738095238093" />
                  <mssgle:CubicBezierSegment
                    Point1="-279.857142857143,159.738095238093"
                    Point2="-283.857142857143,159.738095238093"
                    Point3="-283.857142857143,163.738095238093" />
                  <mssgle:LineSegment
                    End="-283.857142857143,311.976190476186" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Conditional Split"
          TopLeft="276,750" />
        <NodeLayout
          Size="213,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Order using API Call"
          TopLeft="210,664" />
        <NodeLayout
          Size="223,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice"
          TopLeft="197,259" />
        <NodeLayout
          Size="165,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Convert to Invoice Date"
          TopLeft="318,415" />
        <NodeLayout
          Size="189,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400"
          TopLeft="149,51" />
        <NodeLayout
          Size="161,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Columns Derived"
          TopLeft="165,147" />
        <NodeLayout
          Size="118,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Success"
          TopLeft="116,827" />
        <NodeLayout
          Size="243,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Update Invoice# and Invoice Date"
          TopLeft="141,579" />
        <NodeLayout
          Size="137,42"
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\API Call Fail"
          TopLeft="382,845" />
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[OLE DB Command Output]"
          TopLeft="262.5,621">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54,43"
              Start="0,0"
              End="54,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5"
                    Point2="0,21.5"
                    Point3="4,21.5" />
                  <mssgle:LineSegment
                    End="50,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="50,21.5"
                    Point2="54,21.5"
                    Point3="54,25.5" />
                  <mssgle:LineSegment
                    End="54,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Lookup Match Output]"
          TopLeft="308.5,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,114"
              Start="0,0"
              End="92,106.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53"
                    Point2="0,57"
                    Point3="4,57" />
                  <mssgle:LineSegment
                    End="88,57" />
                  <mssgle:CubicBezierSegment
                    Point1="88,57"
                    Point2="92,57"
                    Point3="92,61" />
                  <mssgle:LineSegment
                    End="92,106.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.19138671875,62,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Derived Column Output]"
          TopLeft="245.5,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63,70"
              Start="0,0"
              End="63,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31"
                    Point2="0,35"
                    Point3="4,35" />
                  <mssgle:LineSegment
                    End="59,35" />
                  <mssgle:CubicBezierSegment
                    Point1="59,35"
                    Point2="63,35"
                    Point3="63,39" />
                  <mssgle:LineSegment
                    End="63,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[API Call Fail]"
          TopLeft="379.333333333333,792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.1666666666667,53"
              Start="0,0"
              End="71.1666666666667,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5208070617907" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5208070617907"
                    Point2="0,21.5208070617907"
                    Point3="4,21.5208070617907" />
                  <mssgle:LineSegment
                    End="67.1666666666667,21.5208070617907" />
                  <mssgle:CubicBezierSegment
                    Point1="67.1666666666667,21.5208070617907"
                    Point2="71.1666666666667,21.5208070617907"
                    Point3="71.1666666666667,25.5208070617907" />
                  <mssgle:LineSegment
                    End="71.1666666666667,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="8.71313802083335,26.5208070617907,53.740390625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Success]"
          TopLeft="354.5,792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-179.5,35"
              Start="0,0"
              End="-179.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="-4,17.5" />
                  <mssgle:LineSegment
                    End="-175.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-175.5,17.5"
                    Point2="-179.5,17.5"
                    Point3="-179.5,21.5" />
                  <mssgle:LineSegment
                    End="-179.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.7432421875,22.5,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Output 01]"
          TopLeft="316.5,706">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38,44"
              Start="0,0"
              End="38,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="4,22" />
                  <mssgle:LineSegment
                    End="34,22" />
                  <mssgle:CubicBezierSegment
                    Point1="34,22"
                    Point2="38,22"
                    Point3="38,26" />
                  <mssgle:LineSegment
                    End="38,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[Output 0]"
          TopLeft="400.5,457">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-138,122"
              Start="0,0"
              End="-138,114.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57" />
                  <mssgle:CubicBezierSegment
                    Point1="0,57"
                    Point2="0,61"
                    Point3="-4,61" />
                  <mssgle:LineSegment
                    End="-134,61" />
                  <mssgle:CubicBezierSegment
                    Point1="-134,61"
                    Point2="-138,61"
                    Point3="-138,65" />
                  <mssgle:LineSegment
                    End="-138,114.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update.Paths[OLE DB Source Output]"
          TopLeft="244.5,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\Daikin Orders pending Invoice">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order Invoice Info from Mapics\Order Invoice Info update\New Invoices in AS400">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Orders In Error Count"
          TopLeft="131,481" />
        <NodeLayout
          Size="192,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Update ERPStatus Error"
          TopLeft="136,364" />
        <NodeLayout
          Size="156,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Derived Column"
          TopLeft="220,175" />
        <NodeLayout
          Size="205,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup"
          TopLeft="154,256" />
        <NodeLayout
          Size="153,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders"
          TopLeft="213,83" />
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[Lookup Match Output]"
          TopLeft="256.5,298">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,66"
              Start="0,0"
              End="-24.5,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29"
                    Point2="0,33"
                    Point3="-4,33" />
                  <mssgle:LineSegment
                    End="-20.5,33" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,33"
                    Point2="-24.5,33"
                    Point3="-24.5,37" />
                  <mssgle:LineSegment
                    End="-24.5,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.44138671875,38,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[Derived Column Output]"
          TopLeft="298,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.5,39"
              Start="0,0"
              End="-41.5,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="-4,19.5" />
                  <mssgle:LineSegment
                    End="-37.5,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.5,19.5"
                    Point2="-41.5,19.5"
                    Point3="-41.5,23.5" />
                  <mssgle:LineSegment
                    End="-41.5,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[OLE DB Source Output]"
          TopLeft="289.5,125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,50"
              Start="0,0"
              End="8.5,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="4.5,25" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,25"
                    Point2="8.5,25"
                    Point3="8.5,29" />
                  <mssgle:LineSegment
                    End="8.5,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error.Paths[OLE DB Command Output]"
          TopLeft="232,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.5,75"
              Start="0,0"
              End="-9.5,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5"
                    Point2="0,37.5"
                    Point3="-4,37.5" />
                  <mssgle:LineSegment
                    End="-5.5,37.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.5,37.5"
                    Point2="-9.5,37.5"
                    Point3="-9.5,41.5" />
                  <mssgle:LineSegment
                    End="-9.5,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\AS400 Error Order Lookup">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Loading Orders in Error\Pending Orders">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="252,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Order# and Order Comment"
          TopLeft="186,528" />
        <NodeLayout
          Size="118,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Success"
          TopLeft="97,810" />
        <NodeLayout
          Size="156,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Derived Column"
          TopLeft="389,156" />
        <NodeLayout
          Size="181,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400"
          TopLeft="375,73" />
        <NodeLayout
          Size="209,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Load ERP Order Comments"
          TopLeft="202,434" />
        <NodeLayout
          Size="215,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Update Status using API Call"
          TopLeft="87,649" />
        <NodeLayout
          Size="190,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Failed to update Status"
          TopLeft="318,817" />
        <NodeLayout
          Size="195,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin"
          TopLeft="344,244" />
        <NodeLayout
          Size="152,42"
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\API Call Succss"
          TopLeft="206,735" />
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Success]"
          TopLeft="282,777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-126,33"
              Start="0,0"
              End="-126,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="-4,16.5" />
                  <mssgle:LineSegment
                    End="-122,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-122,16.5"
                    Point2="-126,16.5"
                    Point3="-126,20.5" />
                  <mssgle:LineSegment
                    End="-126,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-80.9932421875,21.5,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Output 01]"
          TopLeft="194.5,691">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.5,44"
              Start="0,0"
              End="87.5,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="4,22" />
                  <mssgle:LineSegment
                    End="83.5,22" />
                  <mssgle:CubicBezierSegment
                    Point1="83.5,22"
                    Point2="87.5,22"
                    Point3="87.5,26" />
                  <mssgle:LineSegment
                    End="87.5,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Output 0]"
          TopLeft="309.25,476">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[OLE DB Source Output]"
          TopLeft="466.25,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[OLE DB Command Output]"
          TopLeft="312,570">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.5,79"
              Start="0,0"
              End="-117.5,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.5"
                    Point2="0,39.5"
                    Point3="-4,39.5" />
                  <mssgle:LineSegment
                    End="-113.5,39.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.5,39.5"
                    Point2="-117.5,39.5"
                    Point3="-117.5,43.5" />
                  <mssgle:LineSegment
                    End="-117.5,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Lookup Match Output]"
          TopLeft="410.333333333333,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103.833333333333,148"
              Start="0,0"
              End="-103.833333333333,140.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.9226856561546" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.9226856561546"
                    Point2="0,59.9226856561546"
                    Point3="-4,59.9226856561546" />
                  <mssgle:LineSegment
                    End="-99.8333333333333,59.9226856561546" />
                  <mssgle:CubicBezierSegment
                    Point1="-99.8333333333333,59.9226856561546"
                    Point2="-103.833333333333,59.9226856561546"
                    Point3="-103.833333333333,63.9226856561546" />
                  <mssgle:LineSegment
                    End="-103.833333333333,140.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-100.108053385417,64.9226856561546,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[failed to update]"
          TopLeft="306,777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107,40"
              Start="0,0"
              End="107,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.25"
                    Point2="0,16.25"
                    Point3="4,16.25" />
                  <mssgle:LineSegment
                    End="103,16.25" />
                  <mssgle:CubicBezierSegment
                    Point1="103,16.25"
                    Point2="107,16.25"
                    Point3="107,20.25" />
                  <mssgle:LineSegment
                    End="107,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.04080078125,21.25,70.9183984375,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update.Paths[Derived Column Output]"
          TopLeft="467,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.5,46"
              Start="0,0"
              End="-25.5,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="-4,23" />
                  <mssgle:LineSegment
                    End="-21.5,23" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.5,23"
                    Point2="-25.5,23"
                    Point3="-25.5,27" />
                  <mssgle:LineSegment
                    End="-25.5,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\New Orders in AS400">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Reading Order#, Date &amp; Comments from Mapics\Order# Status Comments update\Quote Look Up in Daikin">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>