@model ProductModel

@{
    var activeQuote = ViewData["BasketQuoteId"] as long?;

    var user = ViewData["CurrentUser"] as UserSessionModel;

    if (activeQuote == null)
    {
        activeQuote = user.BasketQuoteId;
    }
    var quoteModel = ViewData["QuoteModel"] as QuoteModel;

    bool shouldShowAccessories = Model.Accessories.Count > 0 || (Model.IsSystem && (Model.GetSystemIndoorUnit.Accessories.Count > 0 || Model.GetSystemOutdoorUnit.Accessories.Count == 0));
}
<ul class="sub-tab-bar" style="margin-top: 20px;">
    <li class="active-tab" id="productOverviewTab">
        <a href="#productOverview">Overview</a>
    </li>

    @if (shouldShowAccessories)
    {
        <li id="productRelatedAccessoriesTab">
            <a href="#productRelatedAccessories">Related Accessories</a>
        </li>
    }

    <li id="technicalSpecificationTab">
        <a href="#technicalSpecification">Technical Specifications</a>
    </li>
</ul>

<div id="productOverview" class="sub-tab-view" style="display:none;">
    <div class="section t-flush">
        <div class="product-list">
            <div class="row">
                <form>
                    @Html.Partial("ItemQuantityBox", new QuoteItemModel { ProductId = Model.ProductId, QuoteId = activeQuote })
                </form>
                <div class="product-details" style="width: 245px;">
                    <div class="product-image lrg pull-left">
                        @Html.Partial("ProductImages", Model)
                    </div>
                    <div class="clearfix">&nbsp;</div>
                </div>
                <div class="product-ratings" style="margin-left: 255px;">
                    <p>
                        <span class="as-lnk">
                            Model No.:
                        </span>
                        <span class="pull-right">
                            @Model.ProductNumber
                        </span>
                    </p>
                    <p>
                        <span class="as-lnk">
                            Model Type:
                        </span>
                        <span class="pull-right">
                            @Model.ProductModelTypeDescription
                        </span>
                    </p>
                    @if (Model.CurrentUser.ShowPrices)
                    {
                        <p>
                            <span class="as-lnk">
                                Price:
                            </span>
                            <span class="pull-right">
                                @String.Format("{0:C}", Model.Price)
                            </span>
                        </p>
                    }
                    @if (Model.Specifications.GetDecimal("CoolingCapacityRated", "N2") != null)
                    {
                        <p>
                            <span class="as-lnk">
                                Rated Cooling Capacity:
                            </span>
                            <span class="pull-right">
                                @Model.Specifications.GetDecimal("CoolingCapacityRated", "N2")
                            </span>
                        </p>
                    }
                    @if (Model.Specifications.GetDecimal("HeatingCapacityRated", "N2") != null)
                    {
                        if (Model.SubmittalSheetTypeId != SubmittalSheetTypeEnum.SystemCooling)
                        {
                            <p>
                                <span class="as-lnk">
                                    Rated Heating Capacity:
                                </span>
                                <span class="pull-right">
                                    @Model.Specifications.GetDecimal("HeatingCapacityRated", "N2")
                                </span>
                            </p>
                        }
                    }

                    @Html.Partial("ProductSpecificationBars", Model)
                </div>
                <div class="row-end">&nbsp;</div>
            </div>
        </div>
    </div>
    <div class="section t-flush">
        <div class="row">
            <div class="r-col6" style="padding-right: 30px;">
                <table class="tbl grey"><thead><tr><th colspan="2">Related Documents</th></tr></thead></table>
                <div style="overflow-y: auto; max-height: 500px;">
                    @Html.Partial("ProductPartial/ProductDocumentListSmall")
                </div>
            </div>
            <div class="r-col6">
                <table class="tbl grey"><thead><tr><th colspan="2">Related Accessories</th></tr></thead></table>
                <div style="overflow-y: auto; max-height: 500px;">
                    @Html.Partial("ProductPartial/ProductAccessoryListSmall", Model.Accessories)
                </div>
                @if (Model.Accessories.Count > 0)
                {
                    <button type="button" class="context-btn" id="viewAllAccessoriesBtn">View all accessories</button>
                }

            </div>
            <div class="row-end">&nbsp;</div>
        </div>
    </div>
</div>
<div id="productRelatedAccessories" class="sub-tab-view" style="display:none;">
    @using (Html.BeginForm("ProductsAddToQuote", "ProductDashboard", FormMethod.Post))
    {
        <div class="section product-list">
            @for (int i = 0; i < Model.Accessories.Count; i++)
            {
                <div class="row" style="margin-bottom: 10px;">

                    @*@Html.Partial("ItemQuantityBox", new QuoteItemModel { ProductId = Model.Accessories[i].Accessory.ProductId, QuoteId = activeQuote })*@

                    @if (activeQuote != null && activeQuote != 0)
                    {
                        <div class="product-qty-picker" style="display: block;">
                            <p class="c-align">Quantity</p>

                            @Html.NumericStepperFor2(m => Model.Accessories[i].Accessory.Quantity, Model.Accessories[i].Accessory, i, new { @class = "c-align", @id = "Accessories_" + i + "__Accessory_ProductId" })
                            @Html.HiddenFor(m => Model.Accessories[i].Accessory.Quantity)
                        </div>
                    }

                    @Html.HiddenFor(m => m.Accessories[i].Accessory.ProductId,
                                    new { id = "Products_" + i + "_Product_ProductId", Name = "Products[" + i + "].Product.ProductId" }
                     )

                    <div class="product-details">
                        <div class="product-image pull-left">
                            <a style="padding:0; text-decoration:none;" href="@Url.Action("Product", new { ProductId = Model.Accessories[i].Accessory.ProductId })">
                                <img src="@Model.Accessories[i].Accessory.Image.URL" onerror="this.onerror = null; this.src = '/Images/NoImage.png'" />
                            </a>
                        </div>
                        <div class="product-model-info">
                            <p style=""><a style="padding:0;" href="@Url.Action("Product", new { ProductId = Model.Accessories[i].Accessory.ProductId })"><strong>@Model.Accessories[i].Accessory.Name</strong></a></p>
                            <p class="as-lnk">Model No.:</p>
                            <p>@Model.Accessories[i].Accessory.ProductNumber</p>
                            @if (user.ShowPrices)
                            {
                                <p class="as-lnk">Price:</p>
                                <p>@Html.DisplayFor(p => Model.Accessories[i].Accessory.Price)</p>
                            }
                            <p class="as-lnk">Quantity required:</p>
                            @if (@Model.Accessories[i].Accessory.Quantity == 0)
                            {
                                <p>@Model.Accessories[i].Quantity</p>
                            }
                            else
                            {
                                <p>@Model.Accessories[i].Accessory.Quantity</p>
                            }
                        </div>
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
            }

        </div>
        <div style="position:absolute;margin-left:870px;display:none;">
            <input type="submit" value="AddProducts"
                   class="context-btn submit"
                   id="hdnSubmitButton" />
        </div>

        if (activeQuote != null && activeQuote != 0)
        {
            <div style="position:absolute;" id="btnAddProducts">
                <input type="button" value="Adds Products To Quote" class="context-btn submit" />
            </div>
        }
    }
</div>

<div id="divAddProducts" class="pull-right" style="margin-right:198px;margin-top:-15px;">
</div>

<div id="technicalSpecification" class="sub-tab-view" style="display:none;">
    <div class="section">
        <table class="tbl grey"><thead><tr><th>Technical Specifications</th></tr></thead></table>
        <div style="overflow-y: auto;">
            <table class="tbl">
                <tbody>
                    @if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.Controllers ||
Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.RTU ||
Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.Packaged
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.ACAndHP ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CoilsAndAirHandler ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.GasFurnace ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialACAndHP ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialAH ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedACAndHP ||
// Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedDualFuel ||
//Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedGasElectric
)
                    {
                        @Html.Partial("ProductTechnicalSpecifications", Model.Specifications)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.Accessories)
                    {
                        @Html.Partial("ProductTechincalSpecifications_Accessories", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.Other)
                    {
                        @Html.Partial("ProductTechincalSpecifications_Other", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.SystemHP)
                    {
                        @Html.Partial("ProductTechnicalSpecifications_SystemHP", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.SystemCooling)
                    {
                        @Html.Partial("ProductTechnicalSpecifications_SystemCooling", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.AlthermaIndoor)
                    {
                        @Html.Partial("ProductTechnicalSpecifications_AlthermaIndoor", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.AlthermaOutdoor)
                    {
                        @Html.Partial("ProductTechnicalSpecifications_AlthermaOutdoor", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.AlthermaTank)
                    {
                        @Html.Partial("ProductTechnicalSpecifications_AlthermaTank", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.MultiSplitIndoor || Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIndoor)
                    {
                        @Html.Partial("SubmittalTemplate_Indoor_Performance", Model)
                        @Html.Partial("SubmittalTemplate_Indoor_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.MultiSplitOutdoor)
                    {
                        @Html.Partial("SubmittalTemplate_Outdoor_Performance", Model)
                        @Html.Partial("SubmittalTemplate_Outdoor_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIIIAirCooled)
                    {
                        @Html.Partial("SubmittalTemplate_AirCooled_Performance", Model)
                        @Html.Partial("SubmittalTemplate_AirCooled_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.VRVIIIWaterCooled)
                    {
                        @Html.Partial("SubmittalTemplate_WaterCooled_Performance", Model)
                        @Html.Partial("SubmittalTemplate_WaterCooled_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.Packaged)
                    {
                        @Html.Partial("SubmittalTemplate_Packaged_Performance", Model)
                        @Html.Partial("SubmittalTemplate_Packaged_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.ACAndHP)
                    {
                        @Html.Partial("SubmittalTemplate_ACandHP_Performance", Model)
                        @Html.Partial("SubmittalTemplate_ACandHP_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CoilsAndAirHandler)
                    {
                        @Html.Partial("SubmittalTemplate_CoilsAndAirHandlers_Performance", Model)
                        @Html.Partial("SubmittalTemplate_CoilsAndAirHandlers_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.GasFurnace)
                    {
                        @Html.Partial("SubmittalTemplate_GasFurnace_Performance", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialACAndHP)
                    {
                        @Html.Partial("SubmittalTemplate_CommercialACAndHP_Performance", Model)
                        @Html.Partial("SubmittalTemplate_CommercialACAndHP_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.CommercialAH)
                    {
                        @Html.Partial("SubmittalTemplate_CommercialAH_Performance", Model)
                        @Html.Partial("SubmittalTemplate_CommercialAH_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedACAndHP)
                    {
                        @Html.Partial("SubmittalTemplate_PackagedACAndHP_Performance", Model)
                        @Html.Partial("SubmittalTemplate_PackagedACAndHP_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedDualFuel)
                    {
                        @Html.Partial("SubmittalTemplate_PackagedDF_Performance", Model)
                        @Html.Partial("SubmittalTemplate_PackagedDF_UnitDetails", Model)
                    }
                    else if (Model.SubmittalSheetTypeId == SubmittalSheetTypeEnum.PackagedGasElectric)
                    {
                        @Html.Partial("SubmittalTemplate_PackagedGE_Performance", Model)
                        @Html.Partial("SubmittalTemplate_PackagedGE_UnitDetails", Model)
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        var btnAddProducts = $('#btnAddProducts');
        $('#divAddProducts').append(btnAddProducts);
        $('#btnAddProducts').hide();
    });

    $('#btnAddProducts').click(function () {
        var hdnSubmitButton = document.getElementById('hdnSubmitButton');
        hdnSubmitButton.click();
    });

    $('#productRelatedAccessoriesTab').on('click', function () {
        $('#btnAddProducts').show();
    });

    $('#technicalSpecificationTab').on('click', function () {
        $('#btnAddProducts').hide();
    });

    $('#productOverviewTab').on('click', function () {
        $('#btnAddProducts').hide();
    });

    (function () {
        function setTab(tab) {
            $(".sub-tab-bar li").each(function (tab) {
                $(this).removeClass("active-tab");
            });
            $("#" + tab + "Tab").addClass("active-tab");

            $(".sub-tab-view").hide();
            $("#" + tab).show();
        }

        function onHashChanged() {
            var tab = window.location.hash.substring(1);
            if (tab.length == 0) tab = "productOverview";

            setTab(tab);
        }

        window.addEventListener("hashchange", onHashChanged);
        onHashChanged();


        if ($('#accessoryFilters').length) {
            $('input[name="accessory-filter-type"]').on('change', function () {
                $('#indoorAccessories, #outdoorAccessories').hide();

                switch ($(this).val()) {
                    case "indoor":
                        $('#indoorAccessories').show();
                        break;
                    case "outdoor":
                        $('#outdoorAccessories').show();
                        break;
                    default:
                        $('#indoorAccessories, #outdoorAccessories').show();
                }
            });
        }

        $('#viewAllAccessoriesBtn').on('click', function () {
            window.location.hash = "productRelatedAccessories";
        });
    })();
</script>
