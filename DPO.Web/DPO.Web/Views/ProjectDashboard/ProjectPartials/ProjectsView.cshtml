@model ProjectsModel
@{
    var user = ViewData["CurrentUser"] as UserSessionModel;

    var canViewDiscountStatus = user.HasAccess(SystemAccessEnum.RequestDiscounts)
                    || user.HasAccess(SystemAccessEnum.ApproveDiscounts)
                    || user.HasAccess(SystemAccessEnum.ViewDiscountRequest);

    var canViewCommissionStatus = user.HasAccess(SystemAccessEnum.RequestCommission)
                 || user.HasAccess(SystemAccessEnum.ApprovedRequestCommission)
                 || user.HasAccess(SystemAccessEnum.ViewRequestedCommission);
}
<div class=" tbl-holder scroll-x">
    <table class="tbl" id="projects_table">
        <thead>
            <tr>
                <th class="actions"></th>
                <th class="alerts c-align"></th>
                <th id="projectname" aria-sort="none">@ResourceUI.ProjectName</th>
                <th id="activequotelink" aria-sort="none" data-hidecol="true">@ResourceUI.QuoteActive</th>


                <th id="businessname" aria-sort="none" data-hidecol="true">@ResourceUI.BusinessName</th>
                <th id="projectowner" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectOwner</th>
                <th id="customername" aria-sort="none" data-hidecol="true">@ResourceUI.Customer</th>
                <th id="projectid" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectRef</th>
                <th id="projectstatus" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectType</th>
                <th id="projectstatus" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectStatus</th>
                <th id="projectopenstatus" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectOpenStatus</th>

                @if (user.HasAccess(SystemAccessEnum.ViewPipelineData)
                    || user.HasAccess(SystemAccessEnum.EditPipelineData))
                {
                    <th id="projectleadstatus" aria-sort="none" data-hidecol="true">@ResourceUI.ProjectLeadStatus</th>
                }

                <th id="projectdate" aria-sort="none" data-hidecol="true">@ResourceUI.RegDate</th>
                <th id="biddate" aria-sort="none" data-hidecol="true">@ResourceUI.BidDate</th>
                <th id="estimatedclose" aria-sort="none" data-hidecol="true">@ResourceUI.EstClose</th>
                <th id="estimateddelivery" aria-sort="none" data-hidecol="true">@ResourceUI.EstDelivery</th>

                @if (user.ShowPrices)
                {
                    <th id="totallist" aria-sort="none" data-hidecol="true">
                        @ResourceUI.TotalList
                        <br />
                        @Model.TotalList.ToString("C0")
                    </th>
                    <th id="totalnet" aria-sort="none" data-hidecol="true">
                        @ResourceUI.TotalNet
                        <br />
                        @Model.TotalNet.ToString("C0")
                    </th>
                    <th id="totalsell" aria-sort="none" data-hidecol="true">
                        @ResourceUI.TotalSell
                        <br />
                        @Model.TotalSell.ToString("C0")
                    </th>
                }


                @*@if (canViewDiscountStatus)
                {
                    <th id="activedarlink" aria-sort="none" data-hidecol="true" style="white-space: normal">@ResourceUI.DiscountStatus</th>
                }

                @if (canViewCommissionStatus)
                {
                    <th id="activedarlink" aria-sort="none" data-hidecol="true" style="white-space: normal">@ResourceUI.CommissionStatus</th>
                }*@

                @if (canViewDiscountStatus || canViewCommissionStatus)
                {
                    <th id="activedarlink" aria-sort="none" data-hidecol="true" style="white-space: normal">DAR/COM STATUS</th>
                }

                <th id="vrvoutdoorcount" aria-sort="none" data-hidecol="true" style="white-space: normal">
                    @ResourceUI.VRVOutdoorUnitQty
                    <br />
                    @Model.TotalVRVOutdoorCount.ToString("N0")
                </th>
                <th id="splitcount" aria-sort="none" data-hidecol="true" style="white-space: normal">
                    @ResourceUI.SplitOutdoorUnitQty
                    <br />
                    @Model.TotalSplitCount.ToString("N0")
                </th>
            </tr>
        </thead>

        <tbody>
            @for (var i = 0; i < Model.Items.Count; i++)
            {
                var item = Model.Items[i];
                var rowstyle = "";

                if (item.ProjectStatusId == (int)ProjectStatusTypeEnum.ClosedLost) { rowstyle = "lost-row"; }
                if (item.ProjectStatusId == (int)ProjectStatusTypeEnum.ClosedWon) { rowstyle = "won-row"; }
                if (item.IsTransferred) { rowstyle = "transfered-row"; }
                if (item.Deleted == true) { rowstyle = " disabled-row"; }

                <tr class="@rowstyle">

                    <td class="actions">
                        <div>
                            @if (user.HasAccess(SystemAccessEnum.UndeleteProject) && item.Deleted)
                            {
                                <ul>
                                    <li>
                                        <a href="#" sc-projectid="@item.ProjectId" sc-ajaxpost="@Url.Action("ProjectUndelete")">@ResourceUI.ProjectUndelete</a>
                                    </li>
                                </ul>
                            }
                            else
                            {
                                <ul>
                                    <li>
                                        <a href="@Url.Action("ProjectExport", new { projectId = item.ProjectId })">@ResourceUI.ProjectExport</a>
                                    </li>
                                    @if (user.HasAccess(SystemAccessEnum.EditProject))
                                    {
                                        if (!item.IsTransferred)
                                        {
                                            <li>
                                                <a href="@Url.Action("ProjectEdit", new { projectId = item.ProjectId })">@ResourceUI.ProjectEdit</a>
                                            </li>
                                            if (user.HasAccess(SystemAccessEnum.TransferProject))
                                            {
                                                <li>
                                                    <a href="#" data-confirm="transferProject" data-sc-ajaxpost="@Url.Action("ProjectTransfer")" data-sc-projectid="@item.ProjectId">@ResourceUI.ProjectTransfer</a>

                                                </li>
                                            }
                                            <li>
                                                <a href="#" data-confirm="deleteProject" data-sc-ajaxpost="@Url.Action("Projectdelete")" data-sc-projectid="@item.ProjectId">@ResourceUI.ProjectDelete</a>
                                            </li>
                                        }

                                        @*
                                                Commented out to hide the Project Duplicate link. This can be reactivated or reuse where appropriate.<li>
                                                <a href="@Url.Action("ProjectDuplicate", new { projectId = item.ProjectId })">@ResourceUI.ProjectDuplicate</a>
                                            </li>*@
                                    }
                                </ul>
                            }
                        </div>
                    </td>

                    <td class="alerts">
                        @if (item.ProjectStatusId == (int)ProjectStatusTypeEnum.Open)
                        {
                            if (item.Alert && !item.IsTransferred)
                            {
                                <div>
                                    <img src="~/Images/alert-icon.png">
                                    <div class="tooltip">
                                        @item.AlertText
                                        <img src="~/Images/tooltip-tail.png" />
                                    </div>
                                </div>
                            }
                        }
                        @if (item.IsTransferred)
                        {
                            <div>
                                <img src="~/Images/icon_lock.png">
                                <div class="tooltip">
                                    Project has been transferred.
                                    <img src="~/Images/tooltip-tail.png" />
                                </div>
                            </div>
                        }

                        @if (item.ModelSaveState == (int)SaveStateEnum.Saved)
                        {
                            <div>
                                <img src="~/Images/tick.png" alt="Saved" />
                                <div class="tooltip">
                                    Project has been saved.
                                    <img src="~/Images/tooltip-tail.png" />
                                </div>
                            </div>
                        }
                        else if (item.ModelSaveState == (int)SaveStateEnum.Error)
                        {
                            <div>
                                <img src="~/Images/cross.png" alt="Error" />
                                <div class="tooltip">
                                    @if (item.Messages != null)
                                    {
                                        foreach (var msg in item.Messages.Items)
                                        {
                                            @msg.Text
                                            <br />
                                        }
                                    }
                                    <img src="~/Images/tooltip-tail.png" />
                                </div>
                            </div>
                        }
                    </td>
                    <td style="white-space: normal">
                        @Html.ActionLink(item.Name, "Project", new { ProjectId = item.ProjectId })
                    </td>
                    <td style="white-space: normal">
                        @if (item.ActiveQuoteSummary == null)
                        {
                            @Html.Display("No Active Quote");
                        }
                        else
                        {
                            @Html.ActionLink(item.ActiveQuoteSummary.Title, "QuoteItems", new
                       {
                           QuoteId = item.ActiveQuoteSummary.QuoteId
                       });
                        }
                    </td>
                    <td style="white-space: normal">
                        @item.BusinessName
                    </td>
                    <td style="white-space: normal">
                        @item.ProjectOwner
                    </td>
                    <td style="white-space: normal">
                        @item.CustomerName
                    </td>
                    <td>
                        @item.ProjectId
                    </td>
                    <td>
                        @item.ProjectType
                    </td>
                    <td>
                        @item.ProjectStatus
                    </td>
                    <td>
                        @item.ProjectOpenStatus
                    </td>
                    @if (user.HasAccess(SystemAccessEnum.ViewPipelineData)
                    || user.HasAccess(SystemAccessEnum.EditPipelineData))
                    {
                        <td>
                            @item.ProjectLeadStatus
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(q => q.Items[i].ProjectDate)
                    </td>
                    <td>
                        @Html.DisplayFor(q => q.Items[i].BidDate)
                    </td>
                    <td>
                        <span class="@((item.EstimatedClose < DateTime.Now) ? "invalid" : "")">
                            @Html.DisplayFor(m => m.Items[i].EstimatedClose)
                        </span>
                    </td>
                    <td>
                        @Html.DisplayFor(q => q.Items[i].EstimatedDelivery)
                    </td>

                    @if (user.ShowPrices)
                    {
                        <td>
                            @Html.DisplayFor(q => q.Items[i].ActiveQuoteSummary.TotalList)
                        </td>
                        <td>
                            @Html.DisplayFor(q => q.Items[i].ActiveQuoteSummary.TotalNet)
                        </td>
                        <td>
                            @Html.DisplayFor(q => q.Items[i].ActiveQuoteSummary.TotalSell)
                        </td>

                    }

                    @if (canViewDiscountStatus || canViewCommissionStatus)
                    {
                        var cr = Model.Items[i].ActiveCommissionRequestSummary;
                        var dr = Model.Items[i].ActiveDiscountRequestSummary;
                        
                        <td>
                            @if (cr != null && !String.IsNullOrWhiteSpace(cr.CommissionRequestStatusTypeDescription) && cr.CommissionRequestStatusTypeId != (byte)CommissionRequestStatusTypeEnum.NewRecord)
                            {
                                @Html.ActionLink(cr.CommissionRequestStatusTypeDescription, "CommissionRequest", new { commissionRequestId = cr.CommissionRequestId })
                            }
                            @if (dr != null && !String.IsNullOrWhiteSpace(dr.DiscountRequestStatusTypeDescription))
                            {
                                @Html.ActionLink(dr.DiscountRequestStatusTypeDescription, "DiscountRequest", new { discountRequestId = dr.DiscountRequestId })
                            }
                        </td>
                    }

                    <td>
                        @Html.DisplayFor(q => q.Items[i].ActiveQuoteSummary.VRVOutdoorCount)
                    </td>
                    <td>
                        @Html.DisplayFor(q => q.Items[i].ActiveQuoteSummary.SplitCount)
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<div class="pager">@Html.Pager(Model, true)</div>
<script>
    $(function () {
        tablehelper.setColumnIds('projects_table').enableAlertCellPopups();
       
        //$('#btnStopEditing').on("click", function(){
        //    var count = 0;
        //    alert(count);
        //    $('tbl-column-opts').find("li").each(function (index) {
        //        var input = $(this).child();
        //        alert($(input).attr('data-col-id'));
        //        if($(input).prop('checked', true))
        //        {
        //            count++;
        //        }
        //    })

        //    alert(count);
        //});
    });

</script>