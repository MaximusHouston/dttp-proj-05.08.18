@model LibraryDocumentEditModel

<h1>Add New Documents</h1>
<h4 class="single-line" id="currentFolderLocation"></h4>

@using (Html.BeginForm("EditLibraryDocument", "CityCMS", FormMethod.Post, new { @id = "library_document_edit_form", @class = "details-list", enctype = "multipart/form-data", target = "document-edit-iframe", style = "display:none;" }))
{
    @Html.HiddenFor(m => m.id, new { @id = "editing_document_id" })
    @Html.HiddenFor(m => m.path)
    @Html.HiddenFor(m => m.thumb)
    @Html.HiddenFor(m => m.DirectoryId)

    <label>Document Name</label>
    @Html.TextBoxFor(m => m.name, new { @class="full" })
    <br/>
    if(Model.path != null)
    {
        string currentFile = Model.path.Remove(0, Model.path.LastIndexOf("/") + 1);
        <p style="width: 100%; font-size: 0.9em;">Current file: <a href="/@Model.path" target="_blank">@currentFile</a></p>
    }
    <input id="uploaddocument" type="file" name="uploaddocument" style="width: 100%;">
    <br/>
    <div>
        <br />
       
        @if (Model.id > 0)
        {
            <input type="submit" class="submit-btn" id="library_document_modal_add_btn" value="Update">
        }
        else
        {
            <input type="submit" class="submit-btn" id="library_document_modal_add_btn" value="Add">
        }
    </div>
}

<script src="~/Scripts/dropzone.js"></script>
<script>
    (function()
    {
        var uploading = false;
        var dirId = @Model.DirectoryId;
        var documents = [];

        Dropzone.autoDiscover = false;
        var dropzone = new Dropzone("#dropzone", 
            {
                url: "/CityCMS/LibraryFileUpload",
                createImageThumbnails: false,
                autoProcessQueue: false,
                fallback:notSupported,
                clickable:false,
                dictDefaultMessage:""
            });
     

        dropzone.on("drop", function (e)
        {
            if (uploading) return;
            uploading = true;
            $("#dropzone, #library_link_edit_form").hide();
            $("#file-uploads").show();
            $(".close-btn").hide(200);

            // send up file names to server to get document ids
            var files = [];
            for (var i = 0; i < e.dataTransfer.files.length; i++)
            {
                files.push(e.dataTransfer.files[i].name);
            }
            // send request
            $.ajax("/CityCMS/LibraryUploadGetIds",
            {
                type: "POST",
                data: { files: files, directoryId:dirId },
                dataType: "json",
                traditional: true,
                error: function()
                {
                    console.log("Error uploading file names");
                },
                success: parseResponse
            });
        });

        dropzone.on("dragenter", function (e) { $("#dropzone").addClass("dropzone-over"); });
        dropzone.on("dragleave", function (e) { $("#dropzone").removeClass("dropzone-over"); });

        function parseResponse(json)
        {
            // store response
            documents = json.documents;
            // build table so user can edit titles whilst uploading
            createTable();
            // begin file upload
            dropzone.processQueue();
        }
        
        function createTable()
        {
            var container = document.getElementById("file-uploads");
            container.style.maxHeight = "500px";
            container.style.overflowY = "auto";
            var form = document.createElement("form");
            form.action = "LibraryDocumentTitlesUpdate";
            form.method = "POST";
            form.style.width = "95%";

            var table = document.createElement("table");
            $(table).addClass("wrap");
            for(var i = 0; i < documents.length; i++)
            {
                var doc = documents[i];
                var tr = document.createElement("tr");

                // file name
                var td = document.createElement("td");
                td.innerHTML = "<p>" + doc.file + "&nbsp;&nbsp;</p>";
                tr.appendChild(td);

                //hidden id
                var input = document.createElement("input");
                input.type = "hidden";
                input.value = doc.id;
                input.id = input.name = "documents[" + i + "].id";
                td.appendChild(input);

                // input text
                td = document.createElement("td");
                input = document.createElement("input");
                input.type = "text";
                input.placeholder = "Document Title (Optional)";
                input.name = input.id = "documents[" + i + "].name";
                td.appendChild(input);
                tr.appendChild(td);

                // progress bar
                var bar = document.createElement("div");
                bar.id = "progress_bar_" + doc.id;
                $(bar).addClass("upload-progress-bar");
                td.appendChild(bar);

                // user feedback
                td = document.createElement("td");
                td.id = "cell_" + doc.id;
                td.innerHTML = '<img src="/Images/loading.gif" width="21" height="21" style="margin-left:4px;" />';
                tr.appendChild(td);
                table.appendChild(tr);
            }
            form.appendChild(table);

            var spacer = document.createElement("br");
            form.appendChild(spacer);

            var _div = document.createElement("div");
            $(_div).addClass('c-align');

            form.appendChild(_div);

            var saveBtn = document.createElement("input");
            $(saveBtn).addClass('btn');
            saveBtn.type = "submit";
            saveBtn.value = "Save and close";
            _div.appendChild(saveBtn);

            container.appendChild(form);

            $(saveBtn).on("click", function(e)
            {
                e.preventDefault();
                $(saveBtn).hide();

                $.post($(form).attr('action'), $(form).serialize(), function(json) 
                {
                    if($('#library_document_modal').is(':visible')) $('#library_document_modal').fadeOut(200);
                    $.get("LibraryDirectoryDocuments", { dirId: dirId }, function (result)
                    {
                        $('#UserList').empty().append(result); // refresh pane
                    });
                    $(".close-btn").show();
                }, "json");

                return false;
            });
        }

        dropzone.on("sending", function(file, xhr, formData)
        {
            var f = getDocumentByFileName(file.name);
            if(f != null)
            {
                formData.append("documentId", f.id);
            }
        });

        dropzone.on("error", function (file, response)
        {
            response = JSON.parse(response);
            $("#cell_" + response.id).html('<img src="/Images/cross.png" width="24" height="24" style="margin-left:4px;" />');
        });

        dropzone.on("success", function (file, response)
        {
            response = JSON.parse(response);
            $("#cell_" + response.id).html('<img src="/Images/tick.png" width="24" height="24" style="margin-left:4px;" />');
        });

        dropzone.on("complete", function(file)
        {
            dropzone.processQueue();
        });

        dropzone.on("queuecomplete", function ()
        {
            uploading = false;
        });

        dropzone.on("uploadprogress", function (file, progress)
        {
            var doc = getDocumentByFileName(file.name);
            if(doc != null)
            {
                var bar = document.getElementById("progress_bar_" + doc.id);
                if(bar)
                {
                    bar.style.width = ((progress / 100) * 280) + "px";
                }
            }
        });

        function getDocumentByFileName(fileName)
        {
            for(var i = 0; i < documents.length; i++)
            {
                if(documents[i].file == fileName) return documents[i];
            }
            return null;
        }

        function notSupported()
        {
            $("#dropzone").hide();
            $("#library_document_edit_form").show();
        }

        //link submit code
        $('#library_link_edit_form').on("submit", function(e)
        {
            e.preventDefault();

            $.post($(this).attr('action'), $(this).serialize(), function(response) 
            {
                $('#library_document_modal [class^="pagemessage"]').remove();

                if (response.error)
                {
                    $('#library_document_modal h1').after('<div class="pagemessage-error h-slim">' + response.error + '</div>');
                    return;
                }
                else
                {
                    if($('#library_document_modal').is(':visible')) $('#library_document_modal').fadeOut(200);
                    $.get("LibraryDirectoryDocuments", { dirId: dirId }, function (result)
                    {
                        $('#UserList').empty().append(result); // refresh pane
                    });
                }

                $(".close-btn").show();
            }, "json");

            return false;
        });
    })();
</script>
<h4>Upload Physical file(s)</h4>
<div id="dropzone" class="dropzone">
    <p>Drag and drop files into here to upload</p>
</div>
<div id="file-uploads">
</div>
<br/>

@using (Html.BeginForm("EditLibraryDocument", "CityCMS", FormMethod.Post, new { @id = "library_link_edit_form", @class = "details-list" }))
{
    @Html.HiddenFor(m => m.id)
    @Html.HiddenFor(m => m.thumb)
    @Html.HiddenFor(m => m.DirectoryId)

    <h4 style="padding-bottom: 10px;">Or add a link</h4>

    <div class="r-col6">
        <label>Name</label>
        @Html.TextBoxFor(m => m.name, new { @class = "full" })
    </div>
    <div class="r-col6">
        <label>Path <span style="font-size:0.85em;">(starting with http:// or https:// or ftp://)</span></label>
        @Html.TextBoxFor(m => m.path, new { @class = "full" })
    </div>

    <a class="btn cancel-btn" href="#">Cancel</a>
    <input type="submit" class="submit-btn" value="Add Link">
}